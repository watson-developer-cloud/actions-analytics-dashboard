{"ast":null,"code":"import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js"],"names":["toDate","startOfUTCISOWeek","getUTCISOWeekYear","dirtyDate","arguments","length","TypeError","date","year","getUTCFullYear","fourthOfJanuaryOfNextYear","Date","setUTCFullYear","setUTCHours","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B,C,CAA+D;AAC/D;;AAEA,eAAe,SAASC,iBAAT,CAA2BC,SAA3B,EAAsC;AACnD,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CAAc,mCAAmCF,SAAS,CAACC,MAA7C,GAAsD,UAApE,CAAN;AACD;;AAED,MAAIE,IAAI,GAAGP,MAAM,CAACG,SAAD,CAAjB;AACA,MAAIK,IAAI,GAAGD,IAAI,CAACE,cAAL,EAAX;AACA,MAAIC,yBAAyB,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAAhC;AACAD,EAAAA,yBAAyB,CAACE,cAA1B,CAAyCJ,IAAI,GAAG,CAAhD,EAAmD,CAAnD,EAAsD,CAAtD;AACAE,EAAAA,yBAAyB,CAACG,WAA1B,CAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C;AACA,MAAIC,eAAe,GAAGb,iBAAiB,CAACS,yBAAD,CAAvC;AACA,MAAIK,yBAAyB,GAAG,IAAIJ,IAAJ,CAAS,CAAT,CAAhC;AACAI,EAAAA,yBAAyB,CAACH,cAA1B,CAAyCJ,IAAzC,EAA+C,CAA/C,EAAkD,CAAlD;AACAO,EAAAA,yBAAyB,CAACF,WAA1B,CAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C;AACA,MAAIG,eAAe,GAAGf,iBAAiB,CAACc,yBAAD,CAAvC;;AAEA,MAAIR,IAAI,CAACU,OAAL,MAAkBH,eAAe,CAACG,OAAhB,EAAtB,EAAiD;AAC/C,WAAOT,IAAI,GAAG,CAAd;AACD,GAFD,MAEO,IAAID,IAAI,CAACU,OAAL,MAAkBD,eAAe,CAACC,OAAhB,EAAtB,EAAiD;AACtD,WAAOT,IAAP;AACD,GAFM,MAEA;AACL,WAAOA,IAAI,GAAG,CAAd;AACD;AACF","sourcesContent":["import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}"]},"metadata":{},"sourceType":"module"}