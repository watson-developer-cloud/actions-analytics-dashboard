{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Component } from '../component';\nimport { DOMUtils } from '../../services';\nimport { Events, ColorClassNameTypes } from '../../interfaces';\nimport { Tools } from '../../tools'; // D3 Imports\n\nimport { hierarchy as d3Hierarchy, treemap as d3Treemap } from 'd3-hierarchy';\nimport { sum } from 'd3-array';\nimport { hsl, color } from 'd3-color';\nimport { select } from 'd3-selection'; // Carbon colors\n\nimport { colors } from '@carbon/colors';\n\nvar findColorShade = function findColorShade(hex) {\n  if (!hex) {\n    return null;\n  }\n\n  for (var _i = 0, _a = Object.keys(colors); _i < _a.length; _i++) {\n    var colorName = _a[_i];\n    var colorShades = colors[colorName];\n\n    for (var _b = 0, _c = Object.keys(colorShades); _b < _c.length; _b++) {\n      var colorShadeLevel = _c[_b];\n      var colorShade = colorShades[colorShadeLevel];\n\n      if (colorShade === hex) {\n        return colorShadeLevel;\n      }\n    }\n  }\n\n  return null;\n};\n\nvar textFillColor = function textFillColor() {\n  var correspondingLeaf = select(this.parentNode).select('rect.leaf');\n  var correspondingLeafFill = getComputedStyle(correspondingLeaf.node(), null).getPropertyValue('fill');\n  var cl = color(correspondingLeafFill);\n  var colorShade;\n\n  if (cl) {\n    colorShade = findColorShade(cl ? cl.hex() : null);\n  }\n\n  if (colorShade === null || colorShade === undefined) {\n    var lightness = hsl(cl).l;\n    colorShade = Math.abs(lightness * 100 - 100);\n  }\n\n  return colorShade > 50 ? 'white' : 'black';\n};\n\nvar uidCounter = 0;\n\nvar Treemap =\n/** @class */\nfunction (_super) {\n  __extends(Treemap, _super);\n\n  function Treemap() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'treemap';\n\n    _this.handleLegendOnHover = function (event) {\n      var hoveredElement = event.detail.hoveredElement;\n\n      _this.parent.selectAll(\"g[data-name='leaf']\").transition(_this.services.transitions.getTransition('legend-hover-treemap')).attr('opacity', function (d) {\n        return d.parent.data.name === hoveredElement.datum()['name'] ? 1 : 0.3;\n      });\n    };\n\n    _this.handleLegendMouseOut = function (event) {\n      _this.parent.selectAll(\"g[data-name='leaf']\").transition(_this.services.transitions.getTransition('legend-mouseout-treemap')).attr('opacity', 1);\n    };\n\n    return _this;\n  }\n\n  Treemap.prototype.init = function () {\n    var events = this.services.events; // Highlight correct circle on legend item hovers\n\n    events.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover); // Un-highlight circles on legend item mouseouts\n\n    events.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n  };\n\n  Treemap.prototype.render = function (animate) {\n    var _this = this;\n\n    if (animate === void 0) {\n      animate = true;\n    }\n\n    var svg = this.getContainerSVG();\n    var allData = this.model.getData();\n    var displayData = this.model.getDisplayData();\n    var options = this.model.getOptions();\n    var windowLocation = Tools.getProperty(window, 'location');\n\n    var _a = DOMUtils.getSVGElementSize(this.parent, {\n      useAttrs: true\n    }),\n        width = _a.width,\n        height = _a.height;\n\n    var hierarchy = d3Hierarchy({\n      name: options.title || 'Treemap',\n      children: displayData\n    }).sum(function (d) {\n      return d.value;\n    }).sort(function (a, b) {\n      return b.value - a.value;\n    });\n    var total = sum(allData, function (d) {\n      return sum(d.children, function (child) {\n        return child.value;\n      });\n    });\n    var root = d3Treemap().size([width, height]).paddingInner(1).paddingOuter(0).round(true)(hierarchy);\n    var transitions = this.services.transitions;\n    var leafGroups = svg.selectAll(\"g[data-name='leaf']\").data(root.leaves(), function (leaf) {\n      return leaf.data.name;\n    }); // Remove leaf groups that need to be removed\n\n    leafGroups.exit().attr('opacity', 0).remove(); // Add the leaf groups that need to be introduced\n\n    var enteringLeafGroups = leafGroups.enter().append('g').attr('data-name', 'leaf').attr('data-uid', function () {\n      return uidCounter++;\n    });\n    var allLeafGroups = enteringLeafGroups.merge(leafGroups);\n    allLeafGroups.attr('data-name', 'leaf').transition(transitions.getTransition('treemap-group-update', animate)).attr('transform', function (d) {\n      return \"translate(\" + d.x0 + \",\" + d.y0 + \")\";\n    });\n    var rects = allLeafGroups.selectAll('rect.leaf').data(function (d) {\n      return [d];\n    });\n    rects.exit().attr('width', 0).attr('height', 0).remove();\n    var enteringRects = rects.enter().append('rect').classed('leaf', true);\n    enteringRects.merge(rects).attr('width', 0).attr('height', 0).attr('id', function () {\n      var uid = select(this.parentNode).attr('data-uid');\n      return options.style.prefix + \"-leaf-\" + uid;\n    }).attr('class', function (d) {\n      while (d.depth > 1) {\n        d = d.parent;\n      }\n\n      return _this.model.getColorClassName({\n        classNameTypes: [ColorClassNameTypes.FILL],\n        dataGroupName: d.data.name,\n        originalClassName: 'leaf'\n      });\n    }).transition(this.services.transitions.getTransition('treemap-leaf-update-enter', animate)).attr('width', function (d) {\n      return d.x1 - d.x0;\n    }).attr('height', function (d) {\n      return d.y1 - d.y0;\n    }).style('fill', function (d) {\n      while (d.depth > 1) {\n        d = d.parent;\n      }\n\n      return _this.model.getFillColor(d.data.name);\n    }); // Update all clip paths\n\n    allLeafGroups.selectAll('clipPath').data(function (d) {\n      if (d.data.showLabel !== true) {\n        return [];\n      }\n\n      return [1];\n    }, function (d) {\n      return d;\n    }).join(function (enter) {\n      enter.append('clipPath').attr('id', function () {\n        var uid = select(this.parentNode).attr('data-uid');\n        return options.style.prefix + \"-clip-\" + uid;\n      }).append('use').attr('xlink:href', function () {\n        var uid = select(this.parentNode.parentNode).attr('data-uid');\n        var leafID = options.style.prefix + \"-leaf-\" + uid;\n        return new URL(\"#\" + leafID, windowLocation) + '';\n      });\n    }, function (update) {\n      return null;\n    }, function (exit) {\n      return exit.remove();\n    }); // Update all titles\n\n    allLeafGroups.selectAll('text').data(function (d) {\n      if (d.data.showLabel !== true) {\n        return [];\n      }\n\n      var parent = d;\n\n      while (parent.depth > 1) {\n        parent = parent.parent;\n      }\n\n      var color = hsl(_this.model.getFillColor(parent.data.name));\n      return [{\n        text: d.data.name,\n        color: color.l < 0.5 ? 'white' : 'black'\n      }];\n    }, function (d) {\n      return d;\n    }).join(function (enter) {\n      var addedText = enter.append('text').text(function (d) {\n        return d.text;\n      }).style('fill', textFillColor).attr('x', 7).attr('y', 18);\n\n      if (windowLocation) {\n        addedText.attr('clip-path', function () {\n          var uid = select(this.parentNode).attr('data-uid');\n          var clipPathID = options.style.prefix + \"-clip-\" + uid;\n          return \"url(\" + (new URL(\"#\" + clipPathID, windowLocation) + '') + \")\";\n        });\n      }\n    }, function (update) {\n      return update.text(function (d) {\n        return d.text;\n      }).style('fill', textFillColor);\n    }, function (exit) {\n      return exit.remove();\n    }); // Add event listeners to elements drawn\n\n    this.addEventListeners();\n  };\n\n  Treemap.prototype.addEventListeners = function () {\n    var self = this;\n    this.parent.selectAll('rect.leaf').on('mouseover', function (datum) {\n      var hoveredElement = select(this);\n      var fillColor = getComputedStyle(this, null).getPropertyValue('fill');\n      var parent = datum;\n\n      while (parent.depth > 1) {\n        parent = parent.parent;\n      }\n\n      hoveredElement.transition(self.services.transitions.getTransition('graph_element_mouseover_fill_update')).style('fill', function (d) {\n        var customColor = self.model.getFillColor(d.parent.data.name);\n\n        if (customColor) {\n          fillColor = customColor;\n        }\n\n        return color(fillColor).darker(0.7).toString();\n      }); // Show tooltip\n\n      self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n        hoveredElement: hoveredElement,\n        items: [{\n          color: fillColor,\n          label: parent.data.name,\n          bold: true\n        }, {\n          label: datum.data.name,\n          value: datum.data.value\n        }]\n      }); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Treemap.LEAF_MOUSEOVER, {\n        element: hoveredElement,\n        datum: datum\n      });\n    }).on('mousemove', function (datum) {\n      var hoveredElement = select(this); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Treemap.LEAF_MOUSEMOVE, {\n        element: hoveredElement,\n        datum: datum\n      });\n      self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n    }).on('click', function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Treemap.LEAF_CLICK, {\n        element: select(this),\n        datum: datum\n      });\n    }).on('mouseout', function (datum) {\n      var hoveredElement = select(this);\n      hoveredElement.classed('hovered', false);\n      var parent = datum;\n\n      while (parent.depth > 1) {\n        parent = parent.parent;\n      }\n\n      hoveredElement.transition(self.services.transitions.getTransition('graph_element_mouseout_fill_update')).style('fill', function (d) {\n        return self.model.getFillColor(d.parent.data.name);\n      }); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Treemap.LEAF_MOUSEOUT, {\n        element: hoveredElement,\n        datum: datum\n      }); // Hide tooltip\n\n      self.services.events.dispatchEvent(Events.Tooltip.HIDE, {\n        hoveredElement: hoveredElement\n      });\n    });\n  };\n\n  return Treemap;\n}(Component);\n\nexport { Treemap };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/components/graphs/treemap.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Component","DOMUtils","Events","ColorClassNameTypes","Tools","hierarchy","d3Hierarchy","treemap","d3Treemap","sum","hsl","color","select","colors","findColorShade","hex","_i","_a","keys","length","colorName","colorShades","_b","_c","colorShadeLevel","colorShade","textFillColor","correspondingLeaf","parentNode","correspondingLeafFill","getComputedStyle","node","getPropertyValue","cl","undefined","lightness","l","Math","abs","uidCounter","Treemap","_super","_this","apply","arguments","type","handleLegendOnHover","event","hoveredElement","detail","parent","selectAll","transition","services","transitions","getTransition","attr","data","name","datum","handleLegendMouseOut","init","events","addEventListener","Legend","ITEM_HOVER","ITEM_MOUSEOUT","render","animate","svg","getContainerSVG","allData","model","getData","displayData","getDisplayData","options","getOptions","windowLocation","getProperty","window","getSVGElementSize","useAttrs","width","height","title","children","value","sort","a","total","child","root","size","paddingInner","paddingOuter","round","leafGroups","leaves","leaf","exit","remove","enteringLeafGroups","enter","append","allLeafGroups","merge","x0","y0","rects","enteringRects","classed","uid","style","prefix","depth","getColorClassName","classNameTypes","FILL","dataGroupName","originalClassName","x1","y1","getFillColor","showLabel","join","leafID","URL","update","text","addedText","clipPathID","addEventListeners","self","on","fillColor","customColor","darker","toString","dispatchEvent","Tooltip","SHOW","items","label","bold","LEAF_MOUSEOVER","element","LEAF_MOUSEMOVE","MOVE","LEAF_CLICK","LEAF_MOUSEOUT","HIDE"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Component } from '../component';\nimport { DOMUtils } from '../../services';\nimport { Events, ColorClassNameTypes } from '../../interfaces';\nimport { Tools } from '../../tools';\n// D3 Imports\nimport { hierarchy as d3Hierarchy, treemap as d3Treemap } from 'd3-hierarchy';\nimport { sum } from 'd3-array';\nimport { hsl, color } from 'd3-color';\nimport { select } from 'd3-selection';\n// Carbon colors\nimport { colors } from '@carbon/colors';\nvar findColorShade = function (hex) {\n    if (!hex) {\n        return null;\n    }\n    for (var _i = 0, _a = Object.keys(colors); _i < _a.length; _i++) {\n        var colorName = _a[_i];\n        var colorShades = colors[colorName];\n        for (var _b = 0, _c = Object.keys(colorShades); _b < _c.length; _b++) {\n            var colorShadeLevel = _c[_b];\n            var colorShade = colorShades[colorShadeLevel];\n            if (colorShade === hex) {\n                return colorShadeLevel;\n            }\n        }\n    }\n    return null;\n};\nvar textFillColor = function () {\n    var correspondingLeaf = select(this.parentNode).select('rect.leaf');\n    var correspondingLeafFill = getComputedStyle(correspondingLeaf.node(), null).getPropertyValue('fill');\n    var cl = color(correspondingLeafFill);\n    var colorShade;\n    if (cl) {\n        colorShade = findColorShade(cl ? cl.hex() : null);\n    }\n    if (colorShade === null || colorShade === undefined) {\n        var lightness = hsl(cl).l;\n        colorShade = Math.abs(lightness * 100 - 100);\n    }\n    return colorShade > 50 ? 'white' : 'black';\n};\nvar uidCounter = 0;\nvar Treemap = /** @class */ (function (_super) {\n    __extends(Treemap, _super);\n    function Treemap() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'treemap';\n        _this.handleLegendOnHover = function (event) {\n            var hoveredElement = event.detail.hoveredElement;\n            _this.parent\n                .selectAll(\"g[data-name='leaf']\")\n                .transition(_this.services.transitions.getTransition('legend-hover-treemap'))\n                .attr('opacity', function (d) {\n                return d.parent.data.name === hoveredElement.datum()['name'] ? 1 : 0.3;\n            });\n        };\n        _this.handleLegendMouseOut = function (event) {\n            _this.parent\n                .selectAll(\"g[data-name='leaf']\")\n                .transition(_this.services.transitions.getTransition('legend-mouseout-treemap'))\n                .attr('opacity', 1);\n        };\n        return _this;\n    }\n    Treemap.prototype.init = function () {\n        var events = this.services.events;\n        // Highlight correct circle on legend item hovers\n        events.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n        // Un-highlight circles on legend item mouseouts\n        events.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n    };\n    Treemap.prototype.render = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var svg = this.getContainerSVG();\n        var allData = this.model.getData();\n        var displayData = this.model.getDisplayData();\n        var options = this.model.getOptions();\n        var windowLocation = Tools.getProperty(window, 'location');\n        var _a = DOMUtils.getSVGElementSize(this.parent, {\n            useAttrs: true,\n        }), width = _a.width, height = _a.height;\n        var hierarchy = d3Hierarchy({\n            name: options.title || 'Treemap',\n            children: displayData,\n        })\n            .sum(function (d) { return d.value; })\n            .sort(function (a, b) { return b.value - a.value; });\n        var total = sum(allData, function (d) {\n            return sum(d.children, function (child) { return child.value; });\n        });\n        var root = d3Treemap()\n            .size([width, height])\n            .paddingInner(1)\n            .paddingOuter(0)\n            .round(true)(hierarchy);\n        var transitions = this.services.transitions;\n        var leafGroups = svg\n            .selectAll(\"g[data-name='leaf']\")\n            .data(root.leaves(), function (leaf) { return leaf.data.name; });\n        // Remove leaf groups that need to be removed\n        leafGroups.exit().attr('opacity', 0).remove();\n        // Add the leaf groups that need to be introduced\n        var enteringLeafGroups = leafGroups\n            .enter()\n            .append('g')\n            .attr('data-name', 'leaf')\n            .attr('data-uid', function () { return uidCounter++; });\n        var allLeafGroups = enteringLeafGroups.merge(leafGroups);\n        allLeafGroups\n            .attr('data-name', 'leaf')\n            .transition(transitions.getTransition('treemap-group-update', animate))\n            .attr('transform', function (d) { return \"translate(\" + d.x0 + \",\" + d.y0 + \")\"; });\n        var rects = allLeafGroups.selectAll('rect.leaf').data(function (d) { return [d]; });\n        rects.exit().attr('width', 0).attr('height', 0).remove();\n        var enteringRects = rects\n            .enter()\n            .append('rect')\n            .classed('leaf', true);\n        enteringRects\n            .merge(rects)\n            .attr('width', 0)\n            .attr('height', 0)\n            .attr('id', function () {\n            var uid = select(this.parentNode).attr('data-uid');\n            return options.style.prefix + \"-leaf-\" + uid;\n        })\n            .attr('class', function (d) {\n            while (d.depth > 1)\n                d = d.parent;\n            return _this.model.getColorClassName({\n                classNameTypes: [ColorClassNameTypes.FILL],\n                dataGroupName: d.data.name,\n                originalClassName: 'leaf',\n            });\n        })\n            .transition(this.services.transitions.getTransition('treemap-leaf-update-enter', animate))\n            .attr('width', function (d) { return d.x1 - d.x0; })\n            .attr('height', function (d) { return d.y1 - d.y0; })\n            .style('fill', function (d) {\n            while (d.depth > 1)\n                d = d.parent;\n            return _this.model.getFillColor(d.data.name);\n        });\n        // Update all clip paths\n        allLeafGroups\n            .selectAll('clipPath')\n            .data(function (d) {\n            if (d.data.showLabel !== true) {\n                return [];\n            }\n            return [1];\n        }, function (d) { return d; })\n            .join(function (enter) {\n            enter\n                .append('clipPath')\n                .attr('id', function () {\n                var uid = select(this.parentNode).attr('data-uid');\n                return options.style.prefix + \"-clip-\" + uid;\n            })\n                .append('use')\n                .attr('xlink:href', function () {\n                var uid = select(this.parentNode.parentNode).attr('data-uid');\n                var leafID = options.style.prefix + \"-leaf-\" + uid;\n                return new URL(\"#\" + leafID, windowLocation) + '';\n            });\n        }, function (update) { return null; }, function (exit) { return exit.remove(); });\n        // Update all titles\n        allLeafGroups\n            .selectAll('text')\n            .data(function (d) {\n            if (d.data.showLabel !== true) {\n                return [];\n            }\n            var parent = d;\n            while (parent.depth > 1)\n                parent = parent.parent;\n            var color = hsl(_this.model.getFillColor(parent.data.name));\n            return [\n                {\n                    text: d.data.name,\n                    color: color.l < 0.5 ? 'white' : 'black',\n                },\n            ];\n        }, function (d) { return d; })\n            .join(function (enter) {\n            var addedText = enter\n                .append('text')\n                .text(function (d) { return d.text; })\n                .style('fill', textFillColor)\n                .attr('x', 7)\n                .attr('y', 18);\n            if (windowLocation) {\n                addedText.attr('clip-path', function () {\n                    var uid = select(this.parentNode).attr('data-uid');\n                    var clipPathID = options.style.prefix + \"-clip-\" + uid;\n                    return \"url(\" + (new URL(\"#\" + clipPathID, windowLocation) + '') + \")\";\n                });\n            }\n        }, function (update) {\n            return update.text(function (d) { return d.text; }).style('fill', textFillColor);\n        }, function (exit) { return exit.remove(); });\n        // Add event listeners to elements drawn\n        this.addEventListeners();\n    };\n    Treemap.prototype.addEventListeners = function () {\n        var self = this;\n        this.parent\n            .selectAll('rect.leaf')\n            .on('mouseover', function (datum) {\n            var hoveredElement = select(this);\n            var fillColor = getComputedStyle(this, null).getPropertyValue('fill');\n            var parent = datum;\n            while (parent.depth > 1)\n                parent = parent.parent;\n            hoveredElement\n                .transition(self.services.transitions.getTransition('graph_element_mouseover_fill_update'))\n                .style('fill', function (d) {\n                var customColor = self.model.getFillColor(d.parent.data.name);\n                if (customColor) {\n                    fillColor = customColor;\n                }\n                return color(fillColor).darker(0.7).toString();\n            });\n            // Show tooltip\n            self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n                hoveredElement: hoveredElement,\n                items: [\n                    {\n                        color: fillColor,\n                        label: parent.data.name,\n                        bold: true,\n                    },\n                    {\n                        label: datum.data.name,\n                        value: datum.data.value,\n                    },\n                ],\n            });\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Treemap.LEAF_MOUSEOVER, {\n                element: hoveredElement,\n                datum: datum,\n            });\n        })\n            .on('mousemove', function (datum) {\n            var hoveredElement = select(this);\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Treemap.LEAF_MOUSEMOVE, {\n                element: hoveredElement,\n                datum: datum,\n            });\n            self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n        })\n            .on('click', function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Treemap.LEAF_CLICK, {\n                element: select(this),\n                datum: datum,\n            });\n        })\n            .on('mouseout', function (datum) {\n            var hoveredElement = select(this);\n            hoveredElement.classed('hovered', false);\n            var parent = datum;\n            while (parent.depth > 1)\n                parent = parent.parent;\n            hoveredElement\n                .transition(self.services.transitions.getTransition('graph_element_mouseout_fill_update'))\n                .style('fill', function (d) {\n                return self.model.getFillColor(d.parent.data.name);\n            });\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Treemap.LEAF_MOUSEOUT, {\n                element: hoveredElement,\n                datum: datum,\n            });\n            // Hide tooltip\n            self.services.events.dispatchEvent(Events.Tooltip.HIDE, {\n                hoveredElement: hoveredElement,\n            });\n        });\n    };\n    return Treemap;\n}(Component));\nexport { Treemap };\n//# sourceMappingURL=../../../src/components/graphs/treemap.js.map"]},"metadata":{},"sourceType":"module"}