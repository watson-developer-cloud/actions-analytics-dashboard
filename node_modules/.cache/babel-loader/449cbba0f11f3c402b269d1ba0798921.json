{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Component } from '../component';\nimport { DOMUtils } from '../../services';\nimport { Roles, Events, GaugeTypes, ArrowDirections, ColorClassNameTypes, Alignments } from '../../interfaces';\nimport { Tools } from '../../tools'; // D3 Imports\n\nimport { select } from 'd3-selection';\nimport { arc } from 'd3-shape'; // arrow paths for delta\n\nvar ARROW_UP_PATH_STRING = '4,10 8,6 12,10';\nvar ARROW_DOWN_PATH_STRING = '12,6 8,10 4,6';\n\nvar Gauge =\n/** @class */\nfunction (_super) {\n  __extends(Gauge, _super);\n\n  function Gauge() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'gauge';\n    return _this;\n  }\n\n  Gauge.prototype.init = function () {\n    var eventsFragment = this.services.events;\n  };\n\n  Gauge.prototype.getValue = function () {\n    var _a, _b;\n\n    var data = this.model.getData();\n    var value = (_b = (_a = data.find(function (d) {\n      return d.group === 'value';\n    })) === null || _a === void 0 ? void 0 : _a.value, _b !== null && _b !== void 0 ? _b : null);\n    return value;\n  };\n\n  Gauge.prototype.getValueRatio = function () {\n    var value = Tools.clamp(this.getValue(), 0, 100);\n    return value / 100;\n  };\n\n  Gauge.prototype.getDelta = function () {\n    var _a, _b;\n\n    var data = this.model.getData();\n    var delta = (_b = (_a = data.find(function (d) {\n      return d.group === 'delta';\n    })) === null || _a === void 0 ? void 0 : _a.value, _b !== null && _b !== void 0 ? _b : null);\n    return delta;\n  };\n\n  Gauge.prototype.getArcRatio = function () {\n    var options = this.getOptions();\n    var type = Tools.getProperty(options, 'gauge', 'type');\n    var arcRatio = type === GaugeTypes.FULL ? 1 : 0.5;\n    return arcRatio;\n  };\n\n  Gauge.prototype.getArcSize = function () {\n    return this.getArcRatio() * Math.PI * 2;\n  };\n\n  Gauge.prototype.getStartAngle = function () {\n    var arcSize = this.getArcSize();\n\n    if (arcSize === 2 * Math.PI) {\n      return 0;\n    }\n\n    return -arcSize / 2;\n  }; // use provided arrow direction or default to using the delta\n\n\n  Gauge.prototype.getArrow = function (delta) {\n    var options = this.getOptions();\n    var arrowDirection = Tools.getProperty(options, 'gauge', 'deltaArrow', 'direction');\n\n    switch (arrowDirection) {\n      case ArrowDirections.UP:\n        return ARROW_UP_PATH_STRING;\n\n      case ArrowDirections.DOWN:\n        return ARROW_DOWN_PATH_STRING;\n\n      default:\n        return delta > 0 ? ARROW_UP_PATH_STRING : ARROW_DOWN_PATH_STRING;\n    }\n  };\n\n  Gauge.prototype.render = function (animate) {\n    var _this = this;\n\n    if (animate === void 0) {\n      animate = true;\n    }\n\n    var self = this;\n    var svg = this.getContainerSVG();\n    var options = this.getOptions();\n    var groupMapsTo = options.data.groupMapsTo;\n    var value = this.getValue();\n    var valueRatio = this.getValueRatio();\n    var arcSize = this.getArcSize(); // angles for drawing the gauge\n\n    var startAngle = this.getStartAngle();\n    var rotationAngle = valueRatio * arcSize;\n    var currentAngle = startAngle + rotationAngle;\n    var endAngle = startAngle + arcSize; // Compute the outer radius needed\n\n    var radius = this.computeRadius();\n    var innerRadius = this.getInnerRadius(); // draw the container and arc\n\n    this.backgroundArc = arc().innerRadius(innerRadius).outerRadius(radius).startAngle(currentAngle).endAngle(endAngle);\n    this.arc = arc().innerRadius(innerRadius).outerRadius(radius).startAngle(startAngle).endAngle(currentAngle); // draw the container\n\n    DOMUtils.appendOrSelect(svg, 'path.arc-background').attr('d', this.backgroundArc).attr('role', Roles.GROUP); // Add data arc\n\n    var arcValue = svg.selectAll('path.arc-foreground').data([value]);\n    var arcEnter = arcValue.enter().append('path');\n    arcEnter.merge(arcValue).attr('class', this.model.getColorClassName({\n      classNameTypes: [ColorClassNameTypes.FILL],\n      dataGroupName: 'value',\n      originalClassName: 'arc-foreground'\n    })).style('fill', function (d) {\n      return Tools.getProperty(_this.getOptions(), 'color', 'scale', 'value');\n    }).attr('d', this.arc) // a11y\n    .attr('role', Roles.GRAPHICS_SYMBOL).attr('aria-roledescription', 'value').attr('aria-label', function (d) {\n      return d.value;\n    }); // draw the value and delta to the center\n\n    this.drawValueNumber();\n    this.drawDelta();\n    arcValue.exit().remove();\n    var alignment = Tools.getProperty(options, 'gauge', 'alignment');\n    var width = DOMUtils.getSVGElementSize(this.getParent(), {\n      useAttr: true\n    }).width; // Position gauge\n\n    var gaugeTranslateX = radius;\n\n    if (alignment === Alignments.CENTER) {\n      gaugeTranslateX = width / 2;\n    } else if (alignment === Alignments.RIGHT) {\n      gaugeTranslateX = width - radius;\n    }\n\n    svg.attr('transform', \"translate(\" + gaugeTranslateX + \", \" + radius + \")\"); // Add event listeners\n\n    this.addEventListeners();\n  };\n  /**\n   * draws the value number associated with the Gauge component in the center\n   */\n\n\n  Gauge.prototype.drawValueNumber = function () {\n    var svg = this.getContainerSVG();\n    var options = this.getOptions();\n    var arcType = Tools.getProperty(options, 'gauge', 'type');\n    var value = this.getValue();\n    var delta = this.getDelta(); // Sizing and positions relative to the radius\n\n    var radius = this.computeRadius();\n    var valueFontSize = Tools.getProperty(options, 'gauge', 'valueFontSize'); // if there is a delta, use the size to center the numbers, otherwise center the valueNumber\n\n    var deltaFontSize = Tools.getProperty(options, 'gauge', 'deltaFontSize');\n    var numberSpacing = Tools.getProperty(options, 'gauge', 'numberSpacing');\n    var showPercentageSymbol = Tools.getProperty(options, 'gauge', 'showPercentageSymbol'); // circular gauge without delta should have valueNumber centered\n\n    var numbersYPosition = 0;\n\n    if (arcType === GaugeTypes.FULL && !delta) {\n      numbersYPosition = deltaFontSize(radius);\n    } else if (arcType === GaugeTypes.SEMI && delta) {\n      // semi circular gauge we want the numbers aligned to the chart container\n      numbersYPosition = -(deltaFontSize(radius) + numberSpacing);\n    } // Add the numbers at the center\n\n\n    var numbersGroup = DOMUtils.appendOrSelect(svg, 'g.gauge-numbers').attr('transform', \"translate(0, \" + numbersYPosition + \")\");\n    var fontSize = valueFontSize(radius); // Add the big number\n\n    var valueNumberGroup = DOMUtils.appendOrSelect(numbersGroup, 'g.gauge-value-number');\n    var numberFormatter = Tools.getProperty(options, 'gauge', 'numberFormatter');\n    var valueNumber = valueNumberGroup.selectAll('text.gauge-value-number').data([value]);\n    valueNumber.enter().append('text').attr('class', 'gauge-value-number').merge(valueNumber).style('font-size', fontSize + \"px\").attr('text-anchor', 'middle').text(function (d) {\n      return numberFormatter(d);\n    }); // add the percentage symbol beside the valueNumber\n\n    var valueNumberWidth = DOMUtils.getSVGElementSize(DOMUtils.appendOrSelect(svg, 'text.gauge-value-number'), {\n      useBBox: true\n    }).width;\n    var symbolFontSize = fontSize / 2;\n    var gaugeSymbol = showPercentageSymbol ? '%' : '';\n    var symbol = DOMUtils.appendOrSelect(valueNumberGroup, 'text.gauge-value-symbol').style('font-size', symbolFontSize + \"px\").attr('x', valueNumberWidth / 2).text(gaugeSymbol);\n\n    var _a = DOMUtils.getSVGElementSize(symbol, {\n      useBBox: true\n    }),\n        symbolWidth = _a.width,\n        symbolHeight = _a.height; // adjust the symbol to superscript using the bbox instead of the font-size cause\n    // we want to align the actual character to the value number\n\n\n    symbol.attr('y', \"-\" + symbolHeight / 2 + \"px\"); // move the value group depending on the symbol's drawn size\n\n    valueNumberGroup.attr('transform', \"translate(-\" + symbolWidth / 2 + \", 0)\"); // Optical centering for the presence of the smaller % symbol\n  };\n  /**\n   * adds the delta number for the gauge\n   */\n\n\n  Gauge.prototype.drawDelta = function () {\n    var self = this;\n    var svg = this.getContainerSVG();\n    var options = this.getOptions();\n    var delta = this.getDelta(); // Sizing and positions relative to the radius\n\n    var radius = this.computeRadius();\n    var deltaFontSize = delta ? Tools.getProperty(options, 'gauge', 'deltaFontSize') : function () {\n      return 0;\n    }; // use numberFormatter here only if there is a delta supplied\n\n    var numberFormatter = delta ? Tools.getProperty(options, 'gauge', 'numberFormatter') : function () {\n      return null;\n    };\n    var arrowSize = Tools.getProperty(options, 'gauge', 'deltaArrow', 'size');\n    var numberSpacing = Tools.getProperty(options, 'gauge', 'numberSpacing');\n    var showPercentageSymbol = Tools.getProperty(options, 'gauge', 'showPercentageSymbol');\n    var numbersGroup = DOMUtils.appendOrSelect(svg, 'g.gauge-numbers'); // Add the smaller number of the delta\n\n    var deltaGroup = DOMUtils.appendOrSelect(numbersGroup, 'g.gauge-delta').attr('transform', \"translate(0, \" + (deltaFontSize(radius) + numberSpacing) + \")\");\n    var deltaNumber = DOMUtils.appendOrSelect(deltaGroup, 'text.gauge-delta-number');\n    var gaugeSymbol = showPercentageSymbol ? '%' : '';\n    deltaNumber.data(delta === null ? [] : [delta]);\n    deltaNumber.enter().append('text').classed('gauge-delta-number', true).merge(deltaNumber).attr('text-anchor', 'middle').style('font-size', deltaFontSize(radius) + \"px\").text(function (d) {\n      return \"\" + numberFormatter(d) + gaugeSymbol;\n    }); // Add the caret for the delta number\n\n    var deltaNumberWidth = DOMUtils.getSVGElementSize(DOMUtils.appendOrSelect(svg, '.gauge-delta-number'), {\n      useBBox: true\n    }).width; // check if delta arrow is disabled\n\n    var arrowEnabled = Tools.getProperty(options, 'gauge', 'deltaArrow', 'enabled');\n    var deltaArrow = deltaGroup.selectAll('svg.gauge-delta-arrow').data(delta !== null && arrowEnabled ? [delta] : []);\n    deltaArrow.enter().append('svg').merge(deltaArrow).attr('class', 'gauge-delta-arrow').attr('x', -arrowSize(radius) - deltaNumberWidth / 2).attr('y', -arrowSize(radius) / 2 - deltaFontSize(radius) * 0.35).attr('width', arrowSize(radius)).attr('height', arrowSize(radius)).attr('viewBox', '0 0 16 16'); // Needed to correctly size SVG in Firefox\n\n    DOMUtils.appendOrSelect(deltaArrow, 'rect.gauge-delta-arrow-backdrop').attr('width', '16').attr('height', '16').attr('fill', 'none'); // Draw the arrow with status\n\n    var status = Tools.getProperty(options, 'gauge', 'status');\n    DOMUtils.appendOrSelect(deltaArrow, 'polygon.gauge-delta-arrow').attr('class', status !== null ? \"gauge-delta-arrow status--\" + status : '').attr('points', self.getArrow(delta));\n    deltaArrow.exit().remove();\n    deltaNumber.exit().remove();\n  };\n\n  Gauge.prototype.getInnerRadius = function () {\n    // Compute the outer radius needed\n    var radius = this.computeRadius();\n    var arcWidth = Tools.getProperty(this.getOptions(), 'gauge', 'arcWidth');\n    return radius - arcWidth;\n  };\n\n  Gauge.prototype.addEventListeners = function () {\n    var self = this;\n    this.parent.selectAll('path.arc-foreground').on('mouseover', function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Gauge.ARC_MOUSEOVER, {\n        element: select(this),\n        datum: datum\n      });\n    }).on('mousemove', function (datum) {\n      var hoveredElement = select(this); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Gauge.ARC_MOUSEMOVE, {\n        element: hoveredElement,\n        datum: datum\n      });\n    }).on('click', function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Gauge.ARC_CLICK, {\n        element: select(this),\n        datum: datum\n      });\n    }).on('mouseout', function (datum) {\n      var hoveredElement = select(this); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Gauge.ARC_MOUSEOUT, {\n        element: hoveredElement,\n        datum: datum\n      });\n    });\n  }; // Helper functions\n\n\n  Gauge.prototype.computeRadius = function () {\n    var options = this.getOptions();\n    var arcType = Tools.getProperty(options, 'gauge', 'type');\n\n    var _a = DOMUtils.getSVGElementSize(this.parent, {\n      useAttrs: true\n    }),\n        width = _a.width,\n        height = _a.height;\n\n    var radius = arcType === GaugeTypes.SEMI ? Math.min(width / 2, height) : Math.min(width / 2, height / 2);\n    return radius;\n  };\n\n  return Gauge;\n}(Component);\n\nexport { Gauge };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/components/graphs/gauge.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Component","DOMUtils","Roles","Events","GaugeTypes","ArrowDirections","ColorClassNameTypes","Alignments","Tools","select","arc","ARROW_UP_PATH_STRING","ARROW_DOWN_PATH_STRING","Gauge","_super","_this","apply","arguments","type","init","eventsFragment","services","events","getValue","_a","_b","data","model","getData","value","find","group","getValueRatio","clamp","getDelta","delta","getArcRatio","options","getOptions","getProperty","arcRatio","FULL","getArcSize","Math","PI","getStartAngle","arcSize","getArrow","arrowDirection","UP","DOWN","render","animate","self","svg","getContainerSVG","groupMapsTo","valueRatio","startAngle","rotationAngle","currentAngle","endAngle","radius","computeRadius","innerRadius","getInnerRadius","backgroundArc","outerRadius","appendOrSelect","attr","GROUP","arcValue","selectAll","arcEnter","enter","append","merge","getColorClassName","classNameTypes","FILL","dataGroupName","originalClassName","style","GRAPHICS_SYMBOL","drawValueNumber","drawDelta","exit","remove","alignment","width","getSVGElementSize","getParent","useAttr","gaugeTranslateX","CENTER","RIGHT","addEventListeners","arcType","valueFontSize","deltaFontSize","numberSpacing","showPercentageSymbol","numbersYPosition","SEMI","numbersGroup","fontSize","valueNumberGroup","numberFormatter","valueNumber","text","valueNumberWidth","useBBox","symbolFontSize","gaugeSymbol","symbol","symbolWidth","symbolHeight","height","arrowSize","deltaGroup","deltaNumber","classed","deltaNumberWidth","arrowEnabled","deltaArrow","status","arcWidth","parent","on","datum","dispatchEvent","ARC_MOUSEOVER","element","hoveredElement","ARC_MOUSEMOVE","ARC_CLICK","ARC_MOUSEOUT","useAttrs","min"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Component } from '../component';\nimport { DOMUtils } from '../../services';\nimport { Roles, Events, GaugeTypes, ArrowDirections, ColorClassNameTypes, Alignments, } from '../../interfaces';\nimport { Tools } from '../../tools';\n// D3 Imports\nimport { select } from 'd3-selection';\nimport { arc } from 'd3-shape';\n// arrow paths for delta\nvar ARROW_UP_PATH_STRING = '4,10 8,6 12,10';\nvar ARROW_DOWN_PATH_STRING = '12,6 8,10 4,6';\nvar Gauge = /** @class */ (function (_super) {\n    __extends(Gauge, _super);\n    function Gauge() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'gauge';\n        return _this;\n    }\n    Gauge.prototype.init = function () {\n        var eventsFragment = this.services.events;\n    };\n    Gauge.prototype.getValue = function () {\n        var _a, _b;\n        var data = this.model.getData();\n        var value = (_b = (_a = data.find(function (d) { return d.group === 'value'; })) === null || _a === void 0 ? void 0 : _a.value, (_b !== null && _b !== void 0 ? _b : null));\n        return value;\n    };\n    Gauge.prototype.getValueRatio = function () {\n        var value = Tools.clamp(this.getValue(), 0, 100);\n        return value / 100;\n    };\n    Gauge.prototype.getDelta = function () {\n        var _a, _b;\n        var data = this.model.getData();\n        var delta = (_b = (_a = data.find(function (d) { return d.group === 'delta'; })) === null || _a === void 0 ? void 0 : _a.value, (_b !== null && _b !== void 0 ? _b : null));\n        return delta;\n    };\n    Gauge.prototype.getArcRatio = function () {\n        var options = this.getOptions();\n        var type = Tools.getProperty(options, 'gauge', 'type');\n        var arcRatio = type === GaugeTypes.FULL ? 1 : 0.5;\n        return arcRatio;\n    };\n    Gauge.prototype.getArcSize = function () {\n        return this.getArcRatio() * Math.PI * 2;\n    };\n    Gauge.prototype.getStartAngle = function () {\n        var arcSize = this.getArcSize();\n        if (arcSize === 2 * Math.PI) {\n            return 0;\n        }\n        return -arcSize / 2;\n    };\n    // use provided arrow direction or default to using the delta\n    Gauge.prototype.getArrow = function (delta) {\n        var options = this.getOptions();\n        var arrowDirection = Tools.getProperty(options, 'gauge', 'deltaArrow', 'direction');\n        switch (arrowDirection) {\n            case ArrowDirections.UP:\n                return ARROW_UP_PATH_STRING;\n            case ArrowDirections.DOWN:\n                return ARROW_DOWN_PATH_STRING;\n            default:\n                return delta > 0\n                    ? ARROW_UP_PATH_STRING\n                    : ARROW_DOWN_PATH_STRING;\n        }\n    };\n    Gauge.prototype.render = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var self = this;\n        var svg = this.getContainerSVG();\n        var options = this.getOptions();\n        var groupMapsTo = options.data.groupMapsTo;\n        var value = this.getValue();\n        var valueRatio = this.getValueRatio();\n        var arcSize = this.getArcSize();\n        // angles for drawing the gauge\n        var startAngle = this.getStartAngle();\n        var rotationAngle = valueRatio * arcSize;\n        var currentAngle = startAngle + rotationAngle;\n        var endAngle = startAngle + arcSize;\n        // Compute the outer radius needed\n        var radius = this.computeRadius();\n        var innerRadius = this.getInnerRadius();\n        // draw the container and arc\n        this.backgroundArc = arc()\n            .innerRadius(innerRadius)\n            .outerRadius(radius)\n            .startAngle(currentAngle)\n            .endAngle(endAngle);\n        this.arc = arc()\n            .innerRadius(innerRadius)\n            .outerRadius(radius)\n            .startAngle(startAngle)\n            .endAngle(currentAngle);\n        // draw the container\n        DOMUtils.appendOrSelect(svg, 'path.arc-background')\n            .attr('d', this.backgroundArc)\n            .attr('role', Roles.GROUP);\n        // Add data arc\n        var arcValue = svg.selectAll('path.arc-foreground').data([value]);\n        var arcEnter = arcValue.enter().append('path');\n        arcEnter\n            .merge(arcValue)\n            .attr('class', this.model.getColorClassName({\n            classNameTypes: [ColorClassNameTypes.FILL],\n            dataGroupName: 'value',\n            originalClassName: 'arc-foreground',\n        }))\n            .style('fill', function (d) {\n            return Tools.getProperty(_this.getOptions(), 'color', 'scale', 'value');\n        })\n            .attr('d', this.arc)\n            // a11y\n            .attr('role', Roles.GRAPHICS_SYMBOL)\n            .attr('aria-roledescription', 'value')\n            .attr('aria-label', function (d) { return d.value; });\n        // draw the value and delta to the center\n        this.drawValueNumber();\n        this.drawDelta();\n        arcValue.exit().remove();\n        var alignment = Tools.getProperty(options, 'gauge', 'alignment');\n        var width = DOMUtils.getSVGElementSize(this.getParent(), {\n            useAttr: true,\n        }).width;\n        // Position gauge\n        var gaugeTranslateX = radius;\n        if (alignment === Alignments.CENTER) {\n            gaugeTranslateX = width / 2;\n        }\n        else if (alignment === Alignments.RIGHT) {\n            gaugeTranslateX = width - radius;\n        }\n        svg.attr('transform', \"translate(\" + gaugeTranslateX + \", \" + radius + \")\");\n        // Add event listeners\n        this.addEventListeners();\n    };\n    /**\n     * draws the value number associated with the Gauge component in the center\n     */\n    Gauge.prototype.drawValueNumber = function () {\n        var svg = this.getContainerSVG();\n        var options = this.getOptions();\n        var arcType = Tools.getProperty(options, 'gauge', 'type');\n        var value = this.getValue();\n        var delta = this.getDelta();\n        // Sizing and positions relative to the radius\n        var radius = this.computeRadius();\n        var valueFontSize = Tools.getProperty(options, 'gauge', 'valueFontSize');\n        // if there is a delta, use the size to center the numbers, otherwise center the valueNumber\n        var deltaFontSize = Tools.getProperty(options, 'gauge', 'deltaFontSize');\n        var numberSpacing = Tools.getProperty(options, 'gauge', 'numberSpacing');\n        var showPercentageSymbol = Tools.getProperty(options, 'gauge', 'showPercentageSymbol');\n        // circular gauge without delta should have valueNumber centered\n        var numbersYPosition = 0;\n        if (arcType === GaugeTypes.FULL && !delta) {\n            numbersYPosition = deltaFontSize(radius);\n        }\n        else if (arcType === GaugeTypes.SEMI && delta) {\n            // semi circular gauge we want the numbers aligned to the chart container\n            numbersYPosition = -(deltaFontSize(radius) + numberSpacing);\n        }\n        // Add the numbers at the center\n        var numbersGroup = DOMUtils.appendOrSelect(svg, 'g.gauge-numbers').attr('transform', \"translate(0, \" + numbersYPosition + \")\");\n        var fontSize = valueFontSize(radius);\n        // Add the big number\n        var valueNumberGroup = DOMUtils.appendOrSelect(numbersGroup, 'g.gauge-value-number');\n        var numberFormatter = Tools.getProperty(options, 'gauge', 'numberFormatter');\n        var valueNumber = valueNumberGroup\n            .selectAll('text.gauge-value-number')\n            .data([value]);\n        valueNumber\n            .enter()\n            .append('text')\n            .attr('class', 'gauge-value-number')\n            .merge(valueNumber)\n            .style('font-size', fontSize + \"px\")\n            .attr('text-anchor', 'middle')\n            .text(function (d) { return numberFormatter(d); });\n        // add the percentage symbol beside the valueNumber\n        var valueNumberWidth = DOMUtils.getSVGElementSize(DOMUtils.appendOrSelect(svg, 'text.gauge-value-number'), { useBBox: true }).width;\n        var symbolFontSize = fontSize / 2;\n        var gaugeSymbol = showPercentageSymbol ? '%' : '';\n        var symbol = DOMUtils.appendOrSelect(valueNumberGroup, 'text.gauge-value-symbol')\n            .style('font-size', symbolFontSize + \"px\")\n            .attr('x', valueNumberWidth / 2)\n            .text(gaugeSymbol);\n        var _a = DOMUtils.getSVGElementSize(symbol, { useBBox: true }), symbolWidth = _a.width, symbolHeight = _a.height;\n        // adjust the symbol to superscript using the bbox instead of the font-size cause\n        // we want to align the actual character to the value number\n        symbol.attr('y', \"-\" + symbolHeight / 2 + \"px\");\n        // move the value group depending on the symbol's drawn size\n        valueNumberGroup.attr('transform', \"translate(-\" + symbolWidth / 2 + \", 0)\"); // Optical centering for the presence of the smaller % symbol\n    };\n    /**\n     * adds the delta number for the gauge\n     */\n    Gauge.prototype.drawDelta = function () {\n        var self = this;\n        var svg = this.getContainerSVG();\n        var options = this.getOptions();\n        var delta = this.getDelta();\n        // Sizing and positions relative to the radius\n        var radius = this.computeRadius();\n        var deltaFontSize = delta\n            ? Tools.getProperty(options, 'gauge', 'deltaFontSize')\n            : function () { return 0; };\n        // use numberFormatter here only if there is a delta supplied\n        var numberFormatter = delta\n            ? Tools.getProperty(options, 'gauge', 'numberFormatter')\n            : function () { return null; };\n        var arrowSize = Tools.getProperty(options, 'gauge', 'deltaArrow', 'size');\n        var numberSpacing = Tools.getProperty(options, 'gauge', 'numberSpacing');\n        var showPercentageSymbol = Tools.getProperty(options, 'gauge', 'showPercentageSymbol');\n        var numbersGroup = DOMUtils.appendOrSelect(svg, 'g.gauge-numbers');\n        // Add the smaller number of the delta\n        var deltaGroup = DOMUtils.appendOrSelect(numbersGroup, 'g.gauge-delta').attr('transform', \"translate(0, \" + (deltaFontSize(radius) + numberSpacing) + \")\");\n        var deltaNumber = DOMUtils.appendOrSelect(deltaGroup, 'text.gauge-delta-number');\n        var gaugeSymbol = showPercentageSymbol ? '%' : '';\n        deltaNumber.data(delta === null ? [] : [delta]);\n        deltaNumber\n            .enter()\n            .append('text')\n            .classed('gauge-delta-number', true)\n            .merge(deltaNumber)\n            .attr('text-anchor', 'middle')\n            .style('font-size', deltaFontSize(radius) + \"px\")\n            .text(function (d) { return \"\" + numberFormatter(d) + gaugeSymbol; });\n        // Add the caret for the delta number\n        var deltaNumberWidth = DOMUtils.getSVGElementSize(DOMUtils.appendOrSelect(svg, '.gauge-delta-number'), { useBBox: true }).width;\n        // check if delta arrow is disabled\n        var arrowEnabled = Tools.getProperty(options, 'gauge', 'deltaArrow', 'enabled');\n        var deltaArrow = deltaGroup\n            .selectAll('svg.gauge-delta-arrow')\n            .data(delta !== null && arrowEnabled ? [delta] : []);\n        deltaArrow\n            .enter()\n            .append('svg')\n            .merge(deltaArrow)\n            .attr('class', 'gauge-delta-arrow')\n            .attr('x', -arrowSize(radius) - deltaNumberWidth / 2)\n            .attr('y', -arrowSize(radius) / 2 - deltaFontSize(radius) * 0.35)\n            .attr('width', arrowSize(radius))\n            .attr('height', arrowSize(radius))\n            .attr('viewBox', '0 0 16 16');\n        // Needed to correctly size SVG in Firefox\n        DOMUtils.appendOrSelect(deltaArrow, 'rect.gauge-delta-arrow-backdrop')\n            .attr('width', '16')\n            .attr('height', '16')\n            .attr('fill', 'none');\n        // Draw the arrow with status\n        var status = Tools.getProperty(options, 'gauge', 'status');\n        DOMUtils.appendOrSelect(deltaArrow, 'polygon.gauge-delta-arrow')\n            .attr('class', status !== null ? \"gauge-delta-arrow status--\" + status : '')\n            .attr('points', self.getArrow(delta));\n        deltaArrow.exit().remove();\n        deltaNumber.exit().remove();\n    };\n    Gauge.prototype.getInnerRadius = function () {\n        // Compute the outer radius needed\n        var radius = this.computeRadius();\n        var arcWidth = Tools.getProperty(this.getOptions(), 'gauge', 'arcWidth');\n        return radius - arcWidth;\n    };\n    Gauge.prototype.addEventListeners = function () {\n        var self = this;\n        this.parent\n            .selectAll('path.arc-foreground')\n            .on('mouseover', function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Gauge.ARC_MOUSEOVER, {\n                element: select(this),\n                datum: datum,\n            });\n        })\n            .on('mousemove', function (datum) {\n            var hoveredElement = select(this);\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Gauge.ARC_MOUSEMOVE, {\n                element: hoveredElement,\n                datum: datum,\n            });\n        })\n            .on('click', function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Gauge.ARC_CLICK, {\n                element: select(this),\n                datum: datum,\n            });\n        })\n            .on('mouseout', function (datum) {\n            var hoveredElement = select(this);\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Gauge.ARC_MOUSEOUT, {\n                element: hoveredElement,\n                datum: datum,\n            });\n        });\n    };\n    // Helper functions\n    Gauge.prototype.computeRadius = function () {\n        var options = this.getOptions();\n        var arcType = Tools.getProperty(options, 'gauge', 'type');\n        var _a = DOMUtils.getSVGElementSize(this.parent, {\n            useAttrs: true,\n        }), width = _a.width, height = _a.height;\n        var radius = arcType === GaugeTypes.SEMI\n            ? Math.min(width / 2, height)\n            : Math.min(width / 2, height / 2);\n        return radius;\n    };\n    return Gauge;\n}(Component));\nexport { Gauge };\n//# sourceMappingURL=../../../src/components/graphs/gauge.js.map"]},"metadata":{},"sourceType":"module"}