{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Tools } from '../../tools';\nimport { Bar } from './bar';\nimport { Roles, Events, CartesianOrientations, ColorClassNameTypes } from '../../interfaces'; // D3 Imports\n\nimport { select } from 'd3-selection';\n\nvar StackedBar =\n/** @class */\nfunction (_super) {\n  __extends(StackedBar, _super);\n\n  function StackedBar() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'stacked-bar'; // Highlight elements that match the hovered legend item\n\n    _this.handleLegendOnHover = function (event) {\n      var hoveredElement = event.detail.hoveredElement;\n\n      var groupMapsTo = _this.model.getOptions().data.groupMapsTo;\n\n      _this.parent.selectAll('path.bar').transition(_this.services.transitions.getTransition('legend-hover-bar')).attr('opacity', function (d) {\n        return d[groupMapsTo] !== hoveredElement.datum()['name'] ? 0.3 : 1;\n      });\n    }; // Un-highlight all elements\n\n\n    _this.handleLegendMouseOut = function (event) {\n      _this.parent.selectAll('path.bar').transition(_this.services.transitions.getTransition('legend-mouseout-bar')).attr('opacity', 1);\n    };\n\n    return _this;\n  }\n\n  StackedBar.prototype.init = function () {\n    var eventsFragment = this.services.events; // Highlight correct circle on legend item hovers\n\n    eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover); // Un-highlight circles on legend item mouseouts\n\n    eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n  };\n\n  StackedBar.prototype.render = function (animate) {\n    var _this = this; // Grab container SVG\n\n\n    var svg = this.getContainerSVG({\n      withinChartClip: true\n    }); // Chart options mixed with the internal configurations\n\n    var options = this.getOptions();\n    var groupMapsTo = options.data.groupMapsTo; // Create the data and keys that'll be used by the stack layout\n\n    var stackData = this.model.getStackedData({\n      groups: this.configs.groups\n    }); // Update data on all bar groups\n\n    var barGroups = svg.selectAll('g.bars').data(stackData, function (d) {\n      return Tools.getProperty(d, 0, groupMapsTo);\n    }); // Remove elements that need to be exited\n    // We need exit at the top here to make sure that\n    // Data filters are processed before entering new elements\n    // Or updating existing ones\n\n    barGroups.exit().attr('opacity', 0).remove(); // Add bar groups that need to be introduced\n\n    barGroups.enter().append('g').classed('bars', true).attr('role', Roles.GROUP).attr('data-name', 'bars'); // Update data on all bars\n\n    var bars = svg.selectAll('g.bars').selectAll('path.bar').data(function (d) {\n      return d;\n    }, function (d) {\n      return d.data.sharedStackKey;\n    }); // Remove bars that need to be removed\n\n    bars.exit().remove();\n    bars.enter().append('path').merge(bars).classed('bar', true).transition(this.services.transitions.getTransition('bar-update-enter', animate)).attr('class', function (d) {\n      return _this.model.getColorClassName({\n        classNameTypes: [ColorClassNameTypes.FILL],\n        dataGroupName: d[groupMapsTo],\n        originalClassName: 'bar'\n      });\n    }).style('fill', function (d) {\n      return _this.model.getFillColor(d[groupMapsTo]);\n    }).attr('d', function (d, i) {\n      var key = d.data.sharedStackKey;\n      /*\n       * Orientation support for horizontal/vertical bar charts\n       * Determine coordinates needed for a vertical set of paths\n       * to draw the bars needed, and pass those coordinates down to\n       * generateSVGPathString() to decide whether it needs to flip them\n       */\n\n      var barWidth = _this.getBarWidth();\n\n      var x0 = _this.services.cartesianScales.getDomainValue(key, i) - barWidth / 2;\n      var x1 = x0 + barWidth;\n\n      var y0 = _this.services.cartesianScales.getRangeValue(d[0], i);\n\n      var y1 = _this.services.cartesianScales.getRangeValue(d[1], i); // don't show if part of bar is out of zoom domain\n\n\n      if (_this.isOutsideZoomedDomain(x0, x1)) {\n        return;\n      } // Add the divider gap\n\n\n      if (Math.abs(y1 - y0) > 0 && Math.abs(y1 - y0) > options.bars.dividerSize) {\n        if (_this.services.cartesianScales.getOrientation() === CartesianOrientations.VERTICAL) {\n          y1 += 1;\n        } else {\n          y1 -= 1;\n        }\n      }\n\n      return Tools.generateSVGPathString({\n        x0: x0,\n        x1: x1,\n        y0: y0,\n        y1: y1\n      }, _this.services.cartesianScales.getOrientation());\n    }).attr('opacity', 1) // a11y\n    .attr('role', Roles.GRAPHICS_SYMBOL).attr('aria-roledescription', 'bar').attr('aria-label', function (d) {\n      return d[1] - d[0];\n    }); // Add event listeners for the above elements\n\n    this.addEventListeners();\n  };\n\n  StackedBar.prototype.addEventListeners = function () {\n    var options = this.getOptions();\n    var groupMapsTo = options.data.groupMapsTo;\n    var self = this;\n    this.parent.selectAll('path.bar').on('mouseover', function (datum) {\n      var _a;\n\n      var hoveredElement = select(this);\n      hoveredElement.classed('hovered', true);\n      hoveredElement.transition(self.services.transitions.getTransition('graph_element_mouseover_fill_update')); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOVER, {\n        element: hoveredElement,\n        datum: datum\n      });\n      var displayData = self.model.getDisplayData(self.configs.groups);\n      var matchingDataPoint = displayData.find(function (d) {\n        var domainIdentifier = self.services.cartesianScales.getDomainIdentifier(d);\n        var rangeIdentifier = self.services.cartesianScales.getRangeIdentifier(d);\n        return d[rangeIdentifier] === datum.data[datum.group] && d[domainIdentifier].toString() === datum.data.sharedStackKey && d[groupMapsTo] === datum.group;\n      });\n\n      if (matchingDataPoint === undefined) {\n        // use the primary range and domain ids\n        var domainIdentifier = self.services.cartesianScales.getDomainIdentifier();\n        var rangeIdentifier = self.services.cartesianScales.getRangeIdentifier();\n        matchingDataPoint = (_a = {}, _a[domainIdentifier] = datum.data.sharedStackKey, _a[rangeIdentifier] = datum.data[datum.group], _a[groupMapsTo] = datum.group, _a);\n      } // Show tooltip\n\n\n      self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n        hoveredElement: hoveredElement,\n        data: [matchingDataPoint]\n      });\n    }).on('mousemove', function (datum) {\n      var hoveredElement = select(this); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEMOVE, {\n        element: hoveredElement,\n        datum: datum\n      });\n      self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n    }).on('click', function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Bar.BAR_CLICK, {\n        element: select(this),\n        datum: datum\n      });\n    }).on('mouseout', function (datum) {\n      var hoveredElement = select(this);\n      hoveredElement.classed('hovered', false); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOUT, {\n        element: hoveredElement,\n        datum: datum\n      }); // Hide tooltip\n\n      self.services.events.dispatchEvent(Events.Tooltip.HIDE, {\n        hoveredElement: hoveredElement\n      });\n    });\n  };\n\n  StackedBar.prototype.destroy = function () {\n    // Remove event listeners\n    this.parent.selectAll('path.bar').on('mouseover', null).on('mousemove', null).on('mouseout', null); // Remove legend listeners\n\n    var eventsFragment = this.services.events;\n    eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n    eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n  };\n\n  return StackedBar;\n}(Bar);\n\nexport { StackedBar };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/components/graphs/bar-stacked.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Tools","Bar","Roles","Events","CartesianOrientations","ColorClassNameTypes","select","StackedBar","_super","_this","apply","arguments","type","handleLegendOnHover","event","hoveredElement","detail","groupMapsTo","model","getOptions","data","parent","selectAll","transition","services","transitions","getTransition","attr","datum","handleLegendMouseOut","init","eventsFragment","events","addEventListener","Legend","ITEM_HOVER","ITEM_MOUSEOUT","render","animate","svg","getContainerSVG","withinChartClip","options","stackData","getStackedData","groups","configs","barGroups","getProperty","exit","remove","enter","append","classed","GROUP","bars","sharedStackKey","merge","getColorClassName","classNameTypes","FILL","dataGroupName","originalClassName","style","getFillColor","i","key","barWidth","getBarWidth","x0","cartesianScales","getDomainValue","x1","y0","getRangeValue","y1","isOutsideZoomedDomain","Math","abs","dividerSize","getOrientation","VERTICAL","generateSVGPathString","GRAPHICS_SYMBOL","addEventListeners","self","on","_a","dispatchEvent","BAR_MOUSEOVER","element","displayData","getDisplayData","matchingDataPoint","find","domainIdentifier","getDomainIdentifier","rangeIdentifier","getRangeIdentifier","group","toString","undefined","Tooltip","SHOW","BAR_MOUSEMOVE","MOVE","BAR_CLICK","BAR_MOUSEOUT","HIDE","destroy","removeEventListener"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Tools } from '../../tools';\nimport { Bar } from './bar';\nimport { Roles, Events, CartesianOrientations, ColorClassNameTypes, } from '../../interfaces';\n// D3 Imports\nimport { select } from 'd3-selection';\nvar StackedBar = /** @class */ (function (_super) {\n    __extends(StackedBar, _super);\n    function StackedBar() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'stacked-bar';\n        // Highlight elements that match the hovered legend item\n        _this.handleLegendOnHover = function (event) {\n            var hoveredElement = event.detail.hoveredElement;\n            var groupMapsTo = _this.model.getOptions().data.groupMapsTo;\n            _this.parent\n                .selectAll('path.bar')\n                .transition(_this.services.transitions.getTransition('legend-hover-bar'))\n                .attr('opacity', function (d) {\n                return d[groupMapsTo] !== hoveredElement.datum()['name'] ? 0.3 : 1;\n            });\n        };\n        // Un-highlight all elements\n        _this.handleLegendMouseOut = function (event) {\n            _this.parent\n                .selectAll('path.bar')\n                .transition(_this.services.transitions.getTransition('legend-mouseout-bar'))\n                .attr('opacity', 1);\n        };\n        return _this;\n    }\n    StackedBar.prototype.init = function () {\n        var eventsFragment = this.services.events;\n        // Highlight correct circle on legend item hovers\n        eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n        // Un-highlight circles on legend item mouseouts\n        eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n    };\n    StackedBar.prototype.render = function (animate) {\n        var _this = this;\n        // Grab container SVG\n        var svg = this.getContainerSVG({ withinChartClip: true });\n        // Chart options mixed with the internal configurations\n        var options = this.getOptions();\n        var groupMapsTo = options.data.groupMapsTo;\n        // Create the data and keys that'll be used by the stack layout\n        var stackData = this.model.getStackedData({\n            groups: this.configs.groups,\n        });\n        // Update data on all bar groups\n        var barGroups = svg\n            .selectAll('g.bars')\n            .data(stackData, function (d) { return Tools.getProperty(d, 0, groupMapsTo); });\n        // Remove elements that need to be exited\n        // We need exit at the top here to make sure that\n        // Data filters are processed before entering new elements\n        // Or updating existing ones\n        barGroups.exit().attr('opacity', 0).remove();\n        // Add bar groups that need to be introduced\n        barGroups\n            .enter()\n            .append('g')\n            .classed('bars', true)\n            .attr('role', Roles.GROUP)\n            .attr('data-name', 'bars');\n        // Update data on all bars\n        var bars = svg\n            .selectAll('g.bars')\n            .selectAll('path.bar')\n            .data(function (d) { return d; }, function (d) { return d.data.sharedStackKey; });\n        // Remove bars that need to be removed\n        bars.exit().remove();\n        bars.enter()\n            .append('path')\n            .merge(bars)\n            .classed('bar', true)\n            .transition(this.services.transitions.getTransition('bar-update-enter', animate))\n            .attr('class', function (d) {\n            return _this.model.getColorClassName({\n                classNameTypes: [ColorClassNameTypes.FILL],\n                dataGroupName: d[groupMapsTo],\n                originalClassName: 'bar',\n            });\n        })\n            .style('fill', function (d) { return _this.model.getFillColor(d[groupMapsTo]); })\n            .attr('d', function (d, i) {\n            var key = d.data.sharedStackKey;\n            /*\n             * Orientation support for horizontal/vertical bar charts\n             * Determine coordinates needed for a vertical set of paths\n             * to draw the bars needed, and pass those coordinates down to\n             * generateSVGPathString() to decide whether it needs to flip them\n             */\n            var barWidth = _this.getBarWidth();\n            var x0 = _this.services.cartesianScales.getDomainValue(key, i) -\n                barWidth / 2;\n            var x1 = x0 + barWidth;\n            var y0 = _this.services.cartesianScales.getRangeValue(d[0], i);\n            var y1 = _this.services.cartesianScales.getRangeValue(d[1], i);\n            // don't show if part of bar is out of zoom domain\n            if (_this.isOutsideZoomedDomain(x0, x1)) {\n                return;\n            }\n            // Add the divider gap\n            if (Math.abs(y1 - y0) > 0 &&\n                Math.abs(y1 - y0) > options.bars.dividerSize) {\n                if (_this.services.cartesianScales.getOrientation() ===\n                    CartesianOrientations.VERTICAL) {\n                    y1 += 1;\n                }\n                else {\n                    y1 -= 1;\n                }\n            }\n            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, _this.services.cartesianScales.getOrientation());\n        })\n            .attr('opacity', 1)\n            // a11y\n            .attr('role', Roles.GRAPHICS_SYMBOL)\n            .attr('aria-roledescription', 'bar')\n            .attr('aria-label', function (d) { return d[1] - d[0]; });\n        // Add event listeners for the above elements\n        this.addEventListeners();\n    };\n    StackedBar.prototype.addEventListeners = function () {\n        var options = this.getOptions();\n        var groupMapsTo = options.data.groupMapsTo;\n        var self = this;\n        this.parent\n            .selectAll('path.bar')\n            .on('mouseover', function (datum) {\n            var _a;\n            var hoveredElement = select(this);\n            hoveredElement.classed('hovered', true);\n            hoveredElement.transition(self.services.transitions.getTransition('graph_element_mouseover_fill_update'));\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOVER, {\n                element: hoveredElement,\n                datum: datum,\n            });\n            var displayData = self.model.getDisplayData(self.configs.groups);\n            var matchingDataPoint = displayData.find(function (d) {\n                var domainIdentifier = self.services.cartesianScales.getDomainIdentifier(d);\n                var rangeIdentifier = self.services.cartesianScales.getRangeIdentifier(d);\n                return (d[rangeIdentifier] === datum.data[datum.group] &&\n                    d[domainIdentifier].toString() ===\n                        datum.data.sharedStackKey &&\n                    d[groupMapsTo] === datum.group);\n            });\n            if (matchingDataPoint === undefined) {\n                // use the primary range and domain ids\n                var domainIdentifier = self.services.cartesianScales.getDomainIdentifier();\n                var rangeIdentifier = self.services.cartesianScales.getRangeIdentifier();\n                matchingDataPoint = (_a = {},\n                    _a[domainIdentifier] = datum.data.sharedStackKey,\n                    _a[rangeIdentifier] = datum.data[datum.group],\n                    _a[groupMapsTo] = datum.group,\n                    _a);\n            }\n            // Show tooltip\n            self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n                hoveredElement: hoveredElement,\n                data: [matchingDataPoint],\n            });\n        })\n            .on('mousemove', function (datum) {\n            var hoveredElement = select(this);\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEMOVE, {\n                element: hoveredElement,\n                datum: datum,\n            });\n            self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n        })\n            .on('click', function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_CLICK, {\n                element: select(this),\n                datum: datum,\n            });\n        })\n            .on('mouseout', function (datum) {\n            var hoveredElement = select(this);\n            hoveredElement.classed('hovered', false);\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOUT, {\n                element: hoveredElement,\n                datum: datum,\n            });\n            // Hide tooltip\n            self.services.events.dispatchEvent(Events.Tooltip.HIDE, {\n                hoveredElement: hoveredElement,\n            });\n        });\n    };\n    StackedBar.prototype.destroy = function () {\n        // Remove event listeners\n        this.parent\n            .selectAll('path.bar')\n            .on('mouseover', null)\n            .on('mousemove', null)\n            .on('mouseout', null);\n        // Remove legend listeners\n        var eventsFragment = this.services.events;\n        eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n        eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n    };\n    return StackedBar;\n}(Bar));\nexport { StackedBar };\n//# sourceMappingURL=../../../src/components/graphs/bar-stacked.js.map"]},"metadata":{},"sourceType":"module"}