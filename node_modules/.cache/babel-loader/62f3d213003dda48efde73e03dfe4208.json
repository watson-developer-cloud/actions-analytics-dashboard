{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Bar } from './bar';\nimport { Events, Roles, ColorClassNameTypes, CartesianOrientations } from '../../interfaces';\nimport { Tools } from '../../tools'; // D3 Imports\n\nimport { select } from 'd3-selection';\n\nvar SimpleBar =\n/** @class */\nfunction (_super) {\n  __extends(SimpleBar, _super);\n\n  function SimpleBar() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'simple-bar';\n\n    _this.handleLegendOnHover = function (event) {\n      var hoveredElement = event.detail.hoveredElement;\n\n      var groupMapsTo = _this.getOptions().data.groupMapsTo;\n\n      _this.parent.selectAll('path.bar').transition(_this.services.transitions.getTransition('legend-hover-simple-bar')).attr('opacity', function (d) {\n        return d[groupMapsTo] !== hoveredElement.datum()['name'] ? 0.3 : 1;\n      });\n    };\n\n    _this.handleLegendMouseOut = function (event) {\n      _this.parent.selectAll('path.bar').transition(_this.services.transitions.getTransition('legend-mouseout-simple-bar')).attr('opacity', 1);\n    };\n\n    return _this;\n  }\n\n  SimpleBar.prototype.init = function () {\n    var eventsFragment = this.services.events; // Highlight correct circle on legend item hovers\n\n    eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover); // Un-highlight circles on legend item mouseouts\n\n    eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n  };\n\n  SimpleBar.prototype.render = function (animate) {\n    var _this = this;\n\n    var options = this.getOptions();\n    var groupMapsTo = options.data.groupMapsTo; // Grab container SVG\n\n    var svg = this.getContainerSVG({\n      withinChartClip: true\n    });\n    var data = this.model.getDisplayData(this.configs.groups);\n    var orientation = this.services.cartesianScales.getOrientation(); // Update data on all bars\n\n    var bars = svg.selectAll('path.bar').data(data, function (datum) {\n      return datum[groupMapsTo];\n    }); // Remove bars that are no longer needed\n\n    bars.exit().attr('opacity', 0).remove(); // Add the paths that need to be introduced\n\n    var barsEnter = bars.enter().append('path').attr('opacity', 0);\n    barsEnter.merge(bars).classed('bar', true).attr('width', this.getBarWidth.bind(this)).transition(this.services.transitions.getTransition('bar-update-enter', animate)).attr('class', function (d) {\n      return _this.model.getColorClassName({\n        classNameTypes: [ColorClassNameTypes.FILL],\n        dataGroupName: d[groupMapsTo],\n        originalClassName: 'bar'\n      });\n    }).style('fill', function (d) {\n      return _this.model.getFillColor(d[groupMapsTo]);\n    }).attr('d', function (d, i) {\n      /*\n       * Orientation support for horizontal/vertical bar charts\n       * Determine coordinates needed for a vertical set of paths\n       * to draw the bars needed, and pass those coordinates down to\n       * generateSVGPathString() to decide whether it needs to flip them\n       */\n      var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier();\n\n      var barWidth = _this.getBarWidth();\n\n      var value = d[rangeIdentifier];\n      var x0 = _this.services.cartesianScales.getDomainValue(d, i) - barWidth / 2;\n      var x1 = x0 + barWidth;\n      var y0, y1;\n\n      if (Array.isArray(value) && value.length === 2) {\n        y0 = _this.services.cartesianScales.getRangeValue(value[0]);\n        y1 = _this.services.cartesianScales.getRangeValue(value[1], i);\n      } else {\n        y0 = _this.services.cartesianScales.getRangeValue(0);\n        y1 = _this.services.cartesianScales.getRangeValue(d, i);\n      }\n\n      var difference = Math.abs(y1 - y0); // Set a min-2px size for the bar\n\n      if (difference !== 0 && difference < 2) {\n        if (value > 0 && orientation === CartesianOrientations.VERTICAL || value < 0 && orientation === CartesianOrientations.HORIZONTAL) {\n          y1 = y0 - 2;\n        } else {\n          y1 = y0 + 2;\n        }\n      } // don't show if part of bar is out of zoom domain\n\n\n      if (_this.isOutsideZoomedDomain(x0, x1)) {\n        return;\n      }\n\n      return Tools.generateSVGPathString({\n        x0: x0,\n        x1: x1,\n        y0: y0,\n        y1: y1\n      }, orientation);\n    }).attr('opacity', 1) // a11y\n    .attr('role', Roles.GRAPHICS_SYMBOL).attr('aria-roledescription', 'bar').attr('aria-label', function (d) {\n      return d.value;\n    }); // Add event listeners to elements drawn\n\n    this.addEventListeners();\n  };\n\n  SimpleBar.prototype.addEventListeners = function () {\n    var self = this;\n    this.parent.selectAll('path.bar').on('mouseover', function (datum) {\n      var hoveredElement = select(this);\n      hoveredElement.classed('hovered', true);\n      hoveredElement.transition(self.services.transitions.getTransition('graph_element_mouseover_fill_update')); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOVER, {\n        element: hoveredElement,\n        datum: datum\n      });\n      self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n        hoveredElement: hoveredElement,\n        data: [datum]\n      });\n    }).on('mousemove', function (datum) {\n      var hoveredElement = select(this); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEMOVE, {\n        element: select(this),\n        datum: datum\n      });\n      self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n    }).on('click', function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Bar.BAR_CLICK, {\n        element: select(this),\n        datum: datum\n      });\n    }).on('mouseout', function (datum) {\n      var hoveredElement = select(this);\n      hoveredElement.classed('hovered', false);\n      hoveredElement.transition(self.services.transitions.getTransition('graph_element_mouseout_fill_update')); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOUT, {\n        element: hoveredElement,\n        datum: datum\n      }); // Hide tooltip\n\n      self.services.events.dispatchEvent(Events.Tooltip.HIDE, {\n        hoveredElement: hoveredElement\n      });\n    });\n  };\n\n  SimpleBar.prototype.destroy = function () {\n    // Remove event listeners\n    this.parent.selectAll('path.bar').on('mouseover', null).on('mousemove', null).on('mouseout', null); // Remove legend listeners\n\n    var eventsFragment = this.services.events;\n    eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n    eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n  };\n\n  return SimpleBar;\n}(Bar);\n\nexport { SimpleBar };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/components/graphs/bar-simple.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Bar","Events","Roles","ColorClassNameTypes","CartesianOrientations","Tools","select","SimpleBar","_super","_this","apply","arguments","type","handleLegendOnHover","event","hoveredElement","detail","groupMapsTo","getOptions","data","parent","selectAll","transition","services","transitions","getTransition","attr","datum","handleLegendMouseOut","init","eventsFragment","events","addEventListener","Legend","ITEM_HOVER","ITEM_MOUSEOUT","render","animate","options","svg","getContainerSVG","withinChartClip","model","getDisplayData","configs","groups","orientation","cartesianScales","getOrientation","bars","exit","remove","barsEnter","enter","append","merge","classed","getBarWidth","bind","getColorClassName","classNameTypes","FILL","dataGroupName","originalClassName","style","getFillColor","i","rangeIdentifier","getRangeIdentifier","barWidth","value","x0","getDomainValue","x1","y0","y1","isArray","length","getRangeValue","difference","Math","abs","VERTICAL","HORIZONTAL","isOutsideZoomedDomain","generateSVGPathString","GRAPHICS_SYMBOL","addEventListeners","self","on","dispatchEvent","BAR_MOUSEOVER","element","Tooltip","SHOW","BAR_MOUSEMOVE","MOVE","BAR_CLICK","BAR_MOUSEOUT","HIDE","destroy","removeEventListener"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Bar } from './bar';\nimport { Events, Roles, ColorClassNameTypes, CartesianOrientations, } from '../../interfaces';\nimport { Tools } from '../../tools';\n// D3 Imports\nimport { select } from 'd3-selection';\nvar SimpleBar = /** @class */ (function (_super) {\n    __extends(SimpleBar, _super);\n    function SimpleBar() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'simple-bar';\n        _this.handleLegendOnHover = function (event) {\n            var hoveredElement = event.detail.hoveredElement;\n            var groupMapsTo = _this.getOptions().data.groupMapsTo;\n            _this.parent\n                .selectAll('path.bar')\n                .transition(_this.services.transitions.getTransition('legend-hover-simple-bar'))\n                .attr('opacity', function (d) {\n                return d[groupMapsTo] !== hoveredElement.datum()['name'] ? 0.3 : 1;\n            });\n        };\n        _this.handleLegendMouseOut = function (event) {\n            _this.parent\n                .selectAll('path.bar')\n                .transition(_this.services.transitions.getTransition('legend-mouseout-simple-bar'))\n                .attr('opacity', 1);\n        };\n        return _this;\n    }\n    SimpleBar.prototype.init = function () {\n        var eventsFragment = this.services.events;\n        // Highlight correct circle on legend item hovers\n        eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n        // Un-highlight circles on legend item mouseouts\n        eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n    };\n    SimpleBar.prototype.render = function (animate) {\n        var _this = this;\n        var options = this.getOptions();\n        var groupMapsTo = options.data.groupMapsTo;\n        // Grab container SVG\n        var svg = this.getContainerSVG({ withinChartClip: true });\n        var data = this.model.getDisplayData(this.configs.groups);\n        var orientation = this.services.cartesianScales.getOrientation();\n        // Update data on all bars\n        var bars = svg\n            .selectAll('path.bar')\n            .data(data, function (datum) { return datum[groupMapsTo]; });\n        // Remove bars that are no longer needed\n        bars.exit().attr('opacity', 0).remove();\n        // Add the paths that need to be introduced\n        var barsEnter = bars.enter().append('path').attr('opacity', 0);\n        barsEnter\n            .merge(bars)\n            .classed('bar', true)\n            .attr('width', this.getBarWidth.bind(this))\n            .transition(this.services.transitions.getTransition('bar-update-enter', animate))\n            .attr('class', function (d) {\n            return _this.model.getColorClassName({\n                classNameTypes: [ColorClassNameTypes.FILL],\n                dataGroupName: d[groupMapsTo],\n                originalClassName: 'bar',\n            });\n        })\n            .style('fill', function (d) { return _this.model.getFillColor(d[groupMapsTo]); })\n            .attr('d', function (d, i) {\n            /*\n             * Orientation support for horizontal/vertical bar charts\n             * Determine coordinates needed for a vertical set of paths\n             * to draw the bars needed, and pass those coordinates down to\n             * generateSVGPathString() to decide whether it needs to flip them\n             */\n            var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier();\n            var barWidth = _this.getBarWidth();\n            var value = d[rangeIdentifier];\n            var x0 = _this.services.cartesianScales.getDomainValue(d, i) -\n                barWidth / 2;\n            var x1 = x0 + barWidth;\n            var y0, y1;\n            if (Array.isArray(value) && value.length === 2) {\n                y0 = _this.services.cartesianScales.getRangeValue(value[0]);\n                y1 = _this.services.cartesianScales.getRangeValue(value[1], i);\n            }\n            else {\n                y0 = _this.services.cartesianScales.getRangeValue(0);\n                y1 = _this.services.cartesianScales.getRangeValue(d, i);\n            }\n            var difference = Math.abs(y1 - y0);\n            // Set a min-2px size for the bar\n            if (difference !== 0 && difference < 2) {\n                if ((value > 0 &&\n                    orientation === CartesianOrientations.VERTICAL) ||\n                    (value < 0 &&\n                        orientation === CartesianOrientations.HORIZONTAL)) {\n                    y1 = y0 - 2;\n                }\n                else {\n                    y1 = y0 + 2;\n                }\n            }\n            // don't show if part of bar is out of zoom domain\n            if (_this.isOutsideZoomedDomain(x0, x1)) {\n                return;\n            }\n            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, orientation);\n        })\n            .attr('opacity', 1)\n            // a11y\n            .attr('role', Roles.GRAPHICS_SYMBOL)\n            .attr('aria-roledescription', 'bar')\n            .attr('aria-label', function (d) { return d.value; });\n        // Add event listeners to elements drawn\n        this.addEventListeners();\n    };\n    SimpleBar.prototype.addEventListeners = function () {\n        var self = this;\n        this.parent\n            .selectAll('path.bar')\n            .on('mouseover', function (datum) {\n            var hoveredElement = select(this);\n            hoveredElement.classed('hovered', true);\n            hoveredElement.transition(self.services.transitions.getTransition('graph_element_mouseover_fill_update'));\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOVER, {\n                element: hoveredElement,\n                datum: datum,\n            });\n            self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n                hoveredElement: hoveredElement,\n                data: [datum],\n            });\n        })\n            .on('mousemove', function (datum) {\n            var hoveredElement = select(this);\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEMOVE, {\n                element: select(this),\n                datum: datum,\n            });\n            self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n        })\n            .on('click', function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_CLICK, {\n                element: select(this),\n                datum: datum,\n            });\n        })\n            .on('mouseout', function (datum) {\n            var hoveredElement = select(this);\n            hoveredElement.classed('hovered', false);\n            hoveredElement.transition(self.services.transitions.getTransition('graph_element_mouseout_fill_update'));\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOUT, {\n                element: hoveredElement,\n                datum: datum,\n            });\n            // Hide tooltip\n            self.services.events.dispatchEvent(Events.Tooltip.HIDE, {\n                hoveredElement: hoveredElement,\n            });\n        });\n    };\n    SimpleBar.prototype.destroy = function () {\n        // Remove event listeners\n        this.parent\n            .selectAll('path.bar')\n            .on('mouseover', null)\n            .on('mousemove', null)\n            .on('mouseout', null);\n        // Remove legend listeners\n        var eventsFragment = this.services.events;\n        eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n        eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n    };\n    return SimpleBar;\n}(Bar));\nexport { SimpleBar };\n//# sourceMappingURL=../../../src/components/graphs/bar-simple.js.map"]},"metadata":{},"sourceType":"module"}