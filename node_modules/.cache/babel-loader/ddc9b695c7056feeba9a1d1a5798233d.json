{"ast":null,"code":"import OverviewPage from './OverviewPage';\nimport { connect } from 'react-redux';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var props = {\n    statsLoaded: state.statsLoaded,\n    uniqueUsers: state.stats.uniqueUsers,\n    uniqueSessions: state.stats.uniqueSessions,\n    requestCount: state.stats.requestCount,\n    maxTopicCount: 0,\n    recognized: state.stats.recognized,\n    notRecognized: state.stats.notRecognized,\n    recognizedPercent: 100\n  };\n  var intentsArr = [];\n\n  if (state.statsLoaded) {\n    props.recognizedPercent = Math.round(100 * (props.recognized / (props.recognized + props.notRecognized)));\n  }\n\n  return props;\n};\n\nexport default connect(mapStateToProps)(OverviewPage);","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/content/OverviewPage/index.js"],"names":["OverviewPage","connect","mapStateToProps","state","props","statsLoaded","uniqueUsers","stats","uniqueSessions","requestCount","maxTopicCount","recognized","notRecognized","recognizedPercent","intentsArr","Math","round"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,MAAIC,KAAK,GAAG;AACRC,IAAAA,WAAW,EAAEF,KAAK,CAACE,WADX;AAERC,IAAAA,WAAW,EAAEH,KAAK,CAACI,KAAN,CAAYD,WAFjB;AAGRE,IAAAA,cAAc,EAAEL,KAAK,CAACI,KAAN,CAAYC,cAHpB;AAIRC,IAAAA,YAAY,EAAEN,KAAK,CAACI,KAAN,CAAYE,YAJlB;AAKRC,IAAAA,aAAa,EAAE,CALP;AAMRC,IAAAA,UAAU,EAAER,KAAK,CAACI,KAAN,CAAYI,UANhB;AAORC,IAAAA,aAAa,EAAET,KAAK,CAACI,KAAN,CAAYK,aAPnB;AAQRC,IAAAA,iBAAiB,EAAE;AARX,GAAZ;AAWA,MAAIC,UAAU,GAAG,EAAjB;;AAEA,MAAIX,KAAK,CAACE,WAAV,EAAuB;AACnBD,IAAAA,KAAK,CAACS,iBAAN,GAA0BE,IAAI,CAACC,KAAL,CAAW,OAAOZ,KAAK,CAACO,UAAN,IAAoBP,KAAK,CAACO,UAAN,GAAmBP,KAAK,CAACQ,aAA7C,CAAP,CAAX,CAA1B;AACH;;AAED,SAAOR,KAAP;AACH,CAnBD;;AAqBA,eAAeH,OAAO,CAACC,eAAD,CAAP,CAAyBF,YAAzB,CAAf","sourcesContent":["import OverviewPage from './OverviewPage';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n    let props = {\n        statsLoaded: state.statsLoaded,\n        uniqueUsers: state.stats.uniqueUsers,\n        uniqueSessions: state.stats.uniqueSessions,\n        requestCount: state.stats.requestCount,\n        maxTopicCount: 0,\n        recognized: state.stats.recognized,\n        notRecognized: state.stats.notRecognized,\n        recognizedPercent: 100\n    };\n\n    var intentsArr = []\n\n    if (state.statsLoaded) {\n        props.recognizedPercent = Math.round(100 * (props.recognized / (props.recognized + props.notRecognized)))\n    }\n\n    return props\n}\n\nexport default connect(mapStateToProps)(OverviewPage)"]},"metadata":{},"sourceType":"module"}