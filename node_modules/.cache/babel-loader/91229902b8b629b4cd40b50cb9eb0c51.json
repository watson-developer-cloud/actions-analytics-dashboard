{"ast":null,"code":"import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/node_modules/date-fns/esm/_lib/setUTCISODay/index.js"],"names":["toInteger","toDate","setUTCISODay","dirtyDate","dirtyDay","arguments","length","TypeError","day","weekStartsOn","date","currentDay","getUTCDay","remainder","dayIndex","diff","setUTCDate","getUTCDate"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,uBAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB,C,CAA4C;AAC5C;;AAEA,eAAe,SAASC,YAAT,CAAsBC,SAAtB,EAAiCC,QAAjC,EAA2C;AACxD,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CAAc,oCAAoCF,SAAS,CAACC,MAA9C,GAAuD,UAArE,CAAN;AACD;;AAED,MAAIE,GAAG,GAAGR,SAAS,CAACI,QAAD,CAAnB;;AAEA,MAAII,GAAG,GAAG,CAAN,KAAY,CAAhB,EAAmB;AACjBA,IAAAA,GAAG,GAAGA,GAAG,GAAG,CAAZ;AACD;;AAED,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,IAAI,GAAGT,MAAM,CAACE,SAAD,CAAjB;AACA,MAAIQ,UAAU,GAAGD,IAAI,CAACE,SAAL,EAAjB;AACA,MAAIC,SAAS,GAAGL,GAAG,GAAG,CAAtB;AACA,MAAIM,QAAQ,GAAG,CAACD,SAAS,GAAG,CAAb,IAAkB,CAAjC;AACA,MAAIE,IAAI,GAAG,CAACD,QAAQ,GAAGL,YAAX,GAA0B,CAA1B,GAA8B,CAA/B,IAAoCD,GAApC,GAA0CG,UAArD;AACAD,EAAAA,IAAI,CAACM,UAAL,CAAgBN,IAAI,CAACO,UAAL,KAAoBF,IAApC;AACA,SAAOL,IAAP;AACD","sourcesContent":["import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}"]},"metadata":{},"sourceType":"module"}