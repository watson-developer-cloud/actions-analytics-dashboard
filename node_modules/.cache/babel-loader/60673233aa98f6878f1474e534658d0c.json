{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Component } from '../component';\nimport { DOMUtils } from '../../services';\nimport { Tools } from '../../tools';\n\nvar ZeroLine =\n/** @class */\nfunction (_super) {\n  __extends(ZeroLine, _super);\n\n  function ZeroLine() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'zero-line';\n    return _this;\n  }\n\n  ZeroLine.prototype.render = function (animate) {\n    var axisPosition = this.services.cartesianScales.getRangeAxisPosition({\n      groups: this.configs.groups\n    });\n    var rangeScale = this.services.cartesianScales.getScaleByPosition(axisPosition); // check the domain\n\n    var _a = rangeScale.domain(),\n        minDomainValue = _a[0],\n        maxDomainValue = _a[1];\n\n    var drawZeroLine = minDomainValue > 0 && maxDomainValue < 0 || minDomainValue < 0 && maxDomainValue > 0; // Grab container SVG\n\n    var svg = this.getContainerSVG(); // show zero line only if is necessary, otherwise make sure tto remove zero line if the chart\n    // previously had a domain that went into negatives\n\n    if (!drawZeroLine) {\n      // otherwise if a chart draws a zero line and then the domain change the zero line is still in the DOM\n      svg.selectAll('line.domain').remove();\n      return;\n    } // Get x & y position of the line\n\n\n    var _b = this.services.cartesianScales.getDomainScale().range(),\n        x0 = _b[0],\n        x1 = _b[1];\n\n    var yPosition = +rangeScale(0) + 0.5; // if scale domain contains NaN, return the first value of the range\n    // this is necessary for the zero line y position that otherwise is NaN\n    // so on the top of the chart while we want it on the bottom\n\n    if (!yPosition) {\n      yPosition = rangeScale.range()[0];\n    }\n\n    var lineCoordinates = Tools.flipSVGCoordinatesBasedOnOrientation({\n      x0: x0,\n      x1: x1,\n      y0: yPosition,\n      y1: yPosition\n    }, this.services.cartesianScales.getOrientation());\n    var line = DOMUtils.appendOrSelect(svg, 'line.domain');\n    line.transition(this.services.transitions.getTransition('zero-line-update', animate)).attr('y1', lineCoordinates.y0).attr('y2', lineCoordinates.y1).attr('x1', lineCoordinates.x0).attr('x2', lineCoordinates.x1);\n  };\n\n  return ZeroLine;\n}(Component);\n\nexport { ZeroLine };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/components/axes/zero-line.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Component","DOMUtils","Tools","ZeroLine","_super","_this","apply","arguments","type","render","animate","axisPosition","services","cartesianScales","getRangeAxisPosition","groups","configs","rangeScale","getScaleByPosition","_a","domain","minDomainValue","maxDomainValue","drawZeroLine","svg","getContainerSVG","selectAll","remove","_b","getDomainScale","range","x0","x1","yPosition","lineCoordinates","flipSVGCoordinatesBasedOnOrientation","y0","y1","getOrientation","line","appendOrSelect","transition","transitions","getTransition","attr"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,cAAa,GAAG,uBAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,cAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd;AAAiB,YAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAA1C;AAAwD,KAF9E;;AAGA,WAAOP,cAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,cAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C,C,CAaA;;;AACA,SAASI,SAAT,QAA0B,cAA1B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,KAAT,QAAsB,aAAtB;;AACA,IAAIC,QAAQ;AAAG;AAAe,UAAUC,MAAV,EAAkB;AAC5ClB,EAAAA,SAAS,CAACiB,QAAD,EAAWC,MAAX,CAAT;;AACA,WAASD,QAAT,GAAoB;AAChB,QAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;AACAF,IAAAA,KAAK,CAACG,IAAN,GAAa,WAAb;AACA,WAAOH,KAAP;AACH;;AACDF,EAAAA,QAAQ,CAACL,SAAT,CAAmBW,MAAnB,GAA4B,UAAUC,OAAV,EAAmB;AAC3C,QAAIC,YAAY,GAAG,KAAKC,QAAL,CAAcC,eAAd,CAA8BC,oBAA9B,CAAmD;AAAEC,MAAAA,MAAM,EAAE,KAAKC,OAAL,CAAaD;AAAvB,KAAnD,CAAnB;AACA,QAAIE,UAAU,GAAG,KAAKL,QAAL,CAAcC,eAAd,CAA8BK,kBAA9B,CAAiDP,YAAjD,CAAjB,CAF2C,CAG3C;;AACA,QAAIQ,EAAE,GAAGF,UAAU,CAACG,MAAX,EAAT;AAAA,QAA8BC,cAAc,GAAGF,EAAE,CAAC,CAAD,CAAjD;AAAA,QAAsDG,cAAc,GAAGH,EAAE,CAAC,CAAD,CAAzE;;AACA,QAAII,YAAY,GAAIF,cAAc,GAAG,CAAjB,IAAsBC,cAAc,GAAG,CAAxC,IACdD,cAAc,GAAG,CAAjB,IAAsBC,cAAc,GAAG,CAD5C,CAL2C,CAO3C;;AACA,QAAIE,GAAG,GAAG,KAAKC,eAAL,EAAV,CAR2C,CAS3C;AACA;;AACA,QAAI,CAACF,YAAL,EAAmB;AACf;AACAC,MAAAA,GAAG,CAACE,SAAJ,CAAc,aAAd,EAA6BC,MAA7B;AACA;AACH,KAf0C,CAgB3C;;;AACA,QAAIC,EAAE,GAAG,KAAKhB,QAAL,CAAcC,eAAd,CAA8BgB,cAA9B,GAA+CC,KAA/C,EAAT;AAAA,QAAiEC,EAAE,GAAGH,EAAE,CAAC,CAAD,CAAxE;AAAA,QAA6EI,EAAE,GAAGJ,EAAE,CAAC,CAAD,CAApF;;AACA,QAAIK,SAAS,GAAG,CAAChB,UAAU,CAAC,CAAD,CAAX,GAAiB,GAAjC,CAlB2C,CAmB3C;AACA;AACA;;AACA,QAAI,CAACgB,SAAL,EAAgB;AACZA,MAAAA,SAAS,GAAGhB,UAAU,CAACa,KAAX,GAAmB,CAAnB,CAAZ;AACH;;AACD,QAAII,eAAe,GAAGhC,KAAK,CAACiC,oCAAN,CAA2C;AAC7DJ,MAAAA,EAAE,EAAEA,EADyD;AAE7DC,MAAAA,EAAE,EAAEA,EAFyD;AAG7DI,MAAAA,EAAE,EAAEH,SAHyD;AAI7DI,MAAAA,EAAE,EAAEJ;AAJyD,KAA3C,EAKnB,KAAKrB,QAAL,CAAcC,eAAd,CAA8ByB,cAA9B,EALmB,CAAtB;AAMA,QAAIC,IAAI,GAAGtC,QAAQ,CAACuC,cAAT,CAAwBhB,GAAxB,EAA6B,aAA7B,CAAX;AACAe,IAAAA,IAAI,CAACE,UAAL,CAAgB,KAAK7B,QAAL,CAAc8B,WAAd,CAA0BC,aAA1B,CAAwC,kBAAxC,EAA4DjC,OAA5D,CAAhB,EACKkC,IADL,CACU,IADV,EACgBV,eAAe,CAACE,EADhC,EAEKQ,IAFL,CAEU,IAFV,EAEgBV,eAAe,CAACG,EAFhC,EAGKO,IAHL,CAGU,IAHV,EAGgBV,eAAe,CAACH,EAHhC,EAIKa,IAJL,CAIU,IAJV,EAIgBV,eAAe,CAACF,EAJhC;AAKH,GArCD;;AAsCA,SAAO7B,QAAP;AACH,CA9C6B,CA8C5BH,SA9C4B,CAA9B;;AA+CA,SAASG,QAAT","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Component } from '../component';\nimport { DOMUtils } from '../../services';\nimport { Tools } from '../../tools';\nvar ZeroLine = /** @class */ (function (_super) {\n    __extends(ZeroLine, _super);\n    function ZeroLine() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'zero-line';\n        return _this;\n    }\n    ZeroLine.prototype.render = function (animate) {\n        var axisPosition = this.services.cartesianScales.getRangeAxisPosition({ groups: this.configs.groups });\n        var rangeScale = this.services.cartesianScales.getScaleByPosition(axisPosition);\n        // check the domain\n        var _a = rangeScale.domain(), minDomainValue = _a[0], maxDomainValue = _a[1];\n        var drawZeroLine = (minDomainValue > 0 && maxDomainValue < 0) ||\n            (minDomainValue < 0 && maxDomainValue > 0);\n        // Grab container SVG\n        var svg = this.getContainerSVG();\n        // show zero line only if is necessary, otherwise make sure tto remove zero line if the chart\n        // previously had a domain that went into negatives\n        if (!drawZeroLine) {\n            // otherwise if a chart draws a zero line and then the domain change the zero line is still in the DOM\n            svg.selectAll('line.domain').remove();\n            return;\n        }\n        // Get x & y position of the line\n        var _b = this.services.cartesianScales.getDomainScale().range(), x0 = _b[0], x1 = _b[1];\n        var yPosition = +rangeScale(0) + 0.5;\n        // if scale domain contains NaN, return the first value of the range\n        // this is necessary for the zero line y position that otherwise is NaN\n        // so on the top of the chart while we want it on the bottom\n        if (!yPosition) {\n            yPosition = rangeScale.range()[0];\n        }\n        var lineCoordinates = Tools.flipSVGCoordinatesBasedOnOrientation({\n            x0: x0,\n            x1: x1,\n            y0: yPosition,\n            y1: yPosition,\n        }, this.services.cartesianScales.getOrientation());\n        var line = DOMUtils.appendOrSelect(svg, 'line.domain');\n        line.transition(this.services.transitions.getTransition('zero-line-update', animate))\n            .attr('y1', lineCoordinates.y0)\n            .attr('y2', lineCoordinates.y1)\n            .attr('x1', lineCoordinates.x0)\n            .attr('x2', lineCoordinates.x1);\n    };\n    return ZeroLine;\n}(Component));\nexport { ZeroLine };\n//# sourceMappingURL=../../../src/components/axes/zero-line.js.map"]},"metadata":{},"sourceType":"module"}