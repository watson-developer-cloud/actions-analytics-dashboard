{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n}; // Internal Imports\n\n\nimport { ChartModel } from './model';\nimport { Tools } from './tools';\nimport { LegendItemType } from './interfaces/enums';\n/** The charting model layer which includes mainly the chart data and options,\n * as well as some misc. information to be shared among components */\n\nvar CirclePackChartModel =\n/** @class */\nfunction (_super) {\n  __extends(CirclePackChartModel, _super);\n\n  function CirclePackChartModel(services) {\n    var _this = _super.call(this, services) || this;\n\n    _this.parentNode = false;\n\n    _this.set({\n      depth: 2\n    }, {\n      skipUpdate: true\n    });\n\n    return _this;\n  }\n\n  CirclePackChartModel.prototype.setData = function (newData) {\n    _super.prototype.setData.call(this, newData);\n\n    this.setDataGroups();\n\n    if (newData.length === 1) {\n      this.parentNode = true;\n    }\n\n    this.setZoom();\n  };\n\n  CirclePackChartModel.prototype.setOptions = function (newOptions) {\n    var options = this.getOptions();\n    var zoomOptions = Tools.merge({}, newOptions, this.getZoomOptions(newOptions));\n    Tools.updateLegendAdditionalItems(options, zoomOptions);\n    var depth = this.getHierarchyLevel();\n    var userProvidedDepth = Tools.getProperty(options, 'circlePack', 'hierarchyLevel');\n    this.set({\n      options: Tools.merge(options, zoomOptions),\n      depth: userProvidedDepth && userProvidedDepth < 4 ? userProvidedDepth : depth\n    });\n  };\n\n  CirclePackChartModel.prototype.getZoomOptions = function (options) {\n    if (!this.getDisplayData()) {\n      return {};\n    } // uses the user provided options and data to determine if there is zoom in this CP chart\n\n\n    var displayData = this.getDisplayData();\n    var zoomOptions = options ? options : this.getOptions();\n    var data = displayData.length === 1 && Tools.getProperty(displayData, 0, 'children') ? Tools.getProperty(displayData, 0, 'children') : displayData;\n    var depth = this.getHierarchyLevel(); // check the data depth\n\n    data.some(function (datum) {\n      if (datum.children) {\n        if (datum.children.some(function (item) {\n          return item.children;\n        })) {\n          depth = 3;\n          return false;\n        }\n      }\n    });\n\n    if (Tools.getProperty(zoomOptions, 'canvasZoom', 'enabled') === true && depth > 2) {\n      return {\n        legend: {\n          additionalItems: [{\n            type: LegendItemType.ZOOM,\n            name: 'Click to zoom'\n          }]\n        }\n      };\n    }\n\n    return null;\n  };\n\n  CirclePackChartModel.prototype.setZoom = function (options) {\n    this.setOptions(this.getZoomOptions(options));\n  }; // update the hierarchy level\n\n\n  CirclePackChartModel.prototype.updateHierarchyLevel = function (depth) {\n    this.set({\n      depth: depth\n    });\n  };\n\n  CirclePackChartModel.prototype.getHierarchyLevel = function () {\n    return this.get('depth');\n  };\n\n  CirclePackChartModel.prototype.hasParentNode = function () {\n    return this.parentNode;\n  }; // set the datagroup name on the items that are it's children\n\n\n  CirclePackChartModel.prototype.setDataGroups = function () {\n    var _this = this;\n\n    var data = this.getData();\n    var options = this.getOptions();\n    var groupMapsTo = options.data.groupMapsTo;\n    var newData = data.map(function (depthOne) {\n      var groupName = depthOne[groupMapsTo];\n      return _this.setChildrenDataGroup(depthOne, groupName);\n    });\n    this.set({\n      data: newData\n    }, {\n      skipUpdate: true\n    });\n  }; // sets name recursively down the node tree\n\n\n  CirclePackChartModel.prototype.setChildrenDataGroup = function (node, name) {\n    var _this = this;\n\n    if (node.children) {\n      return __assign(__assign({}, node), {\n        dataGroupName: name,\n        children: node.children.map(function (child, i) {\n          return _this.setChildrenDataGroup(child, name);\n        })\n      });\n    } else {\n      return __assign(__assign({}, node), {\n        dataGroupName: name\n      });\n    }\n  };\n\n  return CirclePackChartModel;\n}(ChartModel);\n\nexport { CirclePackChartModel };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/model-circle-pack.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","ChartModel","Tools","LegendItemType","CirclePackChartModel","_super","services","_this","parentNode","set","depth","skipUpdate","setData","newData","setDataGroups","setZoom","setOptions","newOptions","options","getOptions","zoomOptions","merge","getZoomOptions","updateLegendAdditionalItems","getHierarchyLevel","userProvidedDepth","getProperty","getDisplayData","displayData","data","some","datum","children","item","legend","additionalItems","type","ZOOM","name","updateHierarchyLevel","get","hasParentNode","getData","groupMapsTo","map","depthOne","groupName","setChildrenDataGroup","node","dataGroupName","child"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Internal Imports\nimport { ChartModel } from './model';\nimport { Tools } from './tools';\nimport { LegendItemType } from './interfaces/enums';\n/** The charting model layer which includes mainly the chart data and options,\n * as well as some misc. information to be shared among components */\nvar CirclePackChartModel = /** @class */ (function (_super) {\n    __extends(CirclePackChartModel, _super);\n    function CirclePackChartModel(services) {\n        var _this = _super.call(this, services) || this;\n        _this.parentNode = false;\n        _this.set({ depth: 2 }, { skipUpdate: true });\n        return _this;\n    }\n    CirclePackChartModel.prototype.setData = function (newData) {\n        _super.prototype.setData.call(this, newData);\n        this.setDataGroups();\n        if (newData.length === 1) {\n            this.parentNode = true;\n        }\n        this.setZoom();\n    };\n    CirclePackChartModel.prototype.setOptions = function (newOptions) {\n        var options = this.getOptions();\n        var zoomOptions = Tools.merge({}, newOptions, this.getZoomOptions(newOptions));\n        Tools.updateLegendAdditionalItems(options, zoomOptions);\n        var depth = this.getHierarchyLevel();\n        var userProvidedDepth = Tools.getProperty(options, 'circlePack', 'hierarchyLevel');\n        this.set({\n            options: Tools.merge(options, zoomOptions),\n            depth: userProvidedDepth && userProvidedDepth < 4\n                ? userProvidedDepth\n                : depth,\n        });\n    };\n    CirclePackChartModel.prototype.getZoomOptions = function (options) {\n        if (!this.getDisplayData()) {\n            return {};\n        }\n        // uses the user provided options and data to determine if there is zoom in this CP chart\n        var displayData = this.getDisplayData();\n        var zoomOptions = options ? options : this.getOptions();\n        var data = displayData.length === 1 && Tools.getProperty(displayData, 0, 'children')\n            ? Tools.getProperty(displayData, 0, 'children')\n            : displayData;\n        var depth = this.getHierarchyLevel();\n        // check the data depth\n        data.some(function (datum) {\n            if (datum.children) {\n                if (datum.children.some(function (item) { return item.children; })) {\n                    depth = 3;\n                    return false;\n                }\n            }\n        });\n        if (Tools.getProperty(zoomOptions, 'canvasZoom', 'enabled') === true &&\n            depth > 2) {\n            return {\n                legend: {\n                    additionalItems: [\n                        {\n                            type: LegendItemType.ZOOM,\n                            name: 'Click to zoom',\n                        },\n                    ],\n                },\n            };\n        }\n        return null;\n    };\n    CirclePackChartModel.prototype.setZoom = function (options) {\n        this.setOptions(this.getZoomOptions(options));\n    };\n    // update the hierarchy level\n    CirclePackChartModel.prototype.updateHierarchyLevel = function (depth) {\n        this.set({ depth: depth });\n    };\n    CirclePackChartModel.prototype.getHierarchyLevel = function () {\n        return this.get('depth');\n    };\n    CirclePackChartModel.prototype.hasParentNode = function () {\n        return this.parentNode;\n    };\n    // set the datagroup name on the items that are it's children\n    CirclePackChartModel.prototype.setDataGroups = function () {\n        var _this = this;\n        var data = this.getData();\n        var options = this.getOptions();\n        var groupMapsTo = options.data.groupMapsTo;\n        var newData = data.map(function (depthOne) {\n            var groupName = depthOne[groupMapsTo];\n            return _this.setChildrenDataGroup(depthOne, groupName);\n        });\n        this.set({\n            data: newData,\n        }, { skipUpdate: true });\n    };\n    // sets name recursively down the node tree\n    CirclePackChartModel.prototype.setChildrenDataGroup = function (node, name) {\n        var _this = this;\n        if (node.children) {\n            return __assign(__assign({}, node), { dataGroupName: name, children: node.children.map(function (child, i) {\n                    return _this.setChildrenDataGroup(child, name);\n                }) });\n        }\n        else {\n            return __assign(__assign({}, node), { dataGroupName: name });\n        }\n    };\n    return CirclePackChartModel;\n}(ChartModel));\nexport { CirclePackChartModel };\n//# sourceMappingURL=../src/model-circle-pack.js.map"]},"metadata":{},"sourceType":"module"}