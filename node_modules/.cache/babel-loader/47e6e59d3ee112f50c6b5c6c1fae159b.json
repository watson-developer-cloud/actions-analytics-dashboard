{"ast":null,"code":"import OverviewPage from './OverviewPage';\nimport { connect } from 'react-redux';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var props = {\n    statsLoaded: state.statsLoaded,\n    uniqueUsers: state.stats.uniqueUsers,\n    uniqueSessions: state.stats.uniqueSessions,\n    requestCount: state.stats.requestCount\n  };\n  var maxTopicCount = 0;\n  var intentsArr = [];\n  Object.keys(stats.intents).forEach(function (key) {\n    maxTopicCount = Math.max(stats.intents[key], maxTopicCount);\n    intentsArr.push({\n      \"label\": key,\n      \"count\": stats.intents[key]\n    });\n  });\n  props[\"maxTopicCount\"] = maxTopicCount;\n  intentsArr.sort(function (a, b) {\n    return parseFloat(a.count) - parseFloat(b.count);\n  });\n  var mostCommon = intentsArr.slice(0, 10);\n  intentsArr.sort(function (a, b) {\n    return parseFloat(b.count) - parseFloat(a.count);\n  });\n  var leastCommon = intentsArr.slice(0, 10);\n  props[\"mostCommonData\"] = mostCommon;\n  props[\"leastCommonData\"] = leastCommon;\n  props[\"frequentlyEscalatedData\"] = [];\n  props[\"notRecognizedData\"] = [{\n    label: \"I need to pay my bill\"\n  }, {\n    label: \"Where can I get my account information?\"\n  }, {\n    label: \"I need to transfer money to my family in Russia.\"\n  }, {\n    label: \"I was charged $7000 by my energy company\"\n  }, {\n    label: \"Wow so cool haha\"\n  }, {\n    label: \"Can I defer a payment I have to pay.\"\n  }, {\n    label: \"Can you please tell me a joke?\"\n  }, {\n    label: \"I need to refinance to 2.5% now\"\n  }, {\n    label: \"Checking\"\n  }, {\n    label: \"Oasdfnaisd\"\n  }];\n};\n\nexport default connect(mapStateToProps)(OverviewPage);","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/content/OverviewPage/index.js"],"names":["OverviewPage","connect","mapStateToProps","state","props","statsLoaded","uniqueUsers","stats","uniqueSessions","requestCount","maxTopicCount","intentsArr","Object","keys","intents","forEach","key","Math","max","push","sort","a","b","parseFloat","count","mostCommon","slice","leastCommon","label"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAE/B,MAAIC,KAAK,GAAG;AACRC,IAAAA,WAAW,EAAEF,KAAK,CAACE,WADX;AAERC,IAAAA,WAAW,EAAEH,KAAK,CAACI,KAAN,CAAYD,WAFjB;AAGRE,IAAAA,cAAc,EAAEL,KAAK,CAACI,KAAN,CAAYC,cAHpB;AAIRC,IAAAA,YAAY,EAAEN,KAAK,CAACI,KAAN,CAAYE;AAJlB,GAAZ;AAOA,MAAIC,aAAa,GAAG,CAApB;AACA,MAAIC,UAAU,GAAG,EAAjB;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYN,KAAK,CAACO,OAAlB,EAA2BC,OAA3B,CAAmC,UAAAC,GAAG,EAAI;AACtCN,IAAAA,aAAa,GAAGO,IAAI,CAACC,GAAL,CAASX,KAAK,CAACO,OAAN,CAAcE,GAAd,CAAT,EAA6BN,aAA7B,CAAhB;AACAC,IAAAA,UAAU,CAACQ,IAAX,CAAgB;AAAE,eAASH,GAAX;AAAgB,eAAST,KAAK,CAACO,OAAN,CAAcE,GAAd;AAAzB,KAAhB;AACH,GAHD;AAKAZ,EAAAA,KAAK,CAAC,eAAD,CAAL,GAAyBM,aAAzB;AAEAC,EAAAA,UAAU,CAACS,IAAX,CAAgB,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUC,UAAU,CAACF,CAAC,CAACG,KAAH,CAAV,GAAsBD,UAAU,CAACD,CAAC,CAACE,KAAH,CAA1C;AAAA,GAAhB;AACA,MAAIC,UAAU,GAAGd,UAAU,CAACe,KAAX,CAAiB,CAAjB,EAAoB,EAApB,CAAjB;AAEAf,EAAAA,UAAU,CAACS,IAAX,CAAgB,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUC,UAAU,CAACD,CAAC,CAACE,KAAH,CAAV,GAAsBD,UAAU,CAACF,CAAC,CAACG,KAAH,CAA1C;AAAA,GAAhB;AACA,MAAIG,WAAW,GAAGhB,UAAU,CAACe,KAAX,CAAiB,CAAjB,EAAoB,EAApB,CAAlB;AAEAtB,EAAAA,KAAK,CAAC,gBAAD,CAAL,GAA0BqB,UAA1B;AACArB,EAAAA,KAAK,CAAC,iBAAD,CAAL,GAA2BuB,WAA3B;AACAvB,EAAAA,KAAK,CAAC,yBAAD,CAAL,GAAmC,EAAnC;AAEAA,EAAAA,KAAK,CAAC,mBAAD,CAAL,GAA6B,CAC3B;AAACwB,IAAAA,KAAK,EAAE;AAAR,GAD2B,EAE3B;AAACA,IAAAA,KAAK,EAAE;AAAR,GAF2B,EAG3B;AAACA,IAAAA,KAAK,EAAE;AAAR,GAH2B,EAI3B;AAACA,IAAAA,KAAK,EAAE;AAAR,GAJ2B,EAK3B;AAACA,IAAAA,KAAK,EAAE;AAAR,GAL2B,EAM3B;AAACA,IAAAA,KAAK,EAAE;AAAR,GAN2B,EAO3B;AAACA,IAAAA,KAAK,EAAE;AAAR,GAP2B,EAQ3B;AAACA,IAAAA,KAAK,EAAE;AAAR,GAR2B,EAS3B;AAACA,IAAAA,KAAK,EAAE;AAAR,GAT2B,EAU3B;AAACA,IAAAA,KAAK,EAAE;AAAR,GAV2B,CAA7B;AAYH,CAzCD;;AA2CA,eAAe3B,OAAO,CAACC,eAAD,CAAP,CAAyBF,YAAzB,CAAf","sourcesContent":["import OverviewPage from './OverviewPage';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n    \n    let props = {\n        statsLoaded: state.statsLoaded,\n        uniqueUsers: state.stats.uniqueUsers,\n        uniqueSessions: state.stats.uniqueSessions,\n        requestCount: state.stats.requestCount,\n    };\n\n    var maxTopicCount = 0\n    var intentsArr = []\n\n    Object.keys(stats.intents).forEach(key => {\n        maxTopicCount = Math.max(stats.intents[key], maxTopicCount)\n        intentsArr.push({ \"label\": key, \"count\": stats.intents[key] })\n    })\n\n    props[\"maxTopicCount\"] = maxTopicCount\n\n    intentsArr.sort((a, b) => parseFloat(a.count) - parseFloat(b.count));\n    let mostCommon = intentsArr.slice(0, 10)\n\n    intentsArr.sort((a, b) => parseFloat(b.count) - parseFloat(a.count));\n    let leastCommon = intentsArr.slice(0, 10)\n\n    props[\"mostCommonData\"] = mostCommon\n    props[\"leastCommonData\"] = leastCommon\n    props[\"frequentlyEscalatedData\"] = []\n\n    props[\"notRecognizedData\"] = [\n      {label: \"I need to pay my bill\" },\n      {label: \"Where can I get my account information?\" },\n      {label: \"I need to transfer money to my family in Russia.\" },\n      {label: \"I was charged $7000 by my energy company\"},\n      {label: \"Wow so cool haha\"},\n      {label: \"Can I defer a payment I have to pay.\"},\n      {label: \"Can you please tell me a joke?\"},\n      {label: \"I need to refinance to 2.5% now\"},\n      {label: \"Checking\"},\n      {label: \"Oasdfnaisd\"},\n    ]\n}\n\nexport default connect(mapStateToProps)(OverviewPage)"]},"metadata":{},"sourceType":"module"}