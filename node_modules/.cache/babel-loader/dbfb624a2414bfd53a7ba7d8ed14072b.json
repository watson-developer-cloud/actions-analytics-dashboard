{"ast":null,"code":"import _objectSpread from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/components/OverviewTable/OverviewTable.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ArrowRight16 } from '@carbon/icons-react';\nimport './overview-table.scss';\nimport { getLayeredDictCount } from \"../../utils\";\nimport moment from 'moment';\n\nvar OverviewTable = /*#__PURE__*/function (_React$Component) {\n  _inherits(OverviewTable, _React$Component);\n\n  var _super = _createSuper(OverviewTable);\n\n  function OverviewTable(props) {\n    var _this;\n\n    _classCallCheck(this, OverviewTable);\n\n    _this = _super.call(this, props);\n    _this.titleDict = {\n      \"mostCommon\": \"Most common topics\",\n      \"leastCommon\": \"Least common topics\",\n      \"frequentlyEscalated\": \"Frequently escalated topics\",\n      \"notRecognized\": \"Requests not recognized\"\n    };\n    return _this;\n  }\n\n  _createClass(OverviewTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$this$prop,\n          _this2 = this;\n\n      var data = (_this$props$this$prop = this.props[this.props.type]) !== null && _this$props$this$prop !== void 0 ? _this$props$this$prop : [];\n      var divider = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"1px\",\n          background: \"#f4f4f4\",\n          marginBottom: \"2px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      });\n      var tableRows = [];\n\n      for (var i = 0; i < Math.min(10, data.length); i++) {\n        var val = data[i];\n\n        if (this.props.type === \"notRecognized\") {\n          tableRows.push( /*#__PURE__*/React.createElement(\"div\", {\n            className: \"overview-table-row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 26\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \"overview-table-label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 27\n            }\n          }, val.label), divider));\n        } else {\n          tableRows.push( /*#__PURE__*/React.createElement(\"div\", {\n            className: \"overview-table-row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 28\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \"overview-table-num-label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }\n          }, val.label), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"overview-table-num\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }\n          }, this.props.type === \"frequentlyEscalated\" ? val.count + \"%\" : val.count), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"overview-table-progress-container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"overview-table-progress-back\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 31\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: this.props.type === \"mostCommon\" ? \"overview-table-green-bar\" : \"overview-table-red-bar\",\n            style: {\n              width: (this.props.type === \"frequentlyEscalated\" ? val.count : 100 * (val.count / this.props.maxTopicCount)) + \"%\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 31\n            }\n          }))));\n        }\n      } // Add empty cells if there are < 10\n\n\n      for (i = 0; i < Math.max(0, 10 - data.length); i++) {\n        if (this.props.type === \"notRecognized\") {\n          tableRows.push( /*#__PURE__*/React.createElement(\"div\", {\n            className: \"overview-table-row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 26\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              height: \"30px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 27\n            }\n          }), divider));\n        } else {\n          tableRows.push( /*#__PURE__*/React.createElement(\"div\", {\n            className: \"overview-table-row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 28\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \"overview-table-num-label transparent-text\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }\n          }, \"-\"), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"overview-table-num transparent-text\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }\n          }, \"-\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"overview-table-progress-container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"overview-table-progress-back\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 31\n            }\n          }))));\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"overview-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"panel-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }\n      }, this.titleDict[this.props.type]), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"overview-table-date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      }, this.props.startDate, \" - \", this.props.endDate), divider, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }, tableRows.map(function (value, index) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 26\n          }\n        }, value);\n      })), this.props.type === \"notRecognized\" && /*#__PURE__*/React.createElement(Link, {\n        className: \"panel-link-div\",\n        to: \"/not-recognized\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"panel-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }\n      }, \"View all\"), /*#__PURE__*/React.createElement(ArrowRight16, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 57\n        }\n      })));\n    }\n  }]);\n\n  return OverviewTable;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownState) {\n  var props = _objectSpread(_objectSpread({}, ownState), {}, {\n    mostCommon: [],\n    leastCommon: [],\n    frequentlyEscalated: [],\n    notRecognized: [],\n    startDate: moment(state.overviewStartDate, \"L\").format(\"MMM DD YYYY\"),\n    endDate: moment(state.overviewEndDate, \"L\").format(\"MMM DD YYYY\")\n  });\n\n  if (state.statsLoaded) {\n    var maxTopicCount = 0;\n    var intentsArr = [];\n    var intentCounts = getLayeredDictCount(state.intentCounts, state.overviewStartDate, state.overviewEndDate);\n    Object.keys(intentCounts).forEach(function (key) {\n      maxTopicCount = Math.max(intentCounts[key], maxTopicCount);\n      intentsArr.push({\n        \"label\": key,\n        \"count\": intentCounts[key]\n      });\n    });\n    props[\"maxTopicCount\"] = maxTopicCount;\n    intentsArr.sort(function (a, b) {\n      return parseFloat(b.count) - parseFloat(a.count);\n    });\n    var mostCommon = intentsArr.slice(0, 10);\n    intentsArr.sort(function (a, b) {\n      return parseFloat(a.count) - parseFloat(b.count);\n    });\n    var leastCommon = intentsArr.slice(0, 10);\n    props.mostCommon = mostCommon;\n    props.leastCommon = leastCommon;\n    props.frequentlyEscalated = [];\n    props.notRecognized = state.notRecognizedMessages.sort(function (a, b) {\n      return moment(a.date, \"L\").moment(b.date, \"L\");\n    }).map(function (val) {\n      return {\n        label: val.text\n      };\n    });\n  }\n\n  return props;\n};\n\nexport default connect(mapStateToProps)(OverviewTable);","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/components/OverviewTable/OverviewTable.js"],"names":["React","Link","connect","ArrowRight16","getLayeredDictCount","moment","OverviewTable","props","titleDict","data","type","divider","width","height","background","marginBottom","tableRows","i","Math","min","length","val","push","label","count","maxTopicCount","max","startDate","endDate","map","value","index","Component","mapStateToProps","state","ownState","mostCommon","leastCommon","frequentlyEscalated","notRecognized","overviewStartDate","format","overviewEndDate","statsLoaded","intentsArr","intentCounts","Object","keys","forEach","key","sort","a","b","parseFloat","slice","notRecognizedMessages","date","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  ArrowRight16\n} from '@carbon/icons-react';\n\nimport './overview-table.scss';\nimport { getLayeredDictCount } from \"../../utils\"\nimport moment from 'moment';\n\nclass OverviewTable extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.titleDict = {\n          \"mostCommon\": \"Most common topics\",\n          \"leastCommon\": \"Least common topics\",\n          \"frequentlyEscalated\": \"Frequently escalated topics\",\n          \"notRecognized\": \"Requests not recognized\"\n        }\n    }\n\n    render () {\n      let data = this.props[this.props.type] ?? []\n\n      let divider = <div style={{ width: \"100%\", height: \"1px\", background: \"#f4f4f4\", marginBottom: \"2px\" }}></div>\n      var tableRows = []\n\n      for (var i = 0; i < Math.min(10, data.length); i++) {\n        let val = data[i]\n\n        if (this.props.type === \"notRecognized\") {          \n          tableRows.push(<div className=\"overview-table-row\">\n                          <p className=\"overview-table-label\">{val.label}</p>\n                          { divider }\n                        </div>)\n        } else {\n            tableRows.push(<div className=\"overview-table-row\">\n                            <p className=\"overview-table-num-label\">{ val.label }</p>\n                            <p className=\"overview-table-num\">{ this.props.type === \"frequentlyEscalated\" ? val.count  + \"%\" : val.count}</p>\n                            <div className=\"overview-table-progress-container\">\n                              <div className=\"overview-table-progress-back\"/>\n                              <div className={ this.props.type === \"mostCommon\" ? \"overview-table-green-bar\" : \"overview-table-red-bar\" } \n                                style={{ width: (this.props.type === \"frequentlyEscalated\" ? val.count : (100 * (val.count / this.props.maxTopicCount))) + \"%\" }}/>\n                            </div>\n                          </div>)\n        }\n      }\n\n      // Add empty cells if there are < 10\n      for (i = 0; i < Math.max(0, 10 - data.length); i++) {\n        if (this.props.type === \"notRecognized\") {          \n          tableRows.push(<div className=\"overview-table-row\">\n                          <div style={{ height: \"30px\" }}></div>\n                          { divider }\n                        </div>)\n        } else {\n            tableRows.push(<div className=\"overview-table-row\">\n                            <p className=\"overview-table-num-label transparent-text\">-</p>\n                            <p className=\"overview-table-num transparent-text\">-</p>\n                            <div className=\"overview-table-progress-container\">\n                              <div className=\"overview-table-progress-back\"/>\n                            </div>\n                          </div>)\n        }\n      }\n\n      return <div className=\"overview-table\">\n              <p className=\"panel-title\">{ this.titleDict[this.props.type] }</p>\n              <p className=\"overview-table-date\">{ this.props.startDate } - { this.props.endDate }</p>\n              { divider }\n              <ul>\n                { tableRows.map((value, index) => {\n                  return <li key={index}>{value}</li>\n                }) }\n              </ul>\n              {(this.props.type === \"notRecognized\") && \n                 <Link className='panel-link-div' to=\"/not-recognized\">\n                  <p className=\"panel-link\">View all</p><ArrowRight16/>\n                 </Link> }\n            </div>\n\n    }\n}\n\nconst mapStateToProps = (state, ownState) => {\n  let props = {\n      ...ownState,\n      mostCommon: [],\n      leastCommon: [],\n      frequentlyEscalated: [],\n      notRecognized: [],\n      startDate: moment(state.overviewStartDate, \"L\").format(\"MMM DD YYYY\"),\n      endDate: moment(state.overviewEndDate, \"L\").format(\"MMM DD YYYY\")\n  }\n\n  if (state.statsLoaded) {\n      let maxTopicCount = 0\n      var intentsArr = []\n\n      let intentCounts = getLayeredDictCount(state.intentCounts, state.overviewStartDate, state.overviewEndDate)\n\n      Object.keys(intentCounts).forEach(key => {\n          maxTopicCount = Math.max(intentCounts[key], maxTopicCount)\n          intentsArr.push({ \"label\": key, \"count\": intentCounts[key] })\n      })\n\n      props[\"maxTopicCount\"] = maxTopicCount\n\n      intentsArr.sort((a, b) => parseFloat(b.count) - parseFloat(a.count));\n      let mostCommon = intentsArr.slice(0, 10)\n\n      intentsArr.sort((a, b) => parseFloat(a.count) - parseFloat(b.count));\n      let leastCommon = intentsArr.slice(0, 10)\n\n      props.mostCommon = mostCommon\n      props.leastCommon = leastCommon\n      props.frequentlyEscalated = []\n      props.notRecognized = state.notRecognizedMessages.sort((a, b) => moment(a.date, \"L\"). moment(b.date, \"L\")).map(val => ({label: val.text}))\n  }\n\n  return props\n}\n\nexport default connect(mapStateToProps)(OverviewTable)"]},"metadata":{},"sourceType":"module"}