{"ast":null,"code":"import _classCallCheck from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/components/Graph/Graph.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { LineChart } from \"@carbon/charts-react\";\nimport { Checkbox } from \"carbon-components-react\";\nimport './graph.scss';\nimport \"@carbon/charts/styles.css\";\nimport moment from 'moment';\nimport config from '../../config';\n\nvar Graph = /*#__PURE__*/function (_React$Component) {\n  _inherits(Graph, _React$Component);\n\n  var _super = _createSuper(Graph);\n\n  function Graph(props) {\n    _classCallCheck(this, Graph);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Graph, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"graph-panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"panel-title\",\n        style: {\n          marginBottom: \"16px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }\n      }, this.props.type + \" over time\", \" \"), /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: \"bx--fieldset\",\n        style: {\n          visibility: this.props.type == \"Engagement\" ? \"visible\" : \"hidden\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        labelText: \"Show active users\",\n        checked: this.props.showActiveUsers,\n        id: \"activeUsersCB\",\n        onChange: function onChange(checked) {\n          _this.props.dispatch({\n            type: config.UPDATE,\n            update: {\n              engagement_showActiveUsers: checked\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Checkbox, {\n        labelText: \"Show conversations\",\n        checked: this.props.showConversations,\n        id: \"conversationsCB\",\n        onChange: function onChange(checked) {\n          _this.props.dispatch({\n            type: config.UPDATE,\n            update: {\n              engagement_showConversations: checked\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Checkbox, {\n        labelText: \"Show requests\",\n        checked: this.props.showRequests,\n        id: \"requestsCB\",\n        onChange: function onChange(checked) {\n          _this.props.dispatch({\n            type: config.UPDATE,\n            update: {\n              engagement_showRequests: checked\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chartWrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(LineChart, {\n        data: this.props.data,\n        options: this.props.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return Graph;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownState) {\n  var props = {\n    type: ownState.type,\n    showActiveUsers: state.engagement_showActiveUsers,\n    showConversations: state.engagement_showConversations,\n    showRequests: state.engagement_showRequests,\n    data: [],\n    options: {\n      axes: {\n        bottom: {\n          title: \"Date\",\n          mapsTo: \"date\",\n          scaleType: \"time\"\n        },\n        left: {\n          mapsTo: \"value\",\n          title: \"Loading\",\n          scaleType: \"linear\"\n        }\n      },\n      data: {\n        loading: true\n      },\n      legend: {\n        enabled: false\n      },\n      height: \"400px\"\n    }\n  };\n\n  if (state.statsLoaded) {\n    var leftAxis = props.type == \"Engagment\" ? {\n      title: \"volume\",\n      mapsTo: \"value\",\n      scaleType: \"linear\"\n    } : {\n      title: props.type,\n      mapsTo: \"value\",\n      scaleType: \"linear\"\n    };\n    props.options = {\n      axes: {\n        bottom: {\n          title: \"Date\",\n          mapsTo: \"date\",\n          scaleType: \"time\"\n        },\n        left: leftAxis\n      },\n      data: {\n        loading: false\n      },\n      legend: {\n        enabled: false\n      },\n      color: {\n        scale: {\n          \"Requests\": \"#9C74F7\",\n          \"Active Users\": \"#38807E\",\n          \"Conversations\": \"#DA5E93\",\n          \"Recognized (%)\": \"#DA5E93\",\n          \"Contained (%)\": \"#DA5E93\"\n        }\n      }\n    };\n    if (props.type === \"Engagement\") props.data = loadEngagementData(state);else if (props.type === \"Recognition\") props.data = loadRecognitionData(state);else if (props.type === \"Failed Prompts\") props.data = loadFailedPromptData(state);\n  }\n\n  return props;\n};\n\nvar loadEngagementData = function loadEngagementData(state) {\n  var data = [];\n  var startDate = moment(state.startDate, \"L\");\n  var endDate = moment(state.endDate, \"L\").endOf('day');\n\n  if (state.engagement_showActiveUsers) {\n    for (var i = 0; i < Object.keys(state.uniqueUsers).length; i++) {\n      var date = Object.keys(state.uniqueUsers)[i];\n\n      if (moment(date, \"L\").isBetween(startDate, endDate, \"day\", \"[]\")) {\n        data.push({\n          date: moment(date, \"L\").toISOString(),\n          value: state.uniqueUsers[date].count,\n          group: \"Active Users\"\n        });\n      }\n    }\n  }\n\n  if (state.engagement_showConversations) {\n    for (var _i = 0; _i < Object.keys(state.uniqueSessions).length; _i++) {\n      var _date = Object.keys(state.uniqueSessions)[_i];\n\n      if (moment(_date, \"L\").isBetween(startDate, endDate, \"day\", \"[]\")) {\n        data.push({\n          date: moment(_date, \"L\").toISOString(),\n          value: state.uniqueSessions[_date],\n          group: \"Conversations\"\n        });\n      }\n    }\n  }\n\n  if (state.engagement_showRequests) {\n    for (var _i2 = 0; _i2 < Object.keys(state.requestCounts).length; _i2++) {\n      var _date2 = Object.keys(state.requestCounts)[_i2];\n\n      if (moment(_date2, \"L\").isBetween(startDate, endDate, \"day\", \"[]\")) {\n        data.push({\n          date: moment(_date2, \"L\").toISOString(),\n          value: state.requestCounts[_date2],\n          group: \"Requests\"\n        });\n      }\n    }\n  }\n\n  return data;\n};\n\nvar loadRecognitionData = function loadRecognitionData(state) {\n  var data = [];\n  var startDate = moment(state.startDate, \"L\");\n  var endDate = moment(state.endDate, \"L\").endOf('day');\n\n  for (var i = 0; i < Object.keys(state.recognized).length; i++) {\n    var date = Object.keys(state.recognized)[i];\n\n    if (moment(date, \"L\").isBetween(startDate, endDate, \"day\", \"[]\")) {\n      var rec = state.recognized[date].recognized;\n      var not = state.recognized[date].notRecognized;\n      data.push({\n        date: moment(date, \"L\").toISOString(),\n        value: Math.round(100 * rec / (rec + not)),\n        group: \"Recognized (%)\"\n      });\n    }\n  }\n\n  return data;\n};\n\nvar loadFailedPromptData = function loadFailedPromptData(state) {\n  var data = [];\n  var startDate = moment(state.startDate, \"L\");\n  var endDate = moment(state.endDate, \"L\").endOf('day');\n\n  for (var i = 0; i < Object.keys(state.promptStatus).length; i++) {\n    var date = Object.keys(state.failedPrompts)[i][0];\n\n    if (moment(date, \"L\").isBetween(startDate, endDate, \"day\", \"[]\")) {\n      var success = state.promptStatus[date].success;\n      var fail = state.promptStatus[date].fail;\n      data.push({\n        date: moment(date, \"L\").toISOString(),\n        value: Math.round(100 * success / (success + fail)),\n        group: \"Failed Prompt (%)\"\n      });\n    }\n  }\n\n  return data;\n};\n\nexport default connect(mapStateToProps)(Graph);","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/components/Graph/Graph.js"],"names":["React","connect","LineChart","Checkbox","moment","config","Graph","props","marginBottom","type","visibility","showActiveUsers","checked","dispatch","UPDATE","update","engagement_showActiveUsers","showConversations","engagement_showConversations","showRequests","engagement_showRequests","data","options","Component","mapStateToProps","state","ownState","axes","bottom","title","mapsTo","scaleType","left","loading","legend","enabled","height","statsLoaded","leftAxis","color","scale","loadEngagementData","loadRecognitionData","loadFailedPromptData","startDate","endDate","endOf","i","Object","keys","uniqueUsers","length","date","isBetween","push","toISOString","value","count","group","uniqueSessions","requestCounts","recognized","rec","not","notRecognized","Math","round","promptStatus","failedPrompts","success","fail"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { LineChart } from \"@carbon/charts-react\";\nimport { Checkbox } from \"carbon-components-react\"\nimport './graph.scss';\nimport \"@carbon/charts/styles.css\";\nimport moment from 'moment';\nimport config from '../../config';\n\nclass Graph extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render () {\n      return <div className=\"graph-panel\">\n                <p className=\"panel-title\" style={{ marginBottom: \"16px\" }}>{ this.props.type + \" over time\" } </p>\n                <fieldset className=\"bx--fieldset\" style={{ visibility: this.props.type == \"Engagement\" ? \"visible\" : \"hidden\"}}>\n                    <Checkbox labelText=\"Show active users\" checked={ this.props.showActiveUsers } id=\"activeUsersCB\"\n                        onChange={ (checked) => { this.props.dispatch({type: config.UPDATE, update: {engagement_showActiveUsers: checked}}) } } />\n                    <Checkbox labelText=\"Show conversations\" checked={ this.props.showConversations } id=\"conversationsCB\"\n                        onChange={ (checked) => { this.props.dispatch({type: config.UPDATE, update: {engagement_showConversations: checked}}) } } />\n                    <Checkbox labelText=\"Show requests\" checked={ this.props.showRequests } id=\"requestsCB\"\n                        onChange={ (checked) => { this.props.dispatch({type: config.UPDATE, update: {engagement_showRequests: checked}}) } } />\n                </fieldset>\n                <div className=\"chartWrapper\">\n                    <LineChart\n                        data={this.props.data}\n                        options={this.props.options}>\n                    </LineChart>\n                </div>\n            </div>\n    }\n}\n\nconst mapStateToProps = (state, ownState) => {\n  let props = {\n      type: ownState.type,\n      showActiveUsers: state.engagement_showActiveUsers,\n      showConversations: state.engagement_showConversations,\n      showRequests: state.engagement_showRequests,\n      data: [],\n      options: {\n        axes: {\n            bottom: {\n              title: \"Date\",\n              mapsTo: \"date\",\n              scaleType: \"time\"\n            },\n            left: {\n              mapsTo: \"value\",\n              title: \"Loading\",\n              scaleType: \"linear\"\n            }\n          },\n        data: {\n            loading: true,\n        },\n        legend: { enabled: false },\n        height: \"400px\"\n    }\n  }\n\n  if (state.statsLoaded) {\n      let leftAxis = props.type == \"Engagment\" ?\n            {\n                title: \"volume\",\n                mapsTo: \"value\",\n                scaleType: \"linear\"\n            } :\n            {\n                title: props.type,\n                mapsTo: \"value\",\n                scaleType: \"linear\"\n            }\n\n      props.options = {\n        axes: {\n            bottom: {\n                title: \"Date\",\n                mapsTo: \"date\",\n                scaleType: \"time\"\n            },\n            left: leftAxis\n        },\n        data: {\n            loading: false,\n        },\n        legend: { enabled: false },\n        color: { scale: { \"Requests\": \"#9C74F7\", \"Active Users\": \"#38807E\", \"Conversations\": \"#DA5E93\", \"Recognized (%)\": \"#DA5E93\", \"Contained (%)\": \"#DA5E93\" } }\n\n    }\n\n    if (props.type === \"Engagement\")\n        props.data = loadEngagementData(state)\n    else if (props.type === \"Recognition\")\n        props.data = loadRecognitionData(state)\n    else if (props.type === \"Failed Prompts\")\n        props.data = loadFailedPromptData(state)\n\n  }\n\n  return props\n}\n\nconst loadEngagementData = (state) => {\n    let data = []\n\n    let startDate = moment(state.startDate, \"L\")\n    let endDate = moment(state.endDate, \"L\").endOf('day');\n\n    if (state.engagement_showActiveUsers) {\n        for(let i = 0; i < Object.keys(state.uniqueUsers).length; i++) {\n            let date = Object.keys(state.uniqueUsers)[i]\n            \n            if (moment(date, \"L\").isBetween(startDate, endDate, \"day\", \"[]\")) {\n                data.push({\n                    date: moment(date, \"L\").toISOString(),\n                    value: state.uniqueUsers[date].count,\n                    group: \"Active Users\"\n                })\n            }\n        }\n    }\n\n    if (state.engagement_showConversations) {\n        for(let i = 0; i < Object.keys(state.uniqueSessions).length; i++) {\n            let date = Object.keys(state.uniqueSessions)[i]\n\n            if (moment(date, \"L\").isBetween(startDate, endDate, \"day\", \"[]\")) {\n                data.push({\n                    date: moment(date, \"L\").toISOString(),\n                    value: state.uniqueSessions[date],\n                    group: \"Conversations\"\n                })\n            }\n        }\n    }\n\n    if (state.engagement_showRequests) {\n        for(let i = 0; i < Object.keys(state.requestCounts).length; i++) {\n            let date = Object.keys(state.requestCounts)[i]\n            \n            if (moment(date, \"L\").isBetween(startDate, endDate, \"day\", \"[]\")) {\n                data.push({\n                    date: moment(date, \"L\").toISOString(),\n                    value: state.requestCounts[date],\n                    group: \"Requests\"\n                })\n            }\n        }\n    }\n\n    return data\n}\n\nconst loadRecognitionData = (state) => {\n    let data = []\n\n    let startDate = moment(state.startDate, \"L\")\n    let endDate = moment(state.endDate, \"L\").endOf('day');\n\n    for(let i = 0; i < Object.keys(state.recognized).length; i++) {\n        let date = Object.keys(state.recognized)[i]\n        \n        if (moment(date, \"L\").isBetween(startDate, endDate, \"day\", \"[]\")) {\n            let rec = state.recognized[date].recognized\n            let not = state.recognized[date].notRecognized\n\n            data.push({\n                date: moment(date, \"L\").toISOString(),\n                value: Math.round(100 * rec / (rec + not)),\n                group: \"Recognized (%)\"\n            })\n        }\n    }\n\n    return data\n}\n\nconst loadFailedPromptData = (state) => {\n    let data = []\n\n    let startDate = moment(state.startDate, \"L\")\n    let endDate = moment(state.endDate, \"L\").endOf('day');\n\n    for(let i = 0; i < Object.keys(state.promptStatus).length; i++) {\n        let date = Object.keys(state.failedPrompts)[i][0]\n        \n        if (moment(date, \"L\").isBetween(startDate, endDate, \"day\", \"[]\")) {\n            let success = state.promptStatus[date].success\n            let fail = state.promptStatus[date].fail\n\n            data.push({\n                date: moment(date, \"L\").toISOString(),\n                value: Math.round(100 * success / (success + fail)),\n                group: \"Failed Prompt (%)\"\n            })\n        }\n    }\n\n    return data\n}\n\nexport default connect(mapStateToProps)(Graph)"]},"metadata":{},"sourceType":"module"}