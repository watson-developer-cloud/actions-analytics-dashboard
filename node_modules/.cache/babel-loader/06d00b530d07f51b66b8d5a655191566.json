{"ast":null,"code":"import OverviewPage from './OverviewPage';\nimport { connect } from 'react-redux';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(\"STATE: \" + JSON.stringify(state));\n  var props = {\n    statsLoaded: state.statsLoaded,\n    uniqueUsers: state.stats.uniqueUsers,\n    uniqueSessions: state.stats.uniqueSessions,\n    requestCount: state.stats.requestCount,\n    maxTopicCount: 0,\n    recognized: state.stats.recognized,\n    notRecognized: state.stats.notRecognized,\n    recognizedPercent: 100\n  };\n  var maxTopicCount = 0;\n  var intentsArr = [];\n\n  if (state.statsLoaded) {\n    Object.keys(state.stats.intentCounts).forEach(function (key) {\n      maxTopicCount = Math.max(state.stats.intentCounts[key], maxTopicCount);\n      intentsArr.push({\n        \"label\": key,\n        \"count\": state.stats.intentCounts[key]\n      });\n    });\n    props[\"maxTopicCount\"] = maxTopicCount;\n    intentsArr.sort(function (a, b) {\n      return parseFloat(b.count) - parseFloat(a.count);\n    });\n    var mostCommon = intentsArr.slice(0, 10);\n    intentsArr.sort(function (a, b) {\n      return parseFloat(a.count) - parseFloat(b.count);\n    });\n    var leastCommon = intentsArr.slice(0, 10);\n    props.mostCommonData = mostCommon;\n    props.leastCommonData = leastCommon;\n    props.frequentlyEscalatedData = [];\n    props.notRecognizedData = [{\n      label: \"I need to pay my bill\"\n    }, {\n      label: \"Where can I get my account information?\"\n    }, {\n      label: \"I need to transfer money to my family in Russia.\"\n    }, {\n      label: \"I was charged $7000 by my energy company\"\n    }, {\n      label: \"Wow so cool haha\"\n    }, {\n      label: \"Can I defer a payment I have to pay.\"\n    }, {\n      label: \"Can you please tell me a joke?\"\n    }];\n    props.recognizedPercent = Math.round(100 * (state.stats.recognized / (state.stats.recognized + state.stats.notRecognized)));\n  }\n\n  console.log(\"PROPS: \" + JSON.stringify(props));\n  return props;\n};\n\nexport default connect(mapStateToProps)(OverviewPage);","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/content/OverviewPage/index.js"],"names":["OverviewPage","connect","mapStateToProps","state","console","log","JSON","stringify","props","statsLoaded","uniqueUsers","stats","uniqueSessions","requestCount","maxTopicCount","recognized","notRecognized","recognizedPercent","intentsArr","Object","keys","intentCounts","forEach","key","Math","max","push","sort","a","b","parseFloat","count","mostCommon","slice","leastCommon","mostCommonData","leastCommonData","frequentlyEscalatedData","notRecognizedData","label","round"],"mappings":"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","sourcesContent":["import OverviewPage from './OverviewPage';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n    console.log(\"STATE: \" + JSON.stringify(state))\n\n    let props = {\n        statsLoaded: state.statsLoaded,\n        uniqueUsers: state.stats.uniqueUsers,\n        uniqueSessions: state.stats.uniqueSessions,\n        requestCount: state.stats.requestCount,\n        maxTopicCount: 0,\n        recognized: state.stats.recognized,\n        notRecognized: state.stats.notRecognized,\n        recognizedPercent: 100\n    };\n\n    var maxTopicCount = 0\n    var intentsArr = []\n\n    if (state.statsLoaded) {\n        Object.keys(state.stats.intentCounts).forEach(key => {\n            maxTopicCount = Math.max(state.stats.intentCounts[key], maxTopicCount)\n            intentsArr.push({ \"label\": key, \"count\": state.stats.intentCounts[key] })\n        })\n\n        props[\"maxTopicCount\"] = maxTopicCount\n\n        intentsArr.sort((a, b) => parseFloat(b.count) - parseFloat(a.count));\n        let mostCommon = intentsArr.slice(0, 10)\n\n        intentsArr.sort((a, b) => parseFloat(a.count) - parseFloat(b.count));\n        let leastCommon = intentsArr.slice(0, 10)\n\n        props.mostCommonData = mostCommon\n        props.leastCommonData = leastCommon\n        props.frequentlyEscalatedData = []\n        props.notRecognizedData = [\n            {label: \"I need to pay my bill\" },\n            {label: \"Where can I get my account information?\" },\n            {label: \"I need to transfer money to my family in Russia.\" },\n            {label: \"I was charged $7000 by my energy company\"},\n            {label: \"Wow so cool haha\"},\n            {label: \"Can I defer a payment I have to pay.\"},\n            {label: \"Can you please tell me a joke?\"}\n        ]\n        props.recognizedPercent = Math.round(100 * (state.stats.recognized / (state.stats.recognized + state.stats.notRecognized)))\n    }\n\n    console.log(\"PROPS: \" + JSON.stringify(props))\n\n    return props\n}\n\nexport default connect(mapStateToProps)(OverviewPage)"]},"metadata":{},"sourceType":"module"}