{"ast":null,"code":"import _classCallCheck from \"/Users/zander/Documents/Development/ActionsLogging/carbon-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zander/Documents/Development/ActionsLogging/carbon-tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar AssistantLoader = /*#__PURE__*/function () {\n  function AssistantLoader() {\n    _classCallCheck(this, AssistantLoader);\n\n    var assistants = [];\n    var assistantsLoaded = false;\n    var assistantCallbacks = [];\n  }\n\n  _createClass(AssistantLoader, [{\n    key: \"loadAssistants\",\n    value: function loadAssistants() {\n      fetch(\"https://actions-logging.mybluemix.net/logging/assistants\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        assistants = result;\n        assistantsLoaded = true;\n\n        for (var i = 0; i < assistantCallbacks.length; i++) {\n          assistantCallbacks[i](assistants);\n        }\n      }, function (error) {\n        console.log(\"Failed to get assistants\");\n      });\n    }\n  }, {\n    key: \"getAssistants\",\n    value: function getAssistants(callback) {\n      if (!assistantsLoaded) assistantCallbacks.push(callback);else callback(assistants);\n    }\n  }]);\n\n  return AssistantLoader;\n}();\n\ninstance = AssistantLoader();","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/carbon-tutorial/src/AssistantLoader.js"],"names":["AssistantLoader","assistants","assistantsLoaded","assistantCallbacks","fetch","then","res","json","result","i","length","error","console","log","callback","push","instance"],"mappings":";;;IACMA,e;AACF,6BAAc;AAAA;;AACV,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAIC,gBAAgB,GAAG,KAAvB;AACA,QAAIC,kBAAkB,GAAG,EAAzB;AACH;;;;qCAEgB;AACbC,MAAAA,KAAK,CAAC,0DAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADT,EAECF,IAFD,CAEM,UAACG,MAAD,EAAY;AACdP,QAAAA,UAAU,GAAGO,MAAb;AACAN,QAAAA,gBAAgB,GAAG,IAAnB;;AAEA,aAAI,IAAIO,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,kBAAkB,CAACO,MAAtC,EAA8CD,CAAC,EAA/C;AACIN,UAAAA,kBAAkB,CAACM,CAAD,CAAlB,CAAsBR,UAAtB;AADJ;AAEH,OARD,EAQG,UAACU,KAAD,EAAW;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH,OAVD;AAWH;;;kCAEaC,Q,EAAU;AACpB,UAAI,CAACZ,gBAAL,EACIC,kBAAkB,CAACY,IAAnB,CAAwBD,QAAxB,EADJ,KAEKA,QAAQ,CAACb,UAAD,CAAR;AACR;;;;;;AAGLe,QAAQ,GAAGhB,eAAe,EAA1B","sourcesContent":["\nclass AssistantLoader {\n    constructor() {\n        let assistants = []\n        let assistantsLoaded = false\n        let assistantCallbacks = []\n    }\n\n    loadAssistants() {\n        fetch(\"https://actions-logging.mybluemix.net/logging/assistants\")\n        .then(res => res.json())\n        .then((result) => {\n            assistants = result\n            assistantsLoaded = true\n\n            for(var i = 0; i < assistantCallbacks.length; i++)\n                assistantCallbacks[i](assistants)\n        }, (error) => {\n            console.log(\"Failed to get assistants\")\n        })\n    }\n\n    getAssistants(callback) {\n        if (!assistantsLoaded)\n            assistantCallbacks.push(callback)\n        else callback(assistants)\n    }\n}\n\ninstance = AssistantLoader()\n"]},"metadata":{},"sourceType":"module"}