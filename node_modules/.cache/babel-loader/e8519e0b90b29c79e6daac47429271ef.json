{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Component } from '../component';\nimport * as Configuration from '../../configuration';\nimport { CartesianOrientations, Events, ColorClassNameTypes } from '../../interfaces';\nimport { GradientUtils, DOMUtils } from '../../services';\nimport { Tools } from '../../tools';\nimport settings from 'carbon-components/es/globals/js/settings'; // D3 Imports\n\nimport { area } from 'd3-shape';\nimport { select } from 'd3-selection';\n\nvar Area =\n/** @class */\nfunction (_super) {\n  __extends(Area, _super);\n\n  function Area() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'area';\n    _this.gradient_id = 'gradient-id-' + Math.floor(Math.random() * 99999999999);\n\n    _this.handleLegendOnHover = function (event) {\n      var hoveredElement = event.detail.hoveredElement;\n\n      _this.parent.selectAll('path.area').transition(_this.services.transitions.getTransition('legend-hover-area')).attr('opacity', function (group) {\n        if (group.name !== hoveredElement.datum()['name']) {\n          return Configuration.area.opacity.unselected;\n        }\n\n        return Configuration.area.opacity.selected;\n      });\n    };\n\n    _this.handleLegendMouseOut = function (event) {\n      _this.parent.selectAll('path.area').transition(_this.services.transitions.getTransition('legend-mouseout-area')).attr('opacity', Configuration.area.opacity.selected);\n    };\n\n    return _this;\n  }\n\n  Area.prototype.init = function () {\n    var eventsFragment = this.services.events; // Highlight correct area on legend item hovers\n\n    eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover); // Un-highlight area on legend item mouseouts\n\n    eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n  };\n\n  Area.prototype.render = function (animate) {\n    var _this = this;\n\n    if (animate === void 0) {\n      animate = true;\n    }\n\n    var svg = this.getContainerSVG({\n      withinChartClip: true\n    });\n    var domain = [0, 0];\n    var cartesianScales = this.services.cartesianScales;\n    var orientation = cartesianScales.getOrientation();\n    var areaGenerator = area().curve(this.services.curves.getD3Curve()).defined(function (datum, i) {\n      var rangeIdentifier = cartesianScales.getRangeIdentifier();\n      var value = datum[rangeIdentifier];\n\n      if (value === null || value === undefined) {\n        return false;\n      }\n\n      return true;\n    }); // Update the bound data on area groups\n\n    var groupedData = this.model.getGroupedData(this.configs.groups);\n    var bounds = Tools.getProperty(this.getOptions(), 'bounds');\n    var boundsEnabled = bounds && groupedData && groupedData.length === 1;\n\n    if (!boundsEnabled && bounds) {\n      console.warn(\"Bounds can only be shown when having 1 single datagroup, you've supplied \" + groupedData.length); // eslint-disable-line no-console\n    }\n\n    var upperBound = function upperBound(d, i) {\n      return boundsEnabled ? cartesianScales.getBoundedScaledValues(d, i)[0] : cartesianScales.getRangeValue(0);\n    };\n\n    var lowerBound = function lowerBound(d, i) {\n      return boundsEnabled ? cartesianScales.getBoundedScaledValues(d, i)[1] : cartesianScales.getRangeValue(d, i);\n    };\n\n    if (orientation === CartesianOrientations.VERTICAL) {\n      domain = this.services.cartesianScales.getMainYScale().domain();\n      areaGenerator.x(function (d, i) {\n        return cartesianScales.getDomainValue(d, i);\n      }).y0(function (d, i) {\n        return upperBound(d, i);\n      }).y1(function (d, i) {\n        return lowerBound(d, i);\n      });\n    } else {\n      domain = this.services.cartesianScales.getMainXScale().domain();\n      areaGenerator.x0(function (d, i) {\n        return upperBound(d, i);\n      }).x1(function (d, i) {\n        return lowerBound(d, i);\n      }).y(function (d, i) {\n        return cartesianScales.getDomainValue(d, i);\n      });\n    } // Is gradient enabled or not\n\n\n    var isGradientEnabled = Tools.getProperty(this.getOptions(), 'color', 'gradient', 'enabled'); // Should gradient style be applicable\n\n    var isGradientAllowed = groupedData && groupedData.length === 1 && isGradientEnabled;\n\n    if (groupedData.length > 1 && isGradientEnabled) {\n      console.error('Gradients can only be enabled when having 1 single dataset');\n    }\n\n    var areas = svg.selectAll('path.area').data(groupedData, function (group) {\n      return group.name;\n    });\n    var chartprefix = Tools.getProperty(this.getOptions(), 'style', 'prefix');\n    var chartSVG = DOMUtils.appendOrSelect(select(this.services.domUtils.getHolder()), \"svg.\" + settings.prefix + \"--\" + chartprefix + \"--chart-svg\"); // Remove elements that need to be exited\n    // We need exit at the top here to make sure that\n    // Data filters are processed before entering new elements\n    // Or updating existing ones\n\n    areas.exit().attr('opacity', 0).remove(); // if there is no grouped data (if all data groups are turned OFF with legend which can happen in the case of combo charts)\n\n    if (!groupedData.length) {\n      return;\n    }\n\n    if (isGradientAllowed) {\n      // The fill value of area has been overwritten, get color value from stroke color class instead\n      var strokePathElement = chartSVG.select(\"path.\" + this.model.getColorClassName({\n        classNameTypes: [ColorClassNameTypes.STROKE],\n        dataGroupName: groupedData[0].name\n      })).node();\n      var colorValue = void 0;\n\n      if (strokePathElement) {\n        colorValue = getComputedStyle(strokePathElement, null).getPropertyValue('stroke');\n      } else {\n        var sparklineColorObject = Tools.getProperty(this.model.getOptions(), 'color', 'scale');\n        var sparklineColorObjectKeys = Object.keys(sparklineColorObject);\n        colorValue = sparklineColorObject[sparklineColorObjectKeys[0]];\n      }\n\n      GradientUtils.appendOrUpdateLinearGradient({\n        svg: this.parent,\n        id: groupedData[0].name.replace(' ', '') + '_' + this.gradient_id,\n        x1: '0%',\n        x2: '0%',\n        y1: '0%',\n        y2: '100%',\n        stops: GradientUtils.getStops(domain, colorValue)\n      });\n    } else {\n      // make sure there is no linearGradient if no gradient is allowed\n      if (!this.parent.selectAll('defs linearGradient').empty()) {\n        this.parent.selectAll('defs linearGradient').each(function () {\n          this.parentNode.remove();\n        });\n      }\n    }\n\n    var self = this; // Enter paths that need to be introduced\n\n    var enteringAreas = areas.enter().append('path');\n\n    if (isGradientAllowed) {\n      enteringAreas.merge(areas).style('fill', function (group) {\n        return \"url(#\" + group.name.replace(' ', '') + \"_\" + _this.gradient_id + \")\";\n      }).attr('class', 'area').attr('class', function (group) {\n        return _this.model.getColorClassName({\n          classNameTypes: [ColorClassNameTypes.FILL],\n          dataGroupName: group.name,\n          originalClassName: 'area'\n        });\n      }).attr('d', function (group) {\n        var data = group.data;\n        return areaGenerator(data);\n      });\n    } else {\n      enteringAreas.attr('opacity', 0).merge(areas).attr('class', 'area').attr('class', function (group) {\n        return _this.model.getColorClassName({\n          classNameTypes: [ColorClassNameTypes.FILL, ColorClassNameTypes.STROKE],\n          dataGroupName: group.name,\n          originalClassName: 'area'\n        });\n      }).style('fill', function (group) {\n        return self.model.getFillColor(group.name);\n      }).transition(this.services.transitions.getTransition('area-update-enter', animate)).attr('opacity', boundsEnabled ? 1 : Configuration.area.opacity.selected).attr('d', function (group) {\n        var data = group.data;\n        return areaGenerator(data);\n      });\n\n      if (boundsEnabled) {\n        enteringAreas.attr('fill-opacity', Configuration.area.opacity.selected).style('stroke', function (group) {\n          return self.model.getStrokeColor(group.name);\n        }).style('stroke-dasharray', '2, 2').attr('stroke-width', 0.7 + 'px');\n      }\n    }\n  };\n\n  Area.prototype.destroy = function () {\n    // Remove event listeners\n    this.parent.selectAll('path.area').on('mousemove', null).on('mouseout', null); // Remove legend listeners\n\n    var eventsFragment = this.services.events;\n    eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n    eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n  };\n\n  return Area;\n}(Component);\n\nexport { Area };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/components/graphs/area.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Component","Configuration","CartesianOrientations","Events","ColorClassNameTypes","GradientUtils","DOMUtils","Tools","settings","area","select","Area","_super","_this","apply","arguments","type","gradient_id","Math","floor","random","handleLegendOnHover","event","hoveredElement","detail","parent","selectAll","transition","services","transitions","getTransition","attr","group","name","datum","opacity","unselected","selected","handleLegendMouseOut","init","eventsFragment","events","addEventListener","Legend","ITEM_HOVER","ITEM_MOUSEOUT","render","animate","svg","getContainerSVG","withinChartClip","domain","cartesianScales","orientation","getOrientation","areaGenerator","curve","curves","getD3Curve","defined","i","rangeIdentifier","getRangeIdentifier","value","undefined","groupedData","model","getGroupedData","configs","groups","bounds","getProperty","getOptions","boundsEnabled","length","console","warn","upperBound","getBoundedScaledValues","getRangeValue","lowerBound","VERTICAL","getMainYScale","x","getDomainValue","y0","y1","getMainXScale","x0","x1","y","isGradientEnabled","isGradientAllowed","error","areas","data","chartprefix","chartSVG","appendOrSelect","domUtils","getHolder","prefix","exit","remove","strokePathElement","getColorClassName","classNameTypes","STROKE","dataGroupName","node","colorValue","getComputedStyle","getPropertyValue","sparklineColorObject","sparklineColorObjectKeys","keys","appendOrUpdateLinearGradient","id","replace","x2","y2","stops","getStops","empty","each","parentNode","self","enteringAreas","enter","append","merge","style","FILL","originalClassName","getFillColor","getStrokeColor","destroy","on","removeEventListener"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,cAAa,GAAG,uBAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,cAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd;AAAiB,YAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAA1C;AAAwD,KAF9E;;AAGA,WAAOP,cAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,cAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C,C,CAaA;;;AACA,SAASI,SAAT,QAA0B,cAA1B;AACA,OAAO,KAAKC,aAAZ,MAA+B,qBAA/B;AACA,SAASC,qBAAT,EAAgCC,MAAhC,EAAwCC,mBAAxC,QAAoE,kBAApE;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,gBAAxC;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,0CAArB,C,CACA;;AACA,SAASC,IAAT,QAAqB,UAArB;AACA,SAASC,MAAT,QAAuB,cAAvB;;AACA,IAAIC,IAAI;AAAG;AAAe,UAAUC,MAAV,EAAkB;AACxC1B,EAAAA,SAAS,CAACyB,IAAD,EAAOC,MAAP,CAAT;;AACA,WAASD,IAAT,GAAgB;AACZ,QAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;AACAF,IAAAA,KAAK,CAACG,IAAN,GAAa,MAAb;AACAH,IAAAA,KAAK,CAACI,WAAN,GAAoB,iBAAiBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,WAA3B,CAArC;;AACAP,IAAAA,KAAK,CAACQ,mBAAN,GAA4B,UAAUC,KAAV,EAAiB;AACzC,UAAIC,cAAc,GAAGD,KAAK,CAACE,MAAN,CAAaD,cAAlC;;AACAV,MAAAA,KAAK,CAACY,MAAN,CACKC,SADL,CACe,WADf,EAEKC,UAFL,CAEgBd,KAAK,CAACe,QAAN,CAAeC,WAAf,CAA2BC,aAA3B,CAAyC,mBAAzC,CAFhB,EAGKC,IAHL,CAGU,SAHV,EAGqB,UAAUC,KAAV,EAAiB;AAClC,YAAIA,KAAK,CAACC,IAAN,KAAeV,cAAc,CAACW,KAAf,GAAuB,MAAvB,CAAnB,EAAmD;AAC/C,iBAAOjC,aAAa,CAACQ,IAAd,CAAmB0B,OAAnB,CAA2BC,UAAlC;AACH;;AACD,eAAOnC,aAAa,CAACQ,IAAd,CAAmB0B,OAAnB,CAA2BE,QAAlC;AACH,OARD;AASH,KAXD;;AAYAxB,IAAAA,KAAK,CAACyB,oBAAN,GAA6B,UAAUhB,KAAV,EAAiB;AAC1CT,MAAAA,KAAK,CAACY,MAAN,CACKC,SADL,CACe,WADf,EAEKC,UAFL,CAEgBd,KAAK,CAACe,QAAN,CAAeC,WAAf,CAA2BC,aAA3B,CAAyC,sBAAzC,CAFhB,EAGKC,IAHL,CAGU,SAHV,EAGqB9B,aAAa,CAACQ,IAAd,CAAmB0B,OAAnB,CAA2BE,QAHhD;AAIH,KALD;;AAMA,WAAOxB,KAAP;AACH;;AACDF,EAAAA,IAAI,CAACb,SAAL,CAAeyC,IAAf,GAAsB,YAAY;AAC9B,QAAIC,cAAc,GAAG,KAAKZ,QAAL,CAAca,MAAnC,CAD8B,CAE9B;;AACAD,IAAAA,cAAc,CAACE,gBAAf,CAAgCvC,MAAM,CAACwC,MAAP,CAAcC,UAA9C,EAA0D,KAAKvB,mBAA/D,EAH8B,CAI9B;;AACAmB,IAAAA,cAAc,CAACE,gBAAf,CAAgCvC,MAAM,CAACwC,MAAP,CAAcE,aAA9C,EAA6D,KAAKP,oBAAlE;AACH,GAND;;AAOA3B,EAAAA,IAAI,CAACb,SAAL,CAAegD,MAAf,GAAwB,UAAUC,OAAV,EAAmB;AACvC,QAAIlC,KAAK,GAAG,IAAZ;;AACA,QAAIkC,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,MAAAA,OAAO,GAAG,IAAV;AAAiB;;AAC3C,QAAIC,GAAG,GAAG,KAAKC,eAAL,CAAqB;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAArB,CAAV;AACA,QAAIC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAb;AACA,QAAIC,eAAe,GAAG,KAAKxB,QAAL,CAAcwB,eAApC;AACA,QAAIC,WAAW,GAAGD,eAAe,CAACE,cAAhB,EAAlB;AACA,QAAIC,aAAa,GAAG9C,IAAI,GACnB+C,KADe,CACT,KAAK5B,QAAL,CAAc6B,MAAd,CAAqBC,UAArB,EADS,EAEfC,OAFe,CAEP,UAAUzB,KAAV,EAAiB0B,CAAjB,EAAoB;AAC7B,UAAIC,eAAe,GAAGT,eAAe,CAACU,kBAAhB,EAAtB;AACA,UAAIC,KAAK,GAAG7B,KAAK,CAAC2B,eAAD,CAAjB;;AACA,UAAIE,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKC,SAAhC,EAA2C;AACvC,eAAO,KAAP;AACH;;AACD,aAAO,IAAP;AACH,KATmB,CAApB,CAPuC,CAiBvC;;AACA,QAAIC,WAAW,GAAG,KAAKC,KAAL,CAAWC,cAAX,CAA0B,KAAKC,OAAL,CAAaC,MAAvC,CAAlB;AACA,QAAIC,MAAM,GAAG/D,KAAK,CAACgE,WAAN,CAAkB,KAAKC,UAAL,EAAlB,EAAqC,QAArC,CAAb;AACA,QAAIC,aAAa,GAAGH,MAAM,IAAIL,WAAV,IAAyBA,WAAW,CAACS,MAAZ,KAAuB,CAApE;;AACA,QAAI,CAACD,aAAD,IAAkBH,MAAtB,EAA8B;AAC1BK,MAAAA,OAAO,CAACC,IAAR,CAAa,8EAA8EX,WAAW,CAACS,MAAvG,EAD0B,CACsF;AACnH;;AACD,QAAIG,UAAU,GAAG,SAAbA,UAAa,CAAUzF,CAAV,EAAawE,CAAb,EAAgB;AAC7B,aAAOa,aAAa,GACdrB,eAAe,CAAC0B,sBAAhB,CAAuC1F,CAAvC,EAA0CwE,CAA1C,EAA6C,CAA7C,CADc,GAEdR,eAAe,CAAC2B,aAAhB,CAA8B,CAA9B,CAFN;AAGH,KAJD;;AAKA,QAAIC,UAAU,GAAG,SAAbA,UAAa,CAAU5F,CAAV,EAAawE,CAAb,EAAgB;AAC7B,aAAOa,aAAa,GACdrB,eAAe,CAAC0B,sBAAhB,CAAuC1F,CAAvC,EAA0CwE,CAA1C,EAA6C,CAA7C,CADc,GAEdR,eAAe,CAAC2B,aAAhB,CAA8B3F,CAA9B,EAAiCwE,CAAjC,CAFN;AAGH,KAJD;;AAKA,QAAIP,WAAW,KAAKnD,qBAAqB,CAAC+E,QAA1C,EAAoD;AAChD9B,MAAAA,MAAM,GAAG,KAAKvB,QAAL,CAAcwB,eAAd,CAA8B8B,aAA9B,GAA8C/B,MAA9C,EAAT;AACAI,MAAAA,aAAa,CACR4B,CADL,CACO,UAAU/F,CAAV,EAAawE,CAAb,EAAgB;AAAE,eAAOR,eAAe,CAACgC,cAAhB,CAA+BhG,CAA/B,EAAkCwE,CAAlC,CAAP;AAA8C,OADvE,EAEKyB,EAFL,CAEQ,UAAUjG,CAAV,EAAawE,CAAb,EAAgB;AAAE,eAAOiB,UAAU,CAACzF,CAAD,EAAIwE,CAAJ,CAAjB;AAA0B,OAFpD,EAGK0B,EAHL,CAGQ,UAAUlG,CAAV,EAAawE,CAAb,EAAgB;AAAE,eAAOoB,UAAU,CAAC5F,CAAD,EAAIwE,CAAJ,CAAjB;AAA0B,OAHpD;AAIH,KAND,MAOK;AACDT,MAAAA,MAAM,GAAG,KAAKvB,QAAL,CAAcwB,eAAd,CAA8BmC,aAA9B,GAA8CpC,MAA9C,EAAT;AACAI,MAAAA,aAAa,CACRiC,EADL,CACQ,UAAUpG,CAAV,EAAawE,CAAb,EAAgB;AAAE,eAAOiB,UAAU,CAACzF,CAAD,EAAIwE,CAAJ,CAAjB;AAA0B,OADpD,EAEK6B,EAFL,CAEQ,UAAUrG,CAAV,EAAawE,CAAb,EAAgB;AAAE,eAAOoB,UAAU,CAAC5F,CAAD,EAAIwE,CAAJ,CAAjB;AAA0B,OAFpD,EAGK8B,CAHL,CAGO,UAAUtG,CAAV,EAAawE,CAAb,EAAgB;AAAE,eAAOR,eAAe,CAACgC,cAAhB,CAA+BhG,CAA/B,EAAkCwE,CAAlC,CAAP;AAA8C,OAHvE;AAIH,KA/CsC,CAgDvC;;;AACA,QAAI+B,iBAAiB,GAAGpF,KAAK,CAACgE,WAAN,CAAkB,KAAKC,UAAL,EAAlB,EAAqC,OAArC,EAA8C,UAA9C,EAA0D,SAA1D,CAAxB,CAjDuC,CAkDvC;;AACA,QAAIoB,iBAAiB,GAAG3B,WAAW,IAAIA,WAAW,CAACS,MAAZ,KAAuB,CAAtC,IAA2CiB,iBAAnE;;AACA,QAAI1B,WAAW,CAACS,MAAZ,GAAqB,CAArB,IAA0BiB,iBAA9B,EAAiD;AAC7ChB,MAAAA,OAAO,CAACkB,KAAR,CAAc,4DAAd;AACH;;AACD,QAAIC,KAAK,GAAG9C,GAAG,CACVtB,SADO,CACG,WADH,EAEPqE,IAFO,CAEF9B,WAFE,EAEW,UAAUjC,KAAV,EAAiB;AAAE,aAAOA,KAAK,CAACC,IAAb;AAAoB,KAFlD,CAAZ;AAGA,QAAI+D,WAAW,GAAGzF,KAAK,CAACgE,WAAN,CAAkB,KAAKC,UAAL,EAAlB,EAAqC,OAArC,EAA8C,QAA9C,CAAlB;AACA,QAAIyB,QAAQ,GAAG3F,QAAQ,CAAC4F,cAAT,CAAwBxF,MAAM,CAAC,KAAKkB,QAAL,CAAcuE,QAAd,CAAuBC,SAAvB,EAAD,CAA9B,EAAoE,SAAS5F,QAAQ,CAAC6F,MAAlB,GAA2B,IAA3B,GAAkCL,WAAlC,GAAgD,aAApH,CAAf,CA3DuC,CA4DvC;AACA;AACA;AACA;;AACAF,IAAAA,KAAK,CAACQ,IAAN,GAAavE,IAAb,CAAkB,SAAlB,EAA6B,CAA7B,EAAgCwE,MAAhC,GAhEuC,CAiEvC;;AACA,QAAI,CAACtC,WAAW,CAACS,MAAjB,EAAyB;AACrB;AACH;;AACD,QAAIkB,iBAAJ,EAAuB;AACnB;AACA,UAAIY,iBAAiB,GAAGP,QAAQ,CAC3BvF,MADmB,CACZ,UAAU,KAAKwD,KAAL,CAAWuC,iBAAX,CAA6B;AAC/CC,QAAAA,cAAc,EAAE,CAACtG,mBAAmB,CAACuG,MAArB,CAD+B;AAE/CC,QAAAA,aAAa,EAAE3C,WAAW,CAAC,CAAD,CAAX,CAAehC;AAFiB,OAA7B,CADE,EAKnB4E,IALmB,EAAxB;AAMA,UAAIC,UAAU,GAAG,KAAK,CAAtB;;AACA,UAAIN,iBAAJ,EAAuB;AACnBM,QAAAA,UAAU,GAAGC,gBAAgB,CAACP,iBAAD,EAAoB,IAApB,CAAhB,CAA0CQ,gBAA1C,CAA2D,QAA3D,CAAb;AACH,OAFD,MAGK;AACD,YAAIC,oBAAoB,GAAG1G,KAAK,CAACgE,WAAN,CAAkB,KAAKL,KAAL,CAAWM,UAAX,EAAlB,EAA2C,OAA3C,EAAoD,OAApD,CAA3B;AACA,YAAI0C,wBAAwB,GAAG5H,MAAM,CAAC6H,IAAP,CAAYF,oBAAZ,CAA/B;AACAH,QAAAA,UAAU,GAAGG,oBAAoB,CAACC,wBAAwB,CAAC,CAAD,CAAzB,CAAjC;AACH;;AACD7G,MAAAA,aAAa,CAAC+G,4BAAd,CAA2C;AACvCpE,QAAAA,GAAG,EAAE,KAAKvB,MAD6B;AAEvC4F,QAAAA,EAAE,EAAEpD,WAAW,CAAC,CAAD,CAAX,CAAehC,IAAf,CAAoBqF,OAApB,CAA4B,GAA5B,EAAiC,EAAjC,IACA,GADA,GAEA,KAAKrG,WAJ8B;AAKvCwE,QAAAA,EAAE,EAAE,IALmC;AAMvC8B,QAAAA,EAAE,EAAE,IANmC;AAOvCjC,QAAAA,EAAE,EAAE,IAPmC;AAQvCkC,QAAAA,EAAE,EAAE,MARmC;AASvCC,QAAAA,KAAK,EAAEpH,aAAa,CAACqH,QAAd,CAAuBvE,MAAvB,EAA+B2D,UAA/B;AATgC,OAA3C;AAWH,KA5BD,MA6BK;AACD;AACA,UAAI,CAAC,KAAKrF,MAAL,CAAYC,SAAZ,CAAsB,qBAAtB,EAA6CiG,KAA7C,EAAL,EAA2D;AACvD,aAAKlG,MAAL,CAAYC,SAAZ,CAAsB,qBAAtB,EAA6CkG,IAA7C,CAAkD,YAAY;AAC1D,eAAKC,UAAL,CAAgBtB,MAAhB;AACH,SAFD;AAGH;AACJ;;AACD,QAAIuB,IAAI,GAAG,IAAX,CA1GuC,CA2GvC;;AACA,QAAIC,aAAa,GAAGjC,KAAK,CAACkC,KAAN,GAAcC,MAAd,CAAqB,MAArB,CAApB;;AACA,QAAIrC,iBAAJ,EAAuB;AACnBmC,MAAAA,aAAa,CACRG,KADL,CACWpC,KADX,EAEKqC,KAFL,CAEW,MAFX,EAEmB,UAAUnG,KAAV,EAAiB;AAChC,eAAO,UAAUA,KAAK,CAACC,IAAN,CAAWqF,OAAX,CAAmB,GAAnB,EAAwB,EAAxB,CAAV,GAAwC,GAAxC,GAA8CzG,KAAK,CAACI,WAApD,GAAkE,GAAzE;AACH,OAJD,EAKKc,IALL,CAKU,OALV,EAKmB,MALnB,EAMKA,IANL,CAMU,OANV,EAMmB,UAAUC,KAAV,EAAiB;AAChC,eAAOnB,KAAK,CAACqD,KAAN,CAAYuC,iBAAZ,CAA8B;AACjCC,UAAAA,cAAc,EAAE,CAACtG,mBAAmB,CAACgI,IAArB,CADiB;AAEjCxB,UAAAA,aAAa,EAAE5E,KAAK,CAACC,IAFY;AAGjCoG,UAAAA,iBAAiB,EAAE;AAHc,SAA9B,CAAP;AAKH,OAZD,EAaKtG,IAbL,CAaU,GAbV,EAae,UAAUC,KAAV,EAAiB;AAC5B,YAAI+D,IAAI,GAAG/D,KAAK,CAAC+D,IAAjB;AACA,eAAOxC,aAAa,CAACwC,IAAD,CAApB;AACH,OAhBD;AAiBH,KAlBD,MAmBK;AACDgC,MAAAA,aAAa,CACRhG,IADL,CACU,SADV,EACqB,CADrB,EAEKmG,KAFL,CAEWpC,KAFX,EAGK/D,IAHL,CAGU,OAHV,EAGmB,MAHnB,EAIKA,IAJL,CAIU,OAJV,EAImB,UAAUC,KAAV,EAAiB;AAChC,eAAOnB,KAAK,CAACqD,KAAN,CAAYuC,iBAAZ,CAA8B;AACjCC,UAAAA,cAAc,EAAE,CACZtG,mBAAmB,CAACgI,IADR,EAEZhI,mBAAmB,CAACuG,MAFR,CADiB;AAKjCC,UAAAA,aAAa,EAAE5E,KAAK,CAACC,IALY;AAMjCoG,UAAAA,iBAAiB,EAAE;AANc,SAA9B,CAAP;AAQH,OAbD,EAcKF,KAdL,CAcW,MAdX,EAcmB,UAAUnG,KAAV,EAAiB;AAAE,eAAO8F,IAAI,CAAC5D,KAAL,CAAWoE,YAAX,CAAwBtG,KAAK,CAACC,IAA9B,CAAP;AAA6C,OAdnF,EAeKN,UAfL,CAegB,KAAKC,QAAL,CAAcC,WAAd,CAA0BC,aAA1B,CAAwC,mBAAxC,EAA6DiB,OAA7D,CAfhB,EAgBKhB,IAhBL,CAgBU,SAhBV,EAgBqB0C,aAAa,GAAG,CAAH,GAAOxE,aAAa,CAACQ,IAAd,CAAmB0B,OAAnB,CAA2BE,QAhBpE,EAiBKN,IAjBL,CAiBU,GAjBV,EAiBe,UAAUC,KAAV,EAAiB;AAC5B,YAAI+D,IAAI,GAAG/D,KAAK,CAAC+D,IAAjB;AACA,eAAOxC,aAAa,CAACwC,IAAD,CAApB;AACH,OApBD;;AAqBA,UAAItB,aAAJ,EAAmB;AACfsD,QAAAA,aAAa,CACRhG,IADL,CACU,cADV,EAC0B9B,aAAa,CAACQ,IAAd,CAAmB0B,OAAnB,CAA2BE,QADrD,EAEK8F,KAFL,CAEW,QAFX,EAEqB,UAAUnG,KAAV,EAAiB;AAClC,iBAAO8F,IAAI,CAAC5D,KAAL,CAAWqE,cAAX,CAA0BvG,KAAK,CAACC,IAAhC,CAAP;AACH,SAJD,EAKKkG,KALL,CAKW,kBALX,EAK+B,MAL/B,EAMKpG,IANL,CAMU,cANV,EAM0B,MAAM,IANhC;AAOH;AACJ;AACJ,GAhKD;;AAiKApB,EAAAA,IAAI,CAACb,SAAL,CAAe0I,OAAf,GAAyB,YAAY;AACjC;AACA,SAAK/G,MAAL,CACKC,SADL,CACe,WADf,EAEK+G,EAFL,CAEQ,WAFR,EAEqB,IAFrB,EAGKA,EAHL,CAGQ,UAHR,EAGoB,IAHpB,EAFiC,CAMjC;;AACA,QAAIjG,cAAc,GAAG,KAAKZ,QAAL,CAAca,MAAnC;AACAD,IAAAA,cAAc,CAACkG,mBAAf,CAAmCvI,MAAM,CAACwC,MAAP,CAAcC,UAAjD,EAA6D,KAAKvB,mBAAlE;AACAmB,IAAAA,cAAc,CAACkG,mBAAf,CAAmCvI,MAAM,CAACwC,MAAP,CAAcE,aAAjD,EAAgE,KAAKP,oBAArE;AACH,GAVD;;AAWA,SAAO3B,IAAP;AACH,CA9MyB,CA8MxBX,SA9MwB,CAA1B;;AA+MA,SAASW,IAAT","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Component } from '../component';\nimport * as Configuration from '../../configuration';\nimport { CartesianOrientations, Events, ColorClassNameTypes, } from '../../interfaces';\nimport { GradientUtils, DOMUtils } from '../../services';\nimport { Tools } from '../../tools';\nimport settings from 'carbon-components/es/globals/js/settings';\n// D3 Imports\nimport { area } from 'd3-shape';\nimport { select } from 'd3-selection';\nvar Area = /** @class */ (function (_super) {\n    __extends(Area, _super);\n    function Area() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'area';\n        _this.gradient_id = 'gradient-id-' + Math.floor(Math.random() * 99999999999);\n        _this.handleLegendOnHover = function (event) {\n            var hoveredElement = event.detail.hoveredElement;\n            _this.parent\n                .selectAll('path.area')\n                .transition(_this.services.transitions.getTransition('legend-hover-area'))\n                .attr('opacity', function (group) {\n                if (group.name !== hoveredElement.datum()['name']) {\n                    return Configuration.area.opacity.unselected;\n                }\n                return Configuration.area.opacity.selected;\n            });\n        };\n        _this.handleLegendMouseOut = function (event) {\n            _this.parent\n                .selectAll('path.area')\n                .transition(_this.services.transitions.getTransition('legend-mouseout-area'))\n                .attr('opacity', Configuration.area.opacity.selected);\n        };\n        return _this;\n    }\n    Area.prototype.init = function () {\n        var eventsFragment = this.services.events;\n        // Highlight correct area on legend item hovers\n        eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n        // Un-highlight area on legend item mouseouts\n        eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n    };\n    Area.prototype.render = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var svg = this.getContainerSVG({ withinChartClip: true });\n        var domain = [0, 0];\n        var cartesianScales = this.services.cartesianScales;\n        var orientation = cartesianScales.getOrientation();\n        var areaGenerator = area()\n            .curve(this.services.curves.getD3Curve())\n            .defined(function (datum, i) {\n            var rangeIdentifier = cartesianScales.getRangeIdentifier();\n            var value = datum[rangeIdentifier];\n            if (value === null || value === undefined) {\n                return false;\n            }\n            return true;\n        });\n        // Update the bound data on area groups\n        var groupedData = this.model.getGroupedData(this.configs.groups);\n        var bounds = Tools.getProperty(this.getOptions(), 'bounds');\n        var boundsEnabled = bounds && groupedData && groupedData.length === 1;\n        if (!boundsEnabled && bounds) {\n            console.warn(\"Bounds can only be shown when having 1 single datagroup, you've supplied \" + groupedData.length); // eslint-disable-line no-console\n        }\n        var upperBound = function (d, i) {\n            return boundsEnabled\n                ? cartesianScales.getBoundedScaledValues(d, i)[0]\n                : cartesianScales.getRangeValue(0);\n        };\n        var lowerBound = function (d, i) {\n            return boundsEnabled\n                ? cartesianScales.getBoundedScaledValues(d, i)[1]\n                : cartesianScales.getRangeValue(d, i);\n        };\n        if (orientation === CartesianOrientations.VERTICAL) {\n            domain = this.services.cartesianScales.getMainYScale().domain();\n            areaGenerator\n                .x(function (d, i) { return cartesianScales.getDomainValue(d, i); })\n                .y0(function (d, i) { return upperBound(d, i); })\n                .y1(function (d, i) { return lowerBound(d, i); });\n        }\n        else {\n            domain = this.services.cartesianScales.getMainXScale().domain();\n            areaGenerator\n                .x0(function (d, i) { return upperBound(d, i); })\n                .x1(function (d, i) { return lowerBound(d, i); })\n                .y(function (d, i) { return cartesianScales.getDomainValue(d, i); });\n        }\n        // Is gradient enabled or not\n        var isGradientEnabled = Tools.getProperty(this.getOptions(), 'color', 'gradient', 'enabled');\n        // Should gradient style be applicable\n        var isGradientAllowed = groupedData && groupedData.length === 1 && isGradientEnabled;\n        if (groupedData.length > 1 && isGradientEnabled) {\n            console.error('Gradients can only be enabled when having 1 single dataset');\n        }\n        var areas = svg\n            .selectAll('path.area')\n            .data(groupedData, function (group) { return group.name; });\n        var chartprefix = Tools.getProperty(this.getOptions(), 'style', 'prefix');\n        var chartSVG = DOMUtils.appendOrSelect(select(this.services.domUtils.getHolder()), \"svg.\" + settings.prefix + \"--\" + chartprefix + \"--chart-svg\");\n        // Remove elements that need to be exited\n        // We need exit at the top here to make sure that\n        // Data filters are processed before entering new elements\n        // Or updating existing ones\n        areas.exit().attr('opacity', 0).remove();\n        // if there is no grouped data (if all data groups are turned OFF with legend which can happen in the case of combo charts)\n        if (!groupedData.length) {\n            return;\n        }\n        if (isGradientAllowed) {\n            // The fill value of area has been overwritten, get color value from stroke color class instead\n            var strokePathElement = chartSVG\n                .select(\"path.\" + this.model.getColorClassName({\n                classNameTypes: [ColorClassNameTypes.STROKE],\n                dataGroupName: groupedData[0].name,\n            }))\n                .node();\n            var colorValue = void 0;\n            if (strokePathElement) {\n                colorValue = getComputedStyle(strokePathElement, null).getPropertyValue('stroke');\n            }\n            else {\n                var sparklineColorObject = Tools.getProperty(this.model.getOptions(), 'color', 'scale');\n                var sparklineColorObjectKeys = Object.keys(sparklineColorObject);\n                colorValue = sparklineColorObject[sparklineColorObjectKeys[0]];\n            }\n            GradientUtils.appendOrUpdateLinearGradient({\n                svg: this.parent,\n                id: groupedData[0].name.replace(' ', '') +\n                    '_' +\n                    this.gradient_id,\n                x1: '0%',\n                x2: '0%',\n                y1: '0%',\n                y2: '100%',\n                stops: GradientUtils.getStops(domain, colorValue),\n            });\n        }\n        else {\n            // make sure there is no linearGradient if no gradient is allowed\n            if (!this.parent.selectAll('defs linearGradient').empty()) {\n                this.parent.selectAll('defs linearGradient').each(function () {\n                    this.parentNode.remove();\n                });\n            }\n        }\n        var self = this;\n        // Enter paths that need to be introduced\n        var enteringAreas = areas.enter().append('path');\n        if (isGradientAllowed) {\n            enteringAreas\n                .merge(areas)\n                .style('fill', function (group) {\n                return \"url(#\" + group.name.replace(' ', '') + \"_\" + _this.gradient_id + \")\";\n            })\n                .attr('class', 'area')\n                .attr('class', function (group) {\n                return _this.model.getColorClassName({\n                    classNameTypes: [ColorClassNameTypes.FILL],\n                    dataGroupName: group.name,\n                    originalClassName: 'area',\n                });\n            })\n                .attr('d', function (group) {\n                var data = group.data;\n                return areaGenerator(data);\n            });\n        }\n        else {\n            enteringAreas\n                .attr('opacity', 0)\n                .merge(areas)\n                .attr('class', 'area')\n                .attr('class', function (group) {\n                return _this.model.getColorClassName({\n                    classNameTypes: [\n                        ColorClassNameTypes.FILL,\n                        ColorClassNameTypes.STROKE,\n                    ],\n                    dataGroupName: group.name,\n                    originalClassName: 'area',\n                });\n            })\n                .style('fill', function (group) { return self.model.getFillColor(group.name); })\n                .transition(this.services.transitions.getTransition('area-update-enter', animate))\n                .attr('opacity', boundsEnabled ? 1 : Configuration.area.opacity.selected)\n                .attr('d', function (group) {\n                var data = group.data;\n                return areaGenerator(data);\n            });\n            if (boundsEnabled) {\n                enteringAreas\n                    .attr('fill-opacity', Configuration.area.opacity.selected)\n                    .style('stroke', function (group) {\n                    return self.model.getStrokeColor(group.name);\n                })\n                    .style('stroke-dasharray', '2, 2')\n                    .attr('stroke-width', 0.7 + 'px');\n            }\n        }\n    };\n    Area.prototype.destroy = function () {\n        // Remove event listeners\n        this.parent\n            .selectAll('path.area')\n            .on('mousemove', null)\n            .on('mouseout', null);\n        // Remove legend listeners\n        var eventsFragment = this.services.events;\n        eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n        eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n    };\n    return Area;\n}(Component));\nexport { Area };\n//# sourceMappingURL=../../../src/components/graphs/area.js.map"]},"metadata":{},"sourceType":"module"}