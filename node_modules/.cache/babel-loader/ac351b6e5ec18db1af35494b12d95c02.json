{"ast":null,"code":"import OverviewPage from './OverviewPage';\nimport { connect } from 'react-redux';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(\"STATE: \" + JSON.stringify(state));\n  var props = {\n    statsLoaded: state.statsLoaded,\n    uniqueUsers: state.stats.uniqueUsers,\n    uniqueSessions: state.stats.uniqueSessions,\n    requestCount: state.stats.requestCount,\n    maxTopicCount: 0,\n    mostCommonData: [],\n    leastCommonData: [],\n    frequentlyEscalatedData: [],\n    notRecognizedData: []\n  };\n  var maxTopicCount = 0;\n  var intentsArr = [];\n\n  if (state.statsLoaded) {\n    Object.keys(state.stats.intentCounts).forEach(function (key) {\n      maxTopicCount = Math.max(state.stats.intentCounts[key], maxTopicCount);\n      intentsArr.push({\n        \"label\": key,\n        \"count\": state.stats.intentCounts[key]\n      });\n    });\n    props[\"maxTopicCount\"] = maxTopicCount;\n    intentsArr.sort(function (a, b) {\n      return parseFloat(b.count) - parseFloat(a.count);\n    });\n    var mostCommon = intentsArr.slice(0, 10);\n    intentsArr.sort(function (a, b) {\n      return parseFloat(a.count) - parseFloat(b.count);\n    });\n    var leastCommon = intentsArr.slice(0, 10);\n    props.mostCommonData = mostCommon;\n    props.leastCommonData = leastCommon;\n    props.frequentlyEscalatedData = [];\n    props.notRecognizedData = [{\n      label: \"I need to pay my bill\"\n    }, {\n      label: \"Where can I get my account information?\"\n    }, {\n      label: \"I need to transfer money to my family in Russia.\"\n    }, {\n      label: \"I was charged $7000 by my energy company\"\n    }, {\n      label: \"Wow so cool haha\"\n    }, {\n      label: \"Can I defer a payment I have to pay.\"\n    }, {\n      label: \"Can you please tell me a joke?\"\n    }];\n    props.recognized = state.stats.recognized, props.notRecognized = state.stats[\"not-recognized\"];\n    props.recognizedPercent = Math.round(100 * (state.stats.recognized / (state.stats.recognized + state.stats[\"not-recognized\"])));\n  }\n\n  console.log(\"PROPS: \" + JSON.stringify(props));\n  return props;\n};\n\nexport default connect(mapStateToProps)(OverviewPage);","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/content/OverviewPage/index.js"],"names":["OverviewPage","connect","mapStateToProps","state","console","log","JSON","stringify","props","statsLoaded","uniqueUsers","stats","uniqueSessions","requestCount","maxTopicCount","mostCommonData","leastCommonData","frequentlyEscalatedData","notRecognizedData","intentsArr","Object","keys","intentCounts","forEach","key","Math","max","push","sort","a","b","parseFloat","count","mostCommon","slice","leastCommon","label","recognized","notRecognized","recognizedPercent","round"],"mappings":"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","sourcesContent":["import OverviewPage from './OverviewPage';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n    console.log(\"STATE: \" + JSON.stringify(state))\n\n    let props = {\n        statsLoaded: state.statsLoaded,\n        uniqueUsers: state.stats.uniqueUsers,\n        uniqueSessions: state.stats.uniqueSessions,\n        requestCount: state.stats.requestCount,\n        maxTopicCount: 0,\n        mostCommonData: [],\n        leastCommonData: [],\n        frequentlyEscalatedData: [],\n        notRecognizedData: []\n    };\n\n    var maxTopicCount = 0\n    var intentsArr = []\n\n    if (state.statsLoaded) {\n        Object.keys(state.stats.intentCounts).forEach(key => {\n            maxTopicCount = Math.max(state.stats.intentCounts[key], maxTopicCount)\n            intentsArr.push({ \"label\": key, \"count\": state.stats.intentCounts[key] })\n        })\n\n        props[\"maxTopicCount\"] = maxTopicCount\n\n        intentsArr.sort((a, b) => parseFloat(b.count) - parseFloat(a.count));\n        let mostCommon = intentsArr.slice(0, 10)\n\n        intentsArr.sort((a, b) => parseFloat(a.count) - parseFloat(b.count));\n        let leastCommon = intentsArr.slice(0, 10)\n\n        props.mostCommonData = mostCommon\n        props.leastCommonData = leastCommon\n        props.frequentlyEscalatedData = []\n        props.notRecognizedData = [\n            {label: \"I need to pay my bill\" },\n            {label: \"Where can I get my account information?\" },\n            {label: \"I need to transfer money to my family in Russia.\" },\n            {label: \"I was charged $7000 by my energy company\"},\n            {label: \"Wow so cool haha\"},\n            {label: \"Can I defer a payment I have to pay.\"},\n            {label: \"Can you please tell me a joke?\"}\n        ]\n\n        props.recognized = state.stats.recognized,\n        props.notRecognized = state.stats[\"not-recognized\"]\n        props.recognizedPercent = Math.round(100 * (state.stats.recognized / (state.stats.recognized + state.stats[\"not-recognized\"])))\n\n\n    }\n\n    console.log(\"PROPS: \" + JSON.stringify(props))\n\n    return props\n}\n\nexport default connect(mapStateToProps)(OverviewPage)"]},"metadata":{},"sourceType":"module"}