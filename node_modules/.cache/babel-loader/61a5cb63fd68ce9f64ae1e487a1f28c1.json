{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Scatter } from './scatter';\nimport { Roles } from '../../interfaces';\nimport { Tools } from '../../tools';\n\nvar StackedScatter =\n/** @class */\nfunction (_super) {\n  __extends(StackedScatter, _super);\n\n  function StackedScatter() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'scatter-stacked';\n    return _this;\n  }\n\n  StackedScatter.prototype.render = function (animate) {\n    var _this = this;\n\n    var isScatterEnabled = Tools.getProperty(this.getOptions(), 'points', 'enabled');\n\n    if (!isScatterEnabled) {\n      return;\n    } // Grab container SVG\n\n\n    var svg = this.getContainerSVG({\n      withinChartClip: true\n    });\n    var options = this.getOptions();\n    var groupMapsTo = options.data.groupMapsTo;\n    var percentage = Object.keys(options.axes).some(function (axis) {\n      return options.axes[axis].percentage;\n    });\n    var stackedData = this.model.getStackedData({\n      groups: this.configs.groups,\n      percentage: percentage\n    }); // Update data on dot groups\n\n    var circleGroups = svg.selectAll('g.dots').data(stackedData, function (d) {\n      return Tools.getProperty(d, 0, groupMapsTo);\n    }); // Remove dot groups that need to be removed\n\n    circleGroups.exit().attr('opacity', 0).remove(); // Add the dot groups that need to be introduced\n\n    var circleGroupsEnter = circleGroups.enter().append('g').classed('dots', true).attr('role', Roles.GROUP); // Update data on all circles\n\n    var circles = circleGroupsEnter.merge(circleGroups).selectAll('circle.dot').data(function (d) {\n      return d;\n    }); // Remove circles that need to be removed\n\n    circles.exit().attr('opacity', 0).remove(); // Add the dot groups that need to be introduced\n\n    var enteringCircles = circles.enter().append('circle').classed('dot', true).attr('opacity', 0); // Apply styling & position\n\n    var circlesToStyle = enteringCircles.merge(circles).datum(function (d) {\n      var _a;\n\n      var group = d[groupMapsTo];\n\n      var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(d);\n\n      var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(d);\n\n      return _a = {}, _a[groupMapsTo] = group, _a[domainIdentifier] = d['data']['sharedStackKey'], _a[rangeIdentifier] = d[1], _a;\n    });\n    this.styleCircles(circlesToStyle, animate); // Add event listeners to elements drawn\n\n    this.addEventListeners();\n  };\n\n  StackedScatter.prototype.getTooltipData = function (hoveredX, hoveredY) {\n    var _this = this;\n\n    var options = this.getOptions();\n    var groupMapsTo = options.data.groupMapsTo;\n    var percentage = Object.keys(options.axes).some(function (axis) {\n      return options.axes[axis].percentage;\n    });\n    var stackedData = this.model.getStackedData({\n      groups: this.configs.groups,\n      percentage: percentage\n    });\n    var tooltipData = [];\n    stackedData.forEach(function (groupData, groupDataIndex) {\n      groupData.forEach(function (datum, dataIndex) {\n        var _a;\n\n        var group = datum[groupMapsTo];\n        var domainValue = datum['data']['sharedStackKey'];\n        var rangeValue = datum['data'][group];\n        var stackedRangeValue = datum[1];\n\n        var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(datum);\n\n        var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(datum);\n\n        if (rangeValue !== null && rangeValue !== undefined && hoveredX === _this.services.cartesianScales.getDomainValue(domainValue) && hoveredY === _this.services.cartesianScales.getRangeValue(stackedRangeValue)) {\n          if (percentage) {\n            rangeValue = _this.model.getStackedData({\n              groups: _this.configs.groups\n            })[groupDataIndex][dataIndex]['data'][group];\n          }\n\n          if (rangeValue !== null) {\n            tooltipData.push((_a = {}, _a[groupMapsTo] = group, _a[domainIdentifier] = domainValue, _a[rangeIdentifier] = rangeValue, _a));\n          }\n        }\n      });\n    });\n    return this.model.getDisplayData(this.configs.groups).filter(function (datapoint) {\n      var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(datapoint);\n\n      var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(datapoint);\n\n      return tooltipData.find(function (tooltipDatapoint) {\n        return tooltipDatapoint[groupMapsTo] == datapoint[groupMapsTo] && tooltipDatapoint[domainIdentifier] == datapoint[domainIdentifier] && tooltipDatapoint[rangeIdentifier] == datapoint[rangeIdentifier];\n      }) !== undefined;\n    });\n  };\n\n  return StackedScatter;\n}(Scatter);\n\nexport { StackedScatter };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/components/graphs/scatter-stacked.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Scatter","Roles","Tools","StackedScatter","_super","_this","apply","arguments","type","render","animate","isScatterEnabled","getProperty","getOptions","svg","getContainerSVG","withinChartClip","options","groupMapsTo","data","percentage","keys","axes","some","axis","stackedData","model","getStackedData","groups","configs","circleGroups","selectAll","exit","attr","remove","circleGroupsEnter","enter","append","classed","GROUP","circles","merge","enteringCircles","circlesToStyle","datum","_a","group","domainIdentifier","services","cartesianScales","getDomainIdentifier","rangeIdentifier","getRangeIdentifier","styleCircles","addEventListeners","getTooltipData","hoveredX","hoveredY","tooltipData","forEach","groupData","groupDataIndex","dataIndex","domainValue","rangeValue","stackedRangeValue","undefined","getDomainValue","getRangeValue","push","getDisplayData","filter","datapoint","find","tooltipDatapoint"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Scatter } from './scatter';\nimport { Roles } from '../../interfaces';\nimport { Tools } from '../../tools';\nvar StackedScatter = /** @class */ (function (_super) {\n    __extends(StackedScatter, _super);\n    function StackedScatter() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'scatter-stacked';\n        return _this;\n    }\n    StackedScatter.prototype.render = function (animate) {\n        var _this = this;\n        var isScatterEnabled = Tools.getProperty(this.getOptions(), 'points', 'enabled');\n        if (!isScatterEnabled) {\n            return;\n        }\n        // Grab container SVG\n        var svg = this.getContainerSVG({ withinChartClip: true });\n        var options = this.getOptions();\n        var groupMapsTo = options.data.groupMapsTo;\n        var percentage = Object.keys(options.axes).some(function (axis) { return options.axes[axis].percentage; });\n        var stackedData = this.model.getStackedData({\n            groups: this.configs.groups,\n            percentage: percentage,\n        });\n        // Update data on dot groups\n        var circleGroups = svg\n            .selectAll('g.dots')\n            .data(stackedData, function (d) { return Tools.getProperty(d, 0, groupMapsTo); });\n        // Remove dot groups that need to be removed\n        circleGroups.exit().attr('opacity', 0).remove();\n        // Add the dot groups that need to be introduced\n        var circleGroupsEnter = circleGroups\n            .enter()\n            .append('g')\n            .classed('dots', true)\n            .attr('role', Roles.GROUP);\n        // Update data on all circles\n        var circles = circleGroupsEnter\n            .merge(circleGroups)\n            .selectAll('circle.dot')\n            .data(function (d) { return d; });\n        // Remove circles that need to be removed\n        circles.exit().attr('opacity', 0).remove();\n        // Add the dot groups that need to be introduced\n        var enteringCircles = circles\n            .enter()\n            .append('circle')\n            .classed('dot', true)\n            .attr('opacity', 0);\n        // Apply styling & position\n        var circlesToStyle = enteringCircles.merge(circles).datum(function (d) {\n            var _a;\n            var group = d[groupMapsTo];\n            var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(d);\n            var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(d);\n            return _a = {},\n                _a[groupMapsTo] = group,\n                _a[domainIdentifier] = d['data']['sharedStackKey'],\n                _a[rangeIdentifier] = d[1],\n                _a;\n        });\n        this.styleCircles(circlesToStyle, animate);\n        // Add event listeners to elements drawn\n        this.addEventListeners();\n    };\n    StackedScatter.prototype.getTooltipData = function (hoveredX, hoveredY) {\n        var _this = this;\n        var options = this.getOptions();\n        var groupMapsTo = options.data.groupMapsTo;\n        var percentage = Object.keys(options.axes).some(function (axis) { return options.axes[axis].percentage; });\n        var stackedData = this.model.getStackedData({\n            groups: this.configs.groups,\n            percentage: percentage,\n        });\n        var tooltipData = [];\n        stackedData.forEach(function (groupData, groupDataIndex) {\n            groupData.forEach(function (datum, dataIndex) {\n                var _a;\n                var group = datum[groupMapsTo];\n                var domainValue = datum['data']['sharedStackKey'];\n                var rangeValue = datum['data'][group];\n                var stackedRangeValue = datum[1];\n                var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(datum);\n                var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(datum);\n                if (rangeValue !== null &&\n                    rangeValue !== undefined &&\n                    hoveredX ===\n                        _this.services.cartesianScales.getDomainValue(domainValue) &&\n                    hoveredY ===\n                        _this.services.cartesianScales.getRangeValue(stackedRangeValue)) {\n                    if (percentage) {\n                        rangeValue = _this.model.getStackedData({\n                            groups: _this.configs.groups,\n                        })[groupDataIndex][dataIndex]['data'][group];\n                    }\n                    if (rangeValue !== null) {\n                        tooltipData.push((_a = {},\n                            _a[groupMapsTo] = group,\n                            _a[domainIdentifier] = domainValue,\n                            _a[rangeIdentifier] = rangeValue,\n                            _a));\n                    }\n                }\n            });\n        });\n        return this.model\n            .getDisplayData(this.configs.groups)\n            .filter(function (datapoint) {\n            var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(datapoint);\n            var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(datapoint);\n            return (tooltipData.find(function (tooltipDatapoint) {\n                return (tooltipDatapoint[groupMapsTo] ==\n                    datapoint[groupMapsTo] &&\n                    tooltipDatapoint[domainIdentifier] ==\n                        datapoint[domainIdentifier] &&\n                    tooltipDatapoint[rangeIdentifier] ==\n                        datapoint[rangeIdentifier]);\n            }) !== undefined);\n        });\n    };\n    return StackedScatter;\n}(Scatter));\nexport { StackedScatter };\n//# sourceMappingURL=../../../src/components/graphs/scatter-stacked.js.map"]},"metadata":{},"sourceType":"module"}