{"ast":null,"code":"import _classCallCheck from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/content/NotRecognizedPage/NotRecognizedPage.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nvar NotRecognizedPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(NotRecognizedPage, _React$Component);\n\n  var _super = _createSuper(NotRecognizedPage);\n\n  function NotRecognizedPage() {\n    _classCallCheck(this, NotRecognizedPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NotRecognizedPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch({\n        type: config.UPDATE,\n        update: {\n          pageTitle: \"Engagement\",\n          activePage: \"Engagement\"\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 12\n        }\n      }, \"NOT RECOGNIZED PAGE\");\n    }\n  }]);\n\n  return NotRecognizedPage;\n}(React.Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var notRecognized = state.notRecognizedMessages.filter(function (val) {\n    return moment(val.timestamp).isBetween(state.startDate, state.endDate, \"day\", \"[]\");\n  }).sort(function (a, b) {\n    return moment(b.timestamp) - moment(a.timestamp);\n  });\n  return {\n    notRecognized: notRecognized\n  };\n};\n\nexport default connect()(NotRecognizedPage);","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/content/NotRecognizedPage/NotRecognizedPage.js"],"names":["React","connect","NotRecognizedPage","props","dispatch","type","config","UPDATE","update","pageTitle","activePage","Component","mapStateToProps","state","notRecognized","notRecognizedMessages","filter","val","moment","timestamp","isBetween","startDate","endDate","sort","a","b"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;IACMC,iB;;;;;;;;;;;;;wCAEgB;AAClB,WAAKC,KAAL,CAAWC,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAEC,MAAM,CAACC,MADK;AAElBC,QAAAA,MAAM,EAAE;AACNC,UAAAA,SAAS,EAAE,YADL;AAENC,UAAAA,UAAU,EAAE;AAFN;AAFU,OAApB;AAOD;;;6BAEQ;AACP,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD;;;;EAd6BV,KAAK,CAACW,S;;AAerC;;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,MAAIC,aAAa,GAAGD,KAAK,CAACE,qBAAN,CAA4BC,MAA5B,CAAmC,UAAAC,GAAG;AAAA,WAAIC,MAAM,CAACD,GAAG,CAACE,SAAL,CAAN,CAAsBC,SAAtB,CAAgCP,KAAK,CAACQ,SAAtC,EAAiDR,KAAK,CAACS,OAAvD,EAAgE,KAAhE,EAAuE,IAAvE,CAAJ;AAAA,GAAtC,EACbC,IADa,CACR,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUP,MAAM,CAACO,CAAC,CAACN,SAAH,CAAN,GAAsBD,MAAM,CAACM,CAAC,CAACL,SAAH,CAAtC;AAAA,GADQ,CAApB;AAGA,SAAO;AAAEL,IAAAA,aAAa,EAAEA;AAAjB,GAAP;AACD,CALD;;AAOA,eAAeb,OAAO,GAAGC,iBAAH,CAAtB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nclass NotRecognizedPage extends React.Component {\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: config.UPDATE,\n      update: {\n        pageTitle: \"Engagement\",\n        activePage: \"Engagement\"\n      }\n    })\n  }\n\n  render() {\n    return <div>NOT RECOGNIZED PAGE</div>;\n  }\n};\n\nconst mapStateToProps = (state) => {\n  let notRecognized = state.notRecognizedMessages.filter(val => moment(val.timestamp).isBetween(state.startDate, state.endDate, \"day\", \"[]\"))\n        .sort((a, b) => moment(b.timestamp) - moment(a.timestamp))\n\n  return { notRecognized: notRecognized }\n}\n\nexport default connect()(NotRecognizedPage);"]},"metadata":{},"sourceType":"module"}