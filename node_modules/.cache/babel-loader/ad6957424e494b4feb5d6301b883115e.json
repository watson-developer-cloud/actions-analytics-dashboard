{"ast":null,"code":"import OverviewPage from './OverviewPage';\nimport { connect } from 'react-redux';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var props = {\n    statsLoaded: state.statsLoaded,\n    uniqueUsers: state.uniqueUsers,\n    uniqueSessions: state.uniqueSessions,\n    requestCount: state.requestCount,\n    recognized: state.recognized,\n    notRecognized: state.notRecognized,\n    recognizedPercent: 100\n  };\n\n  if (state.statsLoaded) {\n    props.recognizedPercent = Math.round(100 * (props.recognized / (props.recognized + props.notRecognized)));\n  }\n\n  return props;\n};\n\nexport default connect(mapStateToProps)(OverviewPage);","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/content/OverviewPage/index.js"],"names":["OverviewPage","connect","mapStateToProps","state","props","statsLoaded","uniqueUsers","uniqueSessions","requestCount","recognized","notRecognized","recognizedPercent","Math","round"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,MAAIC,KAAK,GAAG;AACRC,IAAAA,WAAW,EAAEF,KAAK,CAACE,WADX;AAERC,IAAAA,WAAW,EAAEH,KAAK,CAACG,WAFX;AAGRC,IAAAA,cAAc,EAAEJ,KAAK,CAACI,cAHd;AAIRC,IAAAA,YAAY,EAAEL,KAAK,CAACK,YAJZ;AAKRC,IAAAA,UAAU,EAAEN,KAAK,CAACM,UALV;AAMRC,IAAAA,aAAa,EAAEP,KAAK,CAACO,aANb;AAORC,IAAAA,iBAAiB,EAAE;AAPX,GAAZ;;AAUA,MAAIR,KAAK,CAACE,WAAV,EAAuB;AACnBD,IAAAA,KAAK,CAACO,iBAAN,GAA0BC,IAAI,CAACC,KAAL,CAAW,OAAOT,KAAK,CAACK,UAAN,IAAoBL,KAAK,CAACK,UAAN,GAAmBL,KAAK,CAACM,aAA7C,CAAP,CAAX,CAA1B;AACH;;AAED,SAAON,KAAP;AACH,CAhBD;;AAkBA,eAAeH,OAAO,CAACC,eAAD,CAAP,CAAyBF,YAAzB,CAAf","sourcesContent":["import OverviewPage from './OverviewPage';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n    let props = {\n        statsLoaded: state.statsLoaded,\n        uniqueUsers: state.uniqueUsers,\n        uniqueSessions: state.uniqueSessions,\n        requestCount: state.requestCount,\n        recognized: state.recognized,\n        notRecognized: state.notRecognized,\n        recognizedPercent: 100\n    };\n\n    if (state.statsLoaded) {\n        props.recognizedPercent = Math.round(100 * (props.recognized / (props.recognized + props.notRecognized)))\n    }\n\n    return props\n}\n\nexport default connect(mapStateToProps)(OverviewPage)"]},"metadata":{},"sourceType":"module"}