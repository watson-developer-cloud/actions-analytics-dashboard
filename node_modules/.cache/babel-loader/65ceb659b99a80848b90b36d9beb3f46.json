{"ast":null,"code":"import moment from 'moment';\nexport function getDictCount(dict, startDateStr, endDateStr) {\n  var startDate = moment(startDateStr, \"L\");\n  var endDate = moment(endDateStr, \"L\").endOf('day');\n  var keys = Object.keys(dict);\n  var count = 0;\n\n  for (var i = 0; i < keys.length; i++) {\n    var date = keys[i];\n    if (moment(date, \"L\").isBetween(startDate, endDate, \"day\", \"[]\")) count += dict[date];\n  }\n\n  return count;\n}\nexport function getLayeredDictCount(dict, startDateStr, endDateStr) {\n  var startDate = moment(startDateStr, \"L\");\n  var endDate = moment(endDateStr, \"L\").endOf('day');\n  var ret = {};\n  var keys = Object.keys(dict);\n\n  for (var i = 0; i < keys.length; i++) {\n    var date = keys[i];\n\n    if (moment(date, \"L\").isBetween(startDate, endDate)) {\n      var innerDict = dict[date];\n      var innerKeys = Object.keys(innerDict);\n\n      for (var j = 0; j < innerKeys.length; j++) {\n        var key = innerKeys[i];\n        ret[key] = key in ret ? ret[key] + innerDict[key] : innerDict[key];\n      }\n    }\n  }\n\n  return ret;\n}","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/utils.js"],"names":["moment","getDictCount","dict","startDateStr","endDateStr","startDate","endDate","endOf","keys","Object","count","i","length","date","isBetween","getLayeredDictCount","ret","innerDict","innerKeys","j","key"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,YAA5B,EAA0CC,UAA1C,EAAsD;AACzD,MAAIC,SAAS,GAAGL,MAAM,CAACG,YAAD,EAAe,GAAf,CAAtB;AACA,MAAIG,OAAO,GAAGN,MAAM,CAACI,UAAD,EAAa,GAAb,CAAN,CAAwBG,KAAxB,CAA8B,KAA9B,CAAd;AAEA,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYN,IAAZ,CAAX;AACA,MAAIQ,KAAK,GAAG,CAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,QAAIE,IAAI,GAAGL,IAAI,CAACG,CAAD,CAAf;AAEA,QAAIX,MAAM,CAACa,IAAD,EAAO,GAAP,CAAN,CAAkBC,SAAlB,CAA4BT,SAA5B,EAAuCC,OAAvC,EAAgD,KAAhD,EAAuD,IAAvD,CAAJ,EACEI,KAAK,IAAIR,IAAI,CAACW,IAAD,CAAb;AACH;;AAED,SAAOH,KAAP;AACH;AAED,OAAO,SAASK,mBAAT,CAA6Bb,IAA7B,EAAmCC,YAAnC,EAAiDC,UAAjD,EAA6D;AAChE,MAAIC,SAAS,GAAGL,MAAM,CAACG,YAAD,EAAe,GAAf,CAAtB;AACA,MAAIG,OAAO,GAAGN,MAAM,CAACI,UAAD,EAAa,GAAb,CAAN,CAAwBG,KAAxB,CAA8B,KAA9B,CAAd;AAEA,MAAIS,GAAG,GAAG,EAAV;AACA,MAAIR,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYN,IAAZ,CAAX;;AAEA,OAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,QAAIE,IAAI,GAAGL,IAAI,CAACG,CAAD,CAAf;;AAEE,QAAIX,MAAM,CAACa,IAAD,EAAO,GAAP,CAAN,CAAkBC,SAAlB,CAA4BT,SAA5B,EAAuCC,OAAvC,CAAJ,EAAqD;AACjD,UAAIW,SAAS,GAAGf,IAAI,CAACW,IAAD,CAApB;AACA,UAAIK,SAAS,GAAGT,MAAM,CAACD,IAAP,CAAYS,SAAZ,CAAhB;;AAEA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACN,MAA9B,EAAsCO,CAAC,EAAvC,EAA2C;AACvC,YAAIC,GAAG,GAAGF,SAAS,CAACP,CAAD,CAAnB;AACAK,QAAAA,GAAG,CAACI,GAAD,CAAH,GAAWA,GAAG,IAAIJ,GAAP,GAAaA,GAAG,CAACI,GAAD,CAAH,GAAWH,SAAS,CAACG,GAAD,CAAjC,GAAyCH,SAAS,CAACG,GAAD,CAA7D;AACH;AACJ;AACJ;;AAED,SAAOJ,GAAP;AACH","sourcesContent":["import moment from 'moment';\n\nexport function getDictCount(dict, startDateStr, endDateStr) {\n    let startDate = moment(startDateStr, \"L\")\n    let endDate = moment(endDateStr, \"L\").endOf('day');\n\n    let keys = Object.keys(dict)\n    let count = 0\n\n    for (let i = 0; i < keys.length; i++) {\n      let date = keys[i]\n\n      if (moment(date, \"L\").isBetween(startDate, endDate, \"day\", \"[]\"))\n        count += dict[date]\n    }\n\n    return count\n}\n\nexport function getLayeredDictCount(dict, startDateStr, endDateStr) {\n    let startDate = moment(startDateStr, \"L\")\n    let endDate = moment(endDateStr, \"L\").endOf('day');\n\n    let ret = {}\n    let keys = Object.keys(dict)\n\n    for (let i = 0; i < keys.length; i++) {\n      let date = keys[i]\n\n        if (moment(date, \"L\").isBetween(startDate, endDate)) {\n            let innerDict = dict[date]\n            let innerKeys = Object.keys(innerDict)\n\n            for (let j = 0; j < innerKeys.length; j++) {\n                let key = innerKeys[i]\n                ret[key] = key in ret ? ret[key] + innerDict[key] : innerDict[key]\n            }\n        }\n    }\n\n    return ret\n}"]},"metadata":{},"sourceType":"module"}