{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Chart } from '../chart';\nimport * as Configuration from '../configuration';\nimport { Tools } from '../tools';\nimport { GaugeChartModel } from './../model-gauge'; // Components\n\nimport { Gauge } from '../components/index';\n\nvar GaugeChart =\n/** @class */\nfunction (_super) {\n  __extends(GaugeChart, _super);\n\n  function GaugeChart(holder, chartConfigs) {\n    var _this = _super.call(this, holder, chartConfigs) || this;\n\n    _this.model = new GaugeChartModel(_this.services); // Merge the default options for this chart\n    // With the user provided options\n\n    _this.model.setOptions(Tools.mergeDefaultChartOptions(Configuration.options.gaugeChart, chartConfigs.options)); // Initialize data, services, components etc.\n\n\n    _this.init(holder, chartConfigs);\n\n    return _this;\n  }\n\n  GaugeChart.prototype.getComponents = function () {\n    // Specify what to render inside the graph-frame\n    var graphFrameComponents = [new Gauge(this.model, this.services)];\n    var components = this.getChartComponents(graphFrameComponents);\n    return components;\n  };\n\n  return GaugeChart;\n}(Chart);\n\nexport { GaugeChart };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/charts/gauge.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Chart","Configuration","Tools","GaugeChartModel","Gauge","GaugeChart","_super","holder","chartConfigs","_this","call","model","services","setOptions","mergeDefaultChartOptions","options","gaugeChart","init","getComponents","graphFrameComponents","components","getChartComponents"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,cAAa,GAAG,uBAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,cAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd;AAAiB,YAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAA1C;AAAwD,KAF9E;;AAGA,WAAOP,cAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,cAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C,C,CAaA;;;AACA,SAASI,KAAT,QAAsB,UAAtB;AACA,OAAO,KAAKC,aAAZ,MAA+B,kBAA/B;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,eAAT,QAAgC,kBAAhC,C,CACA;;AACA,SAASC,KAAT,QAAsB,qBAAtB;;AACA,IAAIC,UAAU;AAAG;AAAe,UAAUC,MAAV,EAAkB;AAC9CpB,EAAAA,SAAS,CAACmB,UAAD,EAAaC,MAAb,CAAT;;AACA,WAASD,UAAT,CAAoBE,MAApB,EAA4BC,YAA5B,EAA0C;AACtC,QAAIC,KAAK,GAAGH,MAAM,CAACI,IAAP,CAAY,IAAZ,EAAkBH,MAAlB,EAA0BC,YAA1B,KAA2C,IAAvD;;AACAC,IAAAA,KAAK,CAACE,KAAN,GAAc,IAAIR,eAAJ,CAAoBM,KAAK,CAACG,QAA1B,CAAd,CAFsC,CAGtC;AACA;;AACAH,IAAAA,KAAK,CAACE,KAAN,CAAYE,UAAZ,CAAuBX,KAAK,CAACY,wBAAN,CAA+Bb,aAAa,CAACc,OAAd,CAAsBC,UAArD,EAAiER,YAAY,CAACO,OAA9E,CAAvB,EALsC,CAMtC;;;AACAN,IAAAA,KAAK,CAACQ,IAAN,CAAWV,MAAX,EAAmBC,YAAnB;;AACA,WAAOC,KAAP;AACH;;AACDJ,EAAAA,UAAU,CAACP,SAAX,CAAqBoB,aAArB,GAAqC,YAAY;AAC7C;AACA,QAAIC,oBAAoB,GAAG,CAAC,IAAIf,KAAJ,CAAU,KAAKO,KAAf,EAAsB,KAAKC,QAA3B,CAAD,CAA3B;AACA,QAAIQ,UAAU,GAAG,KAAKC,kBAAL,CAAwBF,oBAAxB,CAAjB;AACA,WAAOC,UAAP;AACH,GALD;;AAMA,SAAOf,UAAP;AACH,CAnB+B,CAmB9BL,KAnB8B,CAAhC;;AAoBA,SAASK,UAAT","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Chart } from '../chart';\nimport * as Configuration from '../configuration';\nimport { Tools } from '../tools';\nimport { GaugeChartModel } from './../model-gauge';\n// Components\nimport { Gauge } from '../components/index';\nvar GaugeChart = /** @class */ (function (_super) {\n    __extends(GaugeChart, _super);\n    function GaugeChart(holder, chartConfigs) {\n        var _this = _super.call(this, holder, chartConfigs) || this;\n        _this.model = new GaugeChartModel(_this.services);\n        // Merge the default options for this chart\n        // With the user provided options\n        _this.model.setOptions(Tools.mergeDefaultChartOptions(Configuration.options.gaugeChart, chartConfigs.options));\n        // Initialize data, services, components etc.\n        _this.init(holder, chartConfigs);\n        return _this;\n    }\n    GaugeChart.prototype.getComponents = function () {\n        // Specify what to render inside the graph-frame\n        var graphFrameComponents = [new Gauge(this.model, this.services)];\n        var components = this.getChartComponents(graphFrameComponents);\n        return components;\n    };\n    return GaugeChart;\n}(Chart));\nexport { GaugeChart };\n//# sourceMappingURL=../../src/charts/gauge.js.map"]},"metadata":{},"sourceType":"module"}