{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Skeleton } from '../graphs/skeleton';\nimport { DOMUtils } from '../../services';\nimport { Tools } from '../../tools';\n\nvar SkeletonLines =\n/** @class */\nfunction (_super) {\n  __extends(SkeletonLines, _super);\n\n  function SkeletonLines() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'skeleton-lines';\n    return _this;\n  }\n\n  SkeletonLines.prototype.render = function () {\n    var svg = this.parent;\n    var parent = svg.node().parentNode;\n\n    var _a = DOMUtils.getSVGElementSize(parent, {\n      useAttrs: true\n    }),\n        width = _a.width,\n        height = _a.height;\n\n    svg.attr('width', width).attr('height', height);\n    var isDataLoading = Tools.getProperty(this.getOptions(), 'data', 'loading');\n    var isSparkline = !Tools.getProperty(this.getOptions(), 'grid', 'x', 'enabled') && !Tools.getProperty(this.getOptions(), 'grid', 'y', 'enabled') && !Tools.getProperty(this.getOptions(), 'axes', 'bottom', 'visible') && !Tools.getProperty(this.getOptions(), 'axes', 'left', 'visible'); // display a skeleton if there is no chart data or the loading flag is set to true\n\n    if (isDataLoading && !isSparkline) {\n      _super.prototype.renderGridSkeleton.call(this, isDataLoading);\n    } else if (isDataLoading && isSparkline) {\n      this.renderSparklineSkeleton(isDataLoading);\n    } else {\n      this.removeSkeleton();\n    }\n  };\n\n  SkeletonLines.prototype.renderSparklineSkeleton = function (showShimmerEffect) {\n    this.setScales();\n    this.drawBackdrop(showShimmerEffect);\n    this.drawSparkline(showShimmerEffect);\n    this.updateBackdropStyle();\n\n    if (showShimmerEffect) {\n      this.setShimmerEffect('shimmer-lines');\n    }\n  };\n\n  SkeletonLines.prototype.drawSparkline = function (showShimmerEffect) {\n    var width = this.backdrop.attr('width');\n    var ticksValues = [100];\n    var sparklineSkeleton = DOMUtils.appendOrSelect(this.backdrop, 'g.y.skeleton');\n    var update = sparklineSkeleton.selectAll('line').data(ticksValues);\n    update.enter().append('line').merge(update).attr('x1', 0).attr('x2', width).attr('y1', function (d) {\n      return d;\n    }).attr('y2', function (d) {\n      return d;\n    });\n    sparklineSkeleton.selectAll('line').classed('shimmer-effect-lines', showShimmerEffect).classed('empty-state-lines', !showShimmerEffect);\n  };\n\n  SkeletonLines.prototype.updateBackdropStyle = function () {\n    var svg = this.parent;\n    this.backdrop = DOMUtils.appendOrSelect(svg, 'svg.chart-skeleton.DAII');\n    var backdropRect = DOMUtils.appendOrSelect(this.backdrop, 'rect.chart-skeleton-backdrop');\n    backdropRect.classed('shimmer-effect-lines', false);\n    backdropRect.classed('shimmer-effect-sparkline', true);\n  };\n\n  return SkeletonLines;\n}(Skeleton);\n\nexport { SkeletonLines };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/components/graphs/skeleton-lines.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Skeleton","DOMUtils","Tools","SkeletonLines","_super","_this","apply","arguments","type","render","svg","parent","node","parentNode","_a","getSVGElementSize","useAttrs","width","height","attr","isDataLoading","getProperty","getOptions","isSparkline","renderGridSkeleton","call","renderSparklineSkeleton","removeSkeleton","showShimmerEffect","setScales","drawBackdrop","drawSparkline","updateBackdropStyle","setShimmerEffect","backdrop","ticksValues","sparklineSkeleton","appendOrSelect","update","selectAll","data","enter","append","merge","classed","backdropRect"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Skeleton } from '../graphs/skeleton';\nimport { DOMUtils } from '../../services';\nimport { Tools } from '../../tools';\nvar SkeletonLines = /** @class */ (function (_super) {\n    __extends(SkeletonLines, _super);\n    function SkeletonLines() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'skeleton-lines';\n        return _this;\n    }\n    SkeletonLines.prototype.render = function () {\n        var svg = this.parent;\n        var parent = svg.node().parentNode;\n        var _a = DOMUtils.getSVGElementSize(parent, {\n            useAttrs: true,\n        }), width = _a.width, height = _a.height;\n        svg.attr('width', width).attr('height', height);\n        var isDataLoading = Tools.getProperty(this.getOptions(), 'data', 'loading');\n        var isSparkline = !Tools.getProperty(this.getOptions(), 'grid', 'x', 'enabled') &&\n            !Tools.getProperty(this.getOptions(), 'grid', 'y', 'enabled') &&\n            !Tools.getProperty(this.getOptions(), 'axes', 'bottom', 'visible') &&\n            !Tools.getProperty(this.getOptions(), 'axes', 'left', 'visible');\n        // display a skeleton if there is no chart data or the loading flag is set to true\n        if (isDataLoading && !isSparkline) {\n            _super.prototype.renderGridSkeleton.call(this, isDataLoading);\n        }\n        else if (isDataLoading && isSparkline) {\n            this.renderSparklineSkeleton(isDataLoading);\n        }\n        else {\n            this.removeSkeleton();\n        }\n    };\n    SkeletonLines.prototype.renderSparklineSkeleton = function (showShimmerEffect) {\n        this.setScales();\n        this.drawBackdrop(showShimmerEffect);\n        this.drawSparkline(showShimmerEffect);\n        this.updateBackdropStyle();\n        if (showShimmerEffect) {\n            this.setShimmerEffect('shimmer-lines');\n        }\n    };\n    SkeletonLines.prototype.drawSparkline = function (showShimmerEffect) {\n        var width = this.backdrop.attr('width');\n        var ticksValues = [100];\n        var sparklineSkeleton = DOMUtils.appendOrSelect(this.backdrop, 'g.y.skeleton');\n        var update = sparklineSkeleton.selectAll('line').data(ticksValues);\n        update\n            .enter()\n            .append('line')\n            .merge(update)\n            .attr('x1', 0)\n            .attr('x2', width)\n            .attr('y1', function (d) { return d; })\n            .attr('y2', function (d) { return d; });\n        sparklineSkeleton\n            .selectAll('line')\n            .classed('shimmer-effect-lines', showShimmerEffect)\n            .classed('empty-state-lines', !showShimmerEffect);\n    };\n    SkeletonLines.prototype.updateBackdropStyle = function () {\n        var svg = this.parent;\n        this.backdrop = DOMUtils.appendOrSelect(svg, 'svg.chart-skeleton.DAII');\n        var backdropRect = DOMUtils.appendOrSelect(this.backdrop, 'rect.chart-skeleton-backdrop');\n        backdropRect.classed('shimmer-effect-lines', false);\n        backdropRect.classed('shimmer-effect-sparkline', true);\n    };\n    return SkeletonLines;\n}(Skeleton));\nexport { SkeletonLines };\n//# sourceMappingURL=../../../src/components/graphs/skeleton-lines.js.map"]},"metadata":{},"sourceType":"module"}