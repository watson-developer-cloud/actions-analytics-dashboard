{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Component } from '../component';\nimport { DOMUtils } from '../../services';\nimport { Tools } from '../../tools';\nimport { Skeletons, CartesianOrientations, Alignments } from '../../interfaces/enums';\nimport * as Configuration from '../../configuration'; // D3 Imports\n\nimport { scaleLinear } from 'd3-scale';\nimport { easeLinear } from 'd3-ease';\nimport { arc } from 'd3-shape';\n\nvar Skeleton =\n/** @class */\nfunction (_super) {\n  __extends(Skeleton, _super);\n\n  function Skeleton() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'skeleton';\n    return _this;\n  }\n\n  Skeleton.prototype.render = function () {\n    var svg = this.parent;\n    var parent = svg.node().parentNode;\n\n    var _a = DOMUtils.getSVGElementSize(parent, {\n      useAttrs: true\n    }),\n        width = _a.width,\n        height = _a.height;\n\n    svg.attr('width', width).attr('height', height);\n    var isDataLoading = Tools.getProperty(this.getOptions(), 'data', 'loading'); // display a skeleton if there is no chart data or the loading flag is set to true\n\n    if (isDataLoading) {\n      this.renderSkeleton(isDataLoading);\n    } else {\n      this.removeSkeleton();\n    }\n  };\n\n  Skeleton.prototype.renderSkeleton = function (showShimmerEffect) {\n    if (this.configs.skeleton === Skeletons.GRID) {\n      this.renderGridSkeleton(showShimmerEffect);\n    } else if (this.configs.skeleton === Skeletons.VERT_OR_HORIZ) {\n      this.renderVertOrHorizSkeleton(showShimmerEffect);\n    } else if (this.configs.skeleton === Skeletons.PIE) {\n      this.renderPieSkeleton(showShimmerEffect);\n    } else if (this.configs.skeleton === Skeletons.DONUT) {\n      this.renderDonutSkeleton(showShimmerEffect);\n    } else {\n      throw new Error(\"\\\"\" + this.configs.skeleton + \"\\\" is not a valid Skeleton type.\");\n    }\n  };\n\n  Skeleton.prototype.renderGridSkeleton = function (showShimmerEffect) {\n    this.setScales();\n    this.drawBackdrop(showShimmerEffect);\n    this.drawXGrid(showShimmerEffect);\n    this.drawYGrid(showShimmerEffect);\n\n    if (showShimmerEffect) {\n      this.setShimmerEffect('shimmer-lines');\n    }\n  };\n\n  Skeleton.prototype.renderVertOrHorizSkeleton = function (showShimmerEffect) {\n    var orientation = this.services.cartesianScales.getOrientation();\n    this.setScales();\n    this.drawBackdrop(showShimmerEffect);\n\n    if (orientation === CartesianOrientations.VERTICAL) {\n      this.drawYGrid(showShimmerEffect);\n    }\n\n    if (orientation === CartesianOrientations.HORIZONTAL) {\n      this.drawXGrid(showShimmerEffect);\n    }\n\n    this.setShimmerEffect('shimmer-lines');\n  };\n\n  Skeleton.prototype.renderPieSkeleton = function (showShimmerEffect) {\n    var outerRadius = this.computeOuterRadius();\n    var innerRadius = 0;\n    this.drawRing(outerRadius, innerRadius, showShimmerEffect);\n\n    if (showShimmerEffect) {\n      this.setShimmerEffect('shimmer-areas');\n    }\n  };\n\n  Skeleton.prototype.renderDonutSkeleton = function (showShimmerEffect) {\n    var outerRadius = this.computeOuterRadius();\n    var innerRadius = this.computeInnerRadius();\n    this.drawRing(outerRadius, innerRadius, showShimmerEffect);\n\n    if (showShimmerEffect) {\n      this.setShimmerEffect('shimmer-areas');\n    }\n  };\n\n  Skeleton.prototype.setScales = function () {\n    var xRange = this.services.cartesianScales.getMainXScale().range();\n    var yRange = this.services.cartesianScales.getMainYScale().range();\n    this.xScale = scaleLinear().domain([0, 1]).range(xRange);\n    this.yScale = scaleLinear().domain([0, 1]).range(yRange);\n  };\n\n  Skeleton.prototype.drawBackdrop = function (showShimmerEffect) {\n    var svg = this.parent;\n    var parent = svg.node().parentNode;\n\n    var _a = DOMUtils.getSVGElementSize(parent, {\n      useAttrs: true\n    }),\n        width = _a.width,\n        height = _a.height;\n\n    this.backdrop = DOMUtils.appendOrSelect(svg, 'svg.chart-skeleton.DAII').attr('width', width).attr('height', height);\n    var backdropRect = DOMUtils.appendOrSelect(this.backdrop, 'rect.chart-skeleton-backdrop');\n    backdropRect.attr('width', '100%').attr('height', '100%');\n\n    var _b = this.xScale.range(),\n        xScaleStart = _b[0],\n        xScaleEnd = _b[1];\n\n    var _c = this.yScale.range(),\n        yScaleEnd = _c[0],\n        yScaleStart = _c[1];\n\n    this.backdrop.merge(backdropRect).attr('x', xScaleStart).attr('y', yScaleStart);\n    backdropRect.classed('shimmer-effect-lines', showShimmerEffect).classed('empty-state-lines', !showShimmerEffect);\n  };\n\n  Skeleton.prototype.drawXGrid = function (showShimmerEffect) {\n    var height = this.backdrop.attr('height');\n    var width = this.backdrop.attr('width');\n    var ticksNumber = Tools.getProperty(this.getOptions(), 'grid', 'x', 'numberOfTicks');\n    var ticksValues = this.xScale.ticks(ticksNumber).map(function (d) {\n      return d * width;\n    });\n    var xGridG = DOMUtils.appendOrSelect(this.backdrop, 'g.x.skeleton');\n    var update = xGridG.selectAll('line').data(ticksValues);\n    update.enter().append('line').merge(update).attr('x1', function (d) {\n      return d;\n    }).attr('x2', function (d) {\n      return d;\n    }).attr('y1', 0).attr('y2', height);\n    xGridG.selectAll('line').classed('shimmer-effect-lines', showShimmerEffect).classed('empty-state-lines', !showShimmerEffect);\n  };\n\n  Skeleton.prototype.drawYGrid = function (showShimmerEffect) {\n    var height = this.backdrop.attr('height');\n    var width = this.backdrop.attr('width');\n    var ticksNumber = Tools.getProperty(this.getOptions(), 'grid', 'y', 'numberOfTicks');\n    var ticksValues = this.xScale.ticks(ticksNumber).map(function (d) {\n      return d * height;\n    });\n    var yGridG = DOMUtils.appendOrSelect(this.backdrop, 'g.y.skeleton');\n    var update = yGridG.selectAll('line').data(ticksValues);\n    update.enter().append('line').merge(update).attr('x1', 0).attr('x2', width).attr('y1', function (d) {\n      return d;\n    }).attr('y2', function (d) {\n      return d;\n    });\n    yGridG.selectAll('line').classed('shimmer-effect-lines', showShimmerEffect).classed('empty-state-lines', !showShimmerEffect);\n  };\n\n  Skeleton.prototype.drawRing = function (outerRadius, innerRadius, shimmer) {\n    if (shimmer === void 0) {\n      shimmer = true;\n    }\n\n    var svg = this.parent;\n\n    var _a = DOMUtils.getSVGElementSize(svg.node().parentNode, {\n      useAttrs: true\n    }),\n        width = _a.width,\n        height = _a.height;\n\n    var container = DOMUtils.appendOrSelect(svg, 'svg.chart-skeleton').attr('width', width).attr('height', height);\n    var optionName = innerRadius === 0 ? 'pie' : 'donut';\n    var alignment = Tools.getProperty(this.getOptions(), optionName, 'alignment');\n    DOMUtils.appendOrSelect(container, 'rect.chart-skeleton-area-container').attr('width', width).attr('height', height).attr('fill', 'none');\n    var arcPathGenerator = arc().innerRadius(innerRadius).outerRadius(outerRadius).startAngle(0).endAngle(Math.PI * 2); // centering circle inside the container\n\n    var tcx = outerRadius + Math.abs(Configuration.pie.radiusOffset);\n    var tcy = outerRadius + (Math.min(width, height) - outerRadius * 2) / 2;\n    var skeletonAreaShape = DOMUtils.appendOrSelect(container, 'path').attr('class', 'skeleton-area-shape').attr('transform', \"translate(\" + tcx + \", \" + tcy + \")\").attr('d', arcPathGenerator).classed('shimmer-effect-areas', shimmer).classed('empty-state-areas', !shimmer); // Position skeleton\n\n    var translateX = outerRadius + Configuration.pie.xOffset;\n\n    if (alignment === Alignments.CENTER) {\n      translateX = width / 2;\n    } else if (alignment === Alignments.RIGHT) {\n      translateX = width - outerRadius - Configuration.pie.xOffset;\n    }\n\n    var translateY = outerRadius + Configuration.pie.yOffset;\n    skeletonAreaShape.attr('transform', \"translate(\" + translateX + \", \" + translateY + \")\");\n  }; // same logic in pie\n\n\n  Skeleton.prototype.computeOuterRadius = function () {\n    var _a = DOMUtils.getSVGElementSize(this.parent.node().parentNode, {\n      useAttrs: true\n    }),\n        width = _a.width,\n        height = _a.height;\n\n    var radius = Math.min(width, height) / 2;\n    return radius + Configuration.pie.radiusOffset;\n  }; // same logic in donut\n\n\n  Skeleton.prototype.computeInnerRadius = function () {\n    return this.computeOuterRadius() * (3 / 4);\n  };\n\n  Skeleton.prototype.setShimmerEffect = function (gradientId) {\n    var animationDuration = 2000; // ms\n\n    var delay = 1000; // ms\n\n    var shimmerWidth = 0.2;\n    var stopBgShimmerClass = 'stop-bg-shimmer';\n    var stopShimmerClass = 'stop-shimmer';\n    var container = this.parent.select('.chart-skeleton');\n    var width = DOMUtils.getSVGElementSize(this.parent, {\n      useAttrs: true\n    }).width;\n    var startPoint = 0;\n    var endPoint = width; // append the defs as first child of container\n\n    var defs = DOMUtils.appendOrSelect(container, 'defs').lower();\n    var linearGradient = DOMUtils.appendOrSelect(defs, 'linearGradient').attr('id', gradientId).attr('x1', startPoint - 3 * shimmerWidth * width).attr('x2', endPoint).attr('y1', 0).attr('y2', 0).attr('gradientUnits', 'userSpaceOnUse').attr('gradientTransform', \"translate(0, 0)\");\n    var stops = \"\\n\\t\\t\\t<stop class=\\\"\" + stopBgShimmerClass + \"\\\" offset=\\\"\" + startPoint + \"\\\"></stop>\\n\\t\\t\\t<stop class=\\\"\" + stopShimmerClass + \"\\\" offset=\\\"\" + (startPoint + shimmerWidth) + \"\\\"></stop>\\n\\t\\t\\t<stop class=\\\"\" + stopBgShimmerClass + \"\\\" offset=\\\"\" + (startPoint + 2 * shimmerWidth) + \"\\\"></stop>\\n\\t\\t\";\n    linearGradient.html(stops);\n    repeat();\n\n    function repeat() {\n      linearGradient.attr('gradientTransform', \"translate(\" + (startPoint - 3 * shimmerWidth * width) + \", 0)\").transition().duration(animationDuration).delay(delay).ease(easeLinear).attr('gradientTransform', \"translate(\" + (endPoint + 3 * shimmerWidth * width) + \", 0)\").on('end', repeat);\n    }\n  };\n\n  Skeleton.prototype.removeSkeleton = function () {\n    var container = this.parent.select('.chart-skeleton');\n    container.remove();\n  };\n\n  return Skeleton;\n}(Component);\n\nexport { Skeleton };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/components/graphs/skeleton.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Component","DOMUtils","Tools","Skeletons","CartesianOrientations","Alignments","Configuration","scaleLinear","easeLinear","arc","Skeleton","_super","_this","apply","arguments","type","render","svg","parent","node","parentNode","_a","getSVGElementSize","useAttrs","width","height","attr","isDataLoading","getProperty","getOptions","renderSkeleton","removeSkeleton","showShimmerEffect","configs","skeleton","GRID","renderGridSkeleton","VERT_OR_HORIZ","renderVertOrHorizSkeleton","PIE","renderPieSkeleton","DONUT","renderDonutSkeleton","Error","setScales","drawBackdrop","drawXGrid","drawYGrid","setShimmerEffect","orientation","services","cartesianScales","getOrientation","VERTICAL","HORIZONTAL","outerRadius","computeOuterRadius","innerRadius","drawRing","computeInnerRadius","xRange","getMainXScale","range","yRange","getMainYScale","xScale","domain","yScale","backdrop","appendOrSelect","backdropRect","_b","xScaleStart","xScaleEnd","_c","yScaleEnd","yScaleStart","merge","classed","ticksNumber","ticksValues","ticks","map","xGridG","update","selectAll","data","enter","append","yGridG","shimmer","container","optionName","alignment","arcPathGenerator","startAngle","endAngle","Math","PI","tcx","abs","pie","radiusOffset","tcy","min","skeletonAreaShape","translateX","xOffset","CENTER","RIGHT","translateY","yOffset","radius","gradientId","animationDuration","delay","shimmerWidth","stopBgShimmerClass","stopShimmerClass","select","startPoint","endPoint","defs","lower","linearGradient","stops","html","repeat","transition","duration","ease","on","remove"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Component } from '../component';\nimport { DOMUtils } from '../../services';\nimport { Tools } from '../../tools';\nimport { Skeletons, CartesianOrientations, Alignments, } from '../../interfaces/enums';\nimport * as Configuration from '../../configuration';\n// D3 Imports\nimport { scaleLinear } from 'd3-scale';\nimport { easeLinear } from 'd3-ease';\nimport { arc } from 'd3-shape';\nvar Skeleton = /** @class */ (function (_super) {\n    __extends(Skeleton, _super);\n    function Skeleton() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'skeleton';\n        return _this;\n    }\n    Skeleton.prototype.render = function () {\n        var svg = this.parent;\n        var parent = svg.node().parentNode;\n        var _a = DOMUtils.getSVGElementSize(parent, {\n            useAttrs: true,\n        }), width = _a.width, height = _a.height;\n        svg.attr('width', width).attr('height', height);\n        var isDataLoading = Tools.getProperty(this.getOptions(), 'data', 'loading');\n        // display a skeleton if there is no chart data or the loading flag is set to true\n        if (isDataLoading) {\n            this.renderSkeleton(isDataLoading);\n        }\n        else {\n            this.removeSkeleton();\n        }\n    };\n    Skeleton.prototype.renderSkeleton = function (showShimmerEffect) {\n        if (this.configs.skeleton === Skeletons.GRID) {\n            this.renderGridSkeleton(showShimmerEffect);\n        }\n        else if (this.configs.skeleton === Skeletons.VERT_OR_HORIZ) {\n            this.renderVertOrHorizSkeleton(showShimmerEffect);\n        }\n        else if (this.configs.skeleton === Skeletons.PIE) {\n            this.renderPieSkeleton(showShimmerEffect);\n        }\n        else if (this.configs.skeleton === Skeletons.DONUT) {\n            this.renderDonutSkeleton(showShimmerEffect);\n        }\n        else {\n            throw new Error(\"\\\"\" + this.configs.skeleton + \"\\\" is not a valid Skeleton type.\");\n        }\n    };\n    Skeleton.prototype.renderGridSkeleton = function (showShimmerEffect) {\n        this.setScales();\n        this.drawBackdrop(showShimmerEffect);\n        this.drawXGrid(showShimmerEffect);\n        this.drawYGrid(showShimmerEffect);\n        if (showShimmerEffect) {\n            this.setShimmerEffect('shimmer-lines');\n        }\n    };\n    Skeleton.prototype.renderVertOrHorizSkeleton = function (showShimmerEffect) {\n        var orientation = this.services.cartesianScales.getOrientation();\n        this.setScales();\n        this.drawBackdrop(showShimmerEffect);\n        if (orientation === CartesianOrientations.VERTICAL) {\n            this.drawYGrid(showShimmerEffect);\n        }\n        if (orientation === CartesianOrientations.HORIZONTAL) {\n            this.drawXGrid(showShimmerEffect);\n        }\n        this.setShimmerEffect('shimmer-lines');\n    };\n    Skeleton.prototype.renderPieSkeleton = function (showShimmerEffect) {\n        var outerRadius = this.computeOuterRadius();\n        var innerRadius = 0;\n        this.drawRing(outerRadius, innerRadius, showShimmerEffect);\n        if (showShimmerEffect) {\n            this.setShimmerEffect('shimmer-areas');\n        }\n    };\n    Skeleton.prototype.renderDonutSkeleton = function (showShimmerEffect) {\n        var outerRadius = this.computeOuterRadius();\n        var innerRadius = this.computeInnerRadius();\n        this.drawRing(outerRadius, innerRadius, showShimmerEffect);\n        if (showShimmerEffect) {\n            this.setShimmerEffect('shimmer-areas');\n        }\n    };\n    Skeleton.prototype.setScales = function () {\n        var xRange = this.services.cartesianScales.getMainXScale().range();\n        var yRange = this.services.cartesianScales.getMainYScale().range();\n        this.xScale = scaleLinear().domain([0, 1]).range(xRange);\n        this.yScale = scaleLinear().domain([0, 1]).range(yRange);\n    };\n    Skeleton.prototype.drawBackdrop = function (showShimmerEffect) {\n        var svg = this.parent;\n        var parent = svg.node().parentNode;\n        var _a = DOMUtils.getSVGElementSize(parent, {\n            useAttrs: true,\n        }), width = _a.width, height = _a.height;\n        this.backdrop = DOMUtils.appendOrSelect(svg, 'svg.chart-skeleton.DAII')\n            .attr('width', width)\n            .attr('height', height);\n        var backdropRect = DOMUtils.appendOrSelect(this.backdrop, 'rect.chart-skeleton-backdrop');\n        backdropRect.attr('width', '100%').attr('height', '100%');\n        var _b = this.xScale.range(), xScaleStart = _b[0], xScaleEnd = _b[1];\n        var _c = this.yScale.range(), yScaleEnd = _c[0], yScaleStart = _c[1];\n        this.backdrop\n            .merge(backdropRect)\n            .attr('x', xScaleStart)\n            .attr('y', yScaleStart);\n        backdropRect\n            .classed('shimmer-effect-lines', showShimmerEffect)\n            .classed('empty-state-lines', !showShimmerEffect);\n    };\n    Skeleton.prototype.drawXGrid = function (showShimmerEffect) {\n        var height = this.backdrop.attr('height');\n        var width = this.backdrop.attr('width');\n        var ticksNumber = Tools.getProperty(this.getOptions(), 'grid', 'x', 'numberOfTicks');\n        var ticksValues = this.xScale\n            .ticks(ticksNumber)\n            .map(function (d) { return d * width; });\n        var xGridG = DOMUtils.appendOrSelect(this.backdrop, 'g.x.skeleton');\n        var update = xGridG.selectAll('line').data(ticksValues);\n        update\n            .enter()\n            .append('line')\n            .merge(update)\n            .attr('x1', function (d) { return d; })\n            .attr('x2', function (d) { return d; })\n            .attr('y1', 0)\n            .attr('y2', height);\n        xGridG\n            .selectAll('line')\n            .classed('shimmer-effect-lines', showShimmerEffect)\n            .classed('empty-state-lines', !showShimmerEffect);\n    };\n    Skeleton.prototype.drawYGrid = function (showShimmerEffect) {\n        var height = this.backdrop.attr('height');\n        var width = this.backdrop.attr('width');\n        var ticksNumber = Tools.getProperty(this.getOptions(), 'grid', 'y', 'numberOfTicks');\n        var ticksValues = this.xScale\n            .ticks(ticksNumber)\n            .map(function (d) { return d * height; });\n        var yGridG = DOMUtils.appendOrSelect(this.backdrop, 'g.y.skeleton');\n        var update = yGridG.selectAll('line').data(ticksValues);\n        update\n            .enter()\n            .append('line')\n            .merge(update)\n            .attr('x1', 0)\n            .attr('x2', width)\n            .attr('y1', function (d) { return d; })\n            .attr('y2', function (d) { return d; });\n        yGridG\n            .selectAll('line')\n            .classed('shimmer-effect-lines', showShimmerEffect)\n            .classed('empty-state-lines', !showShimmerEffect);\n    };\n    Skeleton.prototype.drawRing = function (outerRadius, innerRadius, shimmer) {\n        if (shimmer === void 0) { shimmer = true; }\n        var svg = this.parent;\n        var _a = DOMUtils.getSVGElementSize(svg.node().parentNode, { useAttrs: true }), width = _a.width, height = _a.height;\n        var container = DOMUtils.appendOrSelect(svg, 'svg.chart-skeleton')\n            .attr('width', width)\n            .attr('height', height);\n        var optionName = innerRadius === 0 ? 'pie' : 'donut';\n        var alignment = Tools.getProperty(this.getOptions(), optionName, 'alignment');\n        DOMUtils.appendOrSelect(container, 'rect.chart-skeleton-area-container')\n            .attr('width', width)\n            .attr('height', height)\n            .attr('fill', 'none');\n        var arcPathGenerator = arc()\n            .innerRadius(innerRadius)\n            .outerRadius(outerRadius)\n            .startAngle(0)\n            .endAngle(Math.PI * 2);\n        // centering circle inside the container\n        var tcx = outerRadius + Math.abs(Configuration.pie.radiusOffset);\n        var tcy = outerRadius + (Math.min(width, height) - outerRadius * 2) / 2;\n        var skeletonAreaShape = DOMUtils.appendOrSelect(container, 'path')\n            .attr('class', 'skeleton-area-shape')\n            .attr('transform', \"translate(\" + tcx + \", \" + tcy + \")\")\n            .attr('d', arcPathGenerator)\n            .classed('shimmer-effect-areas', shimmer)\n            .classed('empty-state-areas', !shimmer);\n        // Position skeleton\n        var translateX = outerRadius + Configuration.pie.xOffset;\n        if (alignment === Alignments.CENTER) {\n            translateX = width / 2;\n        }\n        else if (alignment === Alignments.RIGHT) {\n            translateX = width - outerRadius - Configuration.pie.xOffset;\n        }\n        var translateY = outerRadius + Configuration.pie.yOffset;\n        skeletonAreaShape.attr('transform', \"translate(\" + translateX + \", \" + translateY + \")\");\n    };\n    // same logic in pie\n    Skeleton.prototype.computeOuterRadius = function () {\n        var _a = DOMUtils.getSVGElementSize(this.parent.node().parentNode, { useAttrs: true }), width = _a.width, height = _a.height;\n        var radius = Math.min(width, height) / 2;\n        return radius + Configuration.pie.radiusOffset;\n    };\n    // same logic in donut\n    Skeleton.prototype.computeInnerRadius = function () {\n        return this.computeOuterRadius() * (3 / 4);\n    };\n    Skeleton.prototype.setShimmerEffect = function (gradientId) {\n        var animationDuration = 2000; // ms\n        var delay = 1000; // ms\n        var shimmerWidth = 0.2;\n        var stopBgShimmerClass = 'stop-bg-shimmer';\n        var stopShimmerClass = 'stop-shimmer';\n        var container = this.parent.select('.chart-skeleton');\n        var width = DOMUtils.getSVGElementSize(this.parent, {\n            useAttrs: true,\n        }).width;\n        var startPoint = 0;\n        var endPoint = width;\n        // append the defs as first child of container\n        var defs = DOMUtils.appendOrSelect(container, 'defs').lower();\n        var linearGradient = DOMUtils.appendOrSelect(defs, 'linearGradient')\n            .attr('id', gradientId)\n            .attr('x1', startPoint - 3 * shimmerWidth * width)\n            .attr('x2', endPoint)\n            .attr('y1', 0)\n            .attr('y2', 0)\n            .attr('gradientUnits', 'userSpaceOnUse')\n            .attr('gradientTransform', \"translate(0, 0)\");\n        var stops = \"\\n\\t\\t\\t<stop class=\\\"\" + stopBgShimmerClass + \"\\\" offset=\\\"\" + startPoint + \"\\\"></stop>\\n\\t\\t\\t<stop class=\\\"\" + stopShimmerClass + \"\\\" offset=\\\"\" + (startPoint + shimmerWidth) + \"\\\"></stop>\\n\\t\\t\\t<stop class=\\\"\" + stopBgShimmerClass + \"\\\" offset=\\\"\" + (startPoint + 2 * shimmerWidth) + \"\\\"></stop>\\n\\t\\t\";\n        linearGradient.html(stops);\n        repeat();\n        function repeat() {\n            linearGradient\n                .attr('gradientTransform', \"translate(\" + (startPoint - 3 * shimmerWidth * width) + \", 0)\")\n                .transition()\n                .duration(animationDuration)\n                .delay(delay)\n                .ease(easeLinear)\n                .attr('gradientTransform', \"translate(\" + (endPoint + 3 * shimmerWidth * width) + \", 0)\")\n                .on('end', repeat);\n        }\n    };\n    Skeleton.prototype.removeSkeleton = function () {\n        var container = this.parent.select('.chart-skeleton');\n        container.remove();\n    };\n    return Skeleton;\n}(Component));\nexport { Skeleton };\n//# sourceMappingURL=../../../src/components/graphs/skeleton.js.map"]},"metadata":{},"sourceType":"module"}