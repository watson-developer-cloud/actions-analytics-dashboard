{"ast":null,"code":"import _classCallCheck from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/components/Graph/Graph.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { LineChart } from \"@carbon/charts-react\";\nimport './graph.scss';\nimport moment from 'moment';\n\nvar Graph = /*#__PURE__*/function (_React$Component) {\n  _inherits(Graph, _React$Component);\n\n  var _super = _createSuper(Graph);\n\n  function Graph(props) {\n    _classCallCheck(this, Graph);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Graph, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"graph-panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"panel-title\",\n        style: {\n          marginBottom: \"16px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      }, this.props.type + \" over time\", \" \"), /*#__PURE__*/React.createElement(LineChart, {\n        style: {\n          height: \"400px\"\n        },\n        data: this.props.data,\n        options: this.props.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Graph;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownState) {\n  var props = {\n    type: ownState.type,\n    data: [],\n    options: {\n      axes: {\n        bottom: {\n          title: \"Loading\",\n          mapsTo: \"date\",\n          scaleType: \"time\"\n        },\n        left: {\n          mapsTo: \"value\",\n          title: \"Loading\",\n          scaleType: \"linear\"\n        }\n      },\n      data: {\n        loading: true\n      },\n      height: \"400px\"\n    }\n  };\n\n  if (state.statsLoaded) {\n    var leftAxis = props.type == \"Engagment\" ? {\n      title: \"volume\",\n      mapsTo: \"value\",\n      scaleType: \"linear\"\n    } : {\n      title: props.type,\n      mapsTo: \"value\",\n      scaleType: \"linear\"\n    };\n    props.options = {\n      axes: {\n        bottom: {\n          title: \"Date\",\n          mapsTo: \"date\",\n          scaleType: \"time\"\n        },\n        left: leftAxis\n      },\n      height: \"400px\"\n    };\n  }\n\n  return props;\n};\n\nexport default connect(mapStateToProps)(Graph);","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/components/Graph/Graph.js"],"names":["React","connect","LineChart","moment","Graph","props","marginBottom","type","height","data","options","Component","mapStateToProps","state","ownState","axes","bottom","title","mapsTo","scaleType","left","loading","statsLoaded","leftAxis"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AAEA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACTA,KADS;AAGlB;;;;6BAES;AACR,0BAAO;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACG;AAAG,QAAA,SAAS,EAAC,aAAb;AAA2B,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8D,KAAKD,KAAL,CAAWE,IAAX,GAAkB,YAAhF,MADH,eAEG,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAlB;AACI,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,IADrB;AAEI,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK,OAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFH,CAAP;AAQD;;;;EAfeV,KAAK,CAACW,S;;AAkB1B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,MAAIT,KAAK,GAAG;AACRE,IAAAA,IAAI,EAAEO,QAAQ,CAACP,IADP;AAERE,IAAAA,IAAI,EAAE,EAFE;AAGRC,IAAAA,OAAO,EAAE;AACPK,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,SADD;AAENC,UAAAA,MAAM,EAAE,MAFF;AAGNC,UAAAA,SAAS,EAAE;AAHL,SADN;AAMFC,QAAAA,IAAI,EAAE;AACJF,UAAAA,MAAM,EAAE,OADJ;AAEJD,UAAAA,KAAK,EAAE,SAFH;AAGJE,UAAAA,SAAS,EAAE;AAHP;AANJ,OADC;AAaPV,MAAAA,IAAI,EAAE;AACFY,QAAAA,OAAO,EAAE;AADP,OAbC;AAgBPb,MAAAA,MAAM,EAAE;AAhBD;AAHD,GAAZ;;AAuBA,MAAIK,KAAK,CAACS,WAAV,EAAuB;AACnB,QAAIC,QAAQ,GAAGlB,KAAK,CAACE,IAAN,IAAc,WAAd,GACT;AACIU,MAAAA,KAAK,EAAE,QADX;AAEIC,MAAAA,MAAM,EAAE,OAFZ;AAGIC,MAAAA,SAAS,EAAE;AAHf,KADS,GAMT;AACIF,MAAAA,KAAK,EAAEZ,KAAK,CAACE,IADjB;AAEIW,MAAAA,MAAM,EAAE,OAFZ;AAGIC,MAAAA,SAAS,EAAE;AAHf,KANN;AAYAd,IAAAA,KAAK,CAACK,OAAN,GAAgB;AACdK,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAE,MADH;AAEJC,UAAAA,MAAM,EAAE,MAFJ;AAGJC,UAAAA,SAAS,EAAE;AAHP,SADN;AAMFC,QAAAA,IAAI,EAAEG;AANJ,OADQ;AASdf,MAAAA,MAAM,EAAE;AATM,KAAhB;AAYH;;AAED,SAAOH,KAAP;AACD,CApDD;;AAsDA,eAAeJ,OAAO,CAACW,eAAD,CAAP,CAAyBR,KAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { LineChart } from \"@carbon/charts-react\";\n\nimport './graph.scss';\nimport moment from 'moment';\n\nclass Graph extends React.Component {\n    constructor(props) {\n        super(props)\n\n    }\n\n    render () {\n      return <div className=\"graph-panel\">\n                <p className=\"panel-title\" style={{ marginBottom: \"16px\" }}>{ this.props.type + \" over time\" } </p>\n                <LineChart style={{ height: \"400px\" }}\n                    data={this.props.data}\n                    options={this.props.options}>\n\t\t        </LineChart>\n            </div>\n\n    }\n}\n\nconst mapStateToProps = (state, ownState) => {\n  let props = {\n      type: ownState.type,\n      data: [],\n      options: {\n        axes: {\n            bottom: {\n              title: \"Loading\",\n              mapsTo: \"date\",\n              scaleType: \"time\"\n            },\n            left: {\n              mapsTo: \"value\",\n              title: \"Loading\",\n              scaleType: \"linear\"\n            }\n          },\n        data: {\n            loading: true,\n        },\n        height: \"400px\"\n      }\n  }\n\n  if (state.statsLoaded) {\n      let leftAxis = props.type == \"Engagment\" ?\n            {\n                title: \"volume\",\n                mapsTo: \"value\",\n                scaleType: \"linear\"\n            } :\n            {\n                title: props.type,\n                mapsTo: \"value\",\n                scaleType: \"linear\"\n            }\n\n      props.options = {\n        axes: {\n            bottom: {\n                title: \"Date\",\n                mapsTo: \"date\",\n                scaleType: \"time\"\n            },\n            left: leftAxis\n        },\n        height: \"400px\"\n    }\n\n  }\n\n  return props\n}\n\nexport default connect(mapStateToProps)(Graph)"]},"metadata":{},"sourceType":"module"}