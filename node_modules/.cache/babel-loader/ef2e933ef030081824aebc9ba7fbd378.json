{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nvar _a; // Internal Imports\n\n\nimport { AxisChart } from '../axis-chart';\nimport * as Configuration from '../configuration';\nimport { ChartTypes, Skeletons } from '../interfaces/index';\nimport { Tools } from '../tools'; // Components\n\nimport { Grid, GroupedBar, SimpleBar, StackedBar, Line, TwoDimensionalAxes, ZeroLine, Scatter, StackedScatter, Area, StackedArea, Ruler, StackedRuler, Skeleton } from '../components/index';\nvar graphComponentsMap = (_a = {}, _a[ChartTypes.LINE] = [Line, Scatter], _a[ChartTypes.SCATTER] = [Scatter], _a[ChartTypes.AREA] = [Area, Line, Scatter], _a[ChartTypes.STACKED_AREA] = [StackedArea, Line, StackedScatter, StackedRuler], _a[ChartTypes.SIMPLE_BAR] = [SimpleBar], _a[ChartTypes.GROUPED_BAR] = [GroupedBar, ZeroLine], _a[ChartTypes.STACKED_BAR] = [StackedBar, StackedRuler], _a);\n\nvar ComboChart =\n/** @class */\nfunction (_super) {\n  __extends(ComboChart, _super);\n\n  function ComboChart(holder, chartConfigs) {\n    var _this = _super.call(this, holder, chartConfigs) || this; // Merge the default options for this chart\n    // With the user provided options\n\n\n    var chartOptions = Tools.mergeDefaultChartOptions(Configuration.options.comboChart, chartConfigs.options); // Warn user if no comboChartTypes defined\n    // Use skeleton chart instead\n\n    if (!chartConfigs.options.comboChartTypes) {\n      console.error('No comboChartTypes defined for the Combo Chart!'); // add a default chart to get an empty chart\n\n      chartOptions.comboChartTypes = [{\n        type: ChartTypes.LINE,\n        correspondingDatasets: []\n      }];\n    } // set the global options\n\n\n    _this.model.setOptions(chartOptions); // Initialize data, services, components etc.\n\n\n    _this.init(holder, chartConfigs);\n\n    return _this;\n  }\n\n  ComboChart.prototype.getGraphComponents = function () {\n    var _this = this;\n\n    var comboChartTypes = this.model.getOptions().comboChartTypes;\n    var counter = 0;\n    var graphComponents = comboChartTypes.map(function (graph) {\n      var type = graph.type;\n      var options; // initializes the components using input strings with the base configs for each chart\n\n      if (typeof graph.type === 'string') {\n        // check if it is in the components map\n        // if it isn't then it is not a valid carbon chart to use in combo\n        if (!Object.keys(graphComponentsMap).includes(graph.type)) {\n          console.error(\"Invalid chart type \\\"\" + graph.type + \"\\\" specified for combo chart. Please refer to the ComboChart tutorial for more guidance.\");\n          return null;\n        }\n\n        var stacked_1;\n        options = Tools.merge({}, Configuration.options[Tools.camelCase(graph.type) + \"Chart\"], _this.model.getOptions(), graph.options); // if we are creating a stacked area, the contained Line chart needs to know it is stacked\n\n        if (graph.type === ChartTypes.STACKED_AREA) {\n          stacked_1 = true;\n        }\n\n        return graphComponentsMap[graph.type].map(function (Component, i) {\n          return new Component(_this.model, _this.services, {\n            groups: graph.correspondingDatasets,\n            id: counter++,\n            options: options,\n            stacked: stacked_1\n          });\n        });\n      } else {\n        // user has imported a type or custom component to instantiate\n        options = Tools.merge({}, _this.model.getOptions(), graph.options);\n        return new type(_this.model, _this.services, {\n          groups: graph.correspondingDatasets,\n          id: counter++,\n          options: options\n        });\n      }\n    }).filter(function (item) {\n      return item !== null;\n    });\n    return Tools.flatten(graphComponents);\n  };\n\n  ComboChart.prototype.getComponents = function () {\n    var comboChartTypes = this.model.getOptions().comboChartTypes; // don't add the regular ruler if stacked ruler is added\n\n    var stackedRulerEnabled = comboChartTypes.some(function (chartObject) {\n      return chartObject.type === ChartTypes.STACKED_BAR || chartObject.type === ChartTypes.STACKED_AREA;\n    }); // Specify what to render inside the graph-frame\n\n    var graphFrameComponents = __spreadArrays([new TwoDimensionalAxes(this.model, this.services), new Grid(this.model, this.services), new Skeleton(this.model, this.services, {\n      skeleton: Skeletons.GRID\n    })], stackedRulerEnabled ? [] : [new Ruler(this.model, this.services)], this.getGraphComponents());\n\n    var components = this.getAxisChartComponents(graphFrameComponents);\n    return components;\n  };\n\n  return ComboChart;\n}(AxisChart);\n\nexport { ComboChart };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/charts/combo.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__spreadArrays","s","i","il","arguments","length","r","k","a","j","jl","_a","AxisChart","Configuration","ChartTypes","Skeletons","Tools","Grid","GroupedBar","SimpleBar","StackedBar","Line","TwoDimensionalAxes","ZeroLine","Scatter","StackedScatter","Area","StackedArea","Ruler","StackedRuler","Skeleton","graphComponentsMap","LINE","SCATTER","AREA","STACKED_AREA","SIMPLE_BAR","GROUPED_BAR","STACKED_BAR","ComboChart","_super","holder","chartConfigs","_this","call","chartOptions","mergeDefaultChartOptions","options","comboChart","comboChartTypes","console","error","type","correspondingDatasets","model","setOptions","init","getGraphComponents","getOptions","counter","graphComponents","map","graph","keys","includes","stacked_1","merge","camelCase","Component","services","groups","id","stacked","filter","item","flatten","getComponents","stackedRulerEnabled","some","chartObject","graphFrameComponents","skeleton","GRID","components","getAxisChartComponents"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar _a;\n// Internal Imports\nimport { AxisChart } from '../axis-chart';\nimport * as Configuration from '../configuration';\nimport { ChartTypes, Skeletons, } from '../interfaces/index';\nimport { Tools } from '../tools';\n// Components\nimport { Grid, GroupedBar, SimpleBar, StackedBar, Line, TwoDimensionalAxes, ZeroLine, Scatter, StackedScatter, Area, StackedArea, Ruler, StackedRuler, Skeleton, } from '../components/index';\nvar graphComponentsMap = (_a = {},\n    _a[ChartTypes.LINE] = [Line, Scatter],\n    _a[ChartTypes.SCATTER] = [Scatter],\n    _a[ChartTypes.AREA] = [Area, Line, Scatter],\n    _a[ChartTypes.STACKED_AREA] = [\n        StackedArea,\n        Line,\n        StackedScatter,\n        StackedRuler,\n    ],\n    _a[ChartTypes.SIMPLE_BAR] = [SimpleBar],\n    _a[ChartTypes.GROUPED_BAR] = [GroupedBar, ZeroLine],\n    _a[ChartTypes.STACKED_BAR] = [StackedBar, StackedRuler],\n    _a);\nvar ComboChart = /** @class */ (function (_super) {\n    __extends(ComboChart, _super);\n    function ComboChart(holder, chartConfigs) {\n        var _this = _super.call(this, holder, chartConfigs) || this;\n        // Merge the default options for this chart\n        // With the user provided options\n        var chartOptions = Tools.mergeDefaultChartOptions(Configuration.options.comboChart, chartConfigs.options);\n        // Warn user if no comboChartTypes defined\n        // Use skeleton chart instead\n        if (!chartConfigs.options.comboChartTypes) {\n            console.error('No comboChartTypes defined for the Combo Chart!');\n            // add a default chart to get an empty chart\n            chartOptions.comboChartTypes = [\n                { type: ChartTypes.LINE, correspondingDatasets: [] },\n            ];\n        }\n        // set the global options\n        _this.model.setOptions(chartOptions);\n        // Initialize data, services, components etc.\n        _this.init(holder, chartConfigs);\n        return _this;\n    }\n    ComboChart.prototype.getGraphComponents = function () {\n        var _this = this;\n        var comboChartTypes = this.model.getOptions().comboChartTypes;\n        var counter = 0;\n        var graphComponents = comboChartTypes\n            .map(function (graph) {\n            var type = graph.type;\n            var options;\n            // initializes the components using input strings with the base configs for each chart\n            if (typeof graph.type === 'string') {\n                // check if it is in the components map\n                // if it isn't then it is not a valid carbon chart to use in combo\n                if (!Object.keys(graphComponentsMap).includes(graph.type)) {\n                    console.error(\"Invalid chart type \\\"\" + graph.type + \"\\\" specified for combo chart. Please refer to the ComboChart tutorial for more guidance.\");\n                    return null;\n                }\n                var stacked_1;\n                options = Tools.merge({}, Configuration.options[Tools.camelCase(graph.type) + \"Chart\"], _this.model.getOptions(), graph.options);\n                // if we are creating a stacked area, the contained Line chart needs to know it is stacked\n                if (graph.type === ChartTypes.STACKED_AREA) {\n                    stacked_1 = true;\n                }\n                return graphComponentsMap[graph.type].map(function (Component, i) {\n                    return new Component(_this.model, _this.services, {\n                        groups: graph.correspondingDatasets,\n                        id: counter++,\n                        options: options,\n                        stacked: stacked_1,\n                    });\n                });\n            }\n            else {\n                // user has imported a type or custom component to instantiate\n                options = Tools.merge({}, _this.model.getOptions(), graph.options);\n                return new type(_this.model, _this.services, {\n                    groups: graph.correspondingDatasets,\n                    id: counter++,\n                    options: options,\n                });\n            }\n        })\n            .filter(function (item) { return item !== null; });\n        return Tools.flatten(graphComponents);\n    };\n    ComboChart.prototype.getComponents = function () {\n        var comboChartTypes = this.model.getOptions().comboChartTypes;\n        // don't add the regular ruler if stacked ruler is added\n        var stackedRulerEnabled = comboChartTypes.some(function (chartObject) {\n            return chartObject.type === ChartTypes.STACKED_BAR ||\n                chartObject.type === ChartTypes.STACKED_AREA;\n        });\n        // Specify what to render inside the graph-frame\n        var graphFrameComponents = __spreadArrays([\n            new TwoDimensionalAxes(this.model, this.services),\n            new Grid(this.model, this.services),\n            new Skeleton(this.model, this.services, {\n                skeleton: Skeletons.GRID,\n            })\n        ], (stackedRulerEnabled\n            ? []\n            : [new Ruler(this.model, this.services)]), this.getGraphComponents());\n        var components = this.getAxisChartComponents(graphFrameComponents);\n        return components;\n    };\n    return ComboChart;\n}(AxisChart));\nexport { ComboChart };\n//# sourceMappingURL=../../src/charts/combo.js.map"]},"metadata":{},"sourceType":"module"}