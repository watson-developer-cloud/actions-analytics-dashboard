{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Component } from '../component';\nimport { DOMUtils } from '../../services'; // This class is used to create the clipPath to clip the chart components\n// It's necessary for zoom in/out behavior\n\nvar ChartClip =\n/** @class */\nfunction (_super) {\n  __extends(ChartClip, _super);\n\n  function ChartClip(model, services, configs) {\n    var _this = _super.call(this, model, services, configs) || this;\n\n    _this.type = 'chart-clip'; // Give every chart-clip a distinct ID\n    // so they don't interfere each other in a page with multiple charts\n\n    _this.chartClipId = 'chart-clip-id-' + Math.floor(Math.random() * 99999999999);\n\n    _this.init();\n\n    return _this;\n  }\n\n  ChartClip.prototype.init = function () {\n    // set unique chartClipId in this chart to model\n    this.model.set({\n      chartClipId: this.chartClipId\n    }, {\n      skipUpdate: true\n    });\n  };\n\n  ChartClip.prototype.render = function (animate) {\n    if (animate === void 0) {\n      animate = true;\n    } // Create the clipPath\n\n\n    this.createClipPath();\n  };\n\n  ChartClip.prototype.createClipPath = function () {\n    var svg = this.parent;\n    var cartesianScales = this.services.cartesianScales;\n    var mainXScale = cartesianScales.getMainXScale();\n    var mainYScale = cartesianScales.getMainYScale();\n\n    var _a = mainXScale.range(),\n        xScaleStart = _a[0],\n        xScaleEnd = _a[1];\n\n    var _b = mainYScale.range(),\n        yScaleEnd = _b[0],\n        yScaleStart = _b[1]; // Get height\n\n\n    this.chartClipPath = DOMUtils.appendOrSelect(svg, \"clipPath.\" + this.type).attr('id', this.chartClipId);\n    var clipRect = DOMUtils.appendOrSelect(this.chartClipPath, \"rect.\" + this.type);\n    clipRect.attr('x', xScaleStart).attr('y', yScaleStart).attr('width', xScaleEnd - xScaleStart).attr('height', yScaleEnd - yScaleStart);\n    this.chartClipPath.merge(clipRect).lower();\n  };\n\n  return ChartClip;\n}(Component);\n\nexport { ChartClip };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/components/axes/chart-clip.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Component","DOMUtils","ChartClip","_super","model","services","configs","_this","call","type","chartClipId","Math","floor","random","init","set","skipUpdate","render","animate","createClipPath","svg","parent","cartesianScales","mainXScale","getMainXScale","mainYScale","getMainYScale","_a","range","xScaleStart","xScaleEnd","_b","yScaleEnd","yScaleStart","chartClipPath","appendOrSelect","attr","clipRect","merge","lower"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Component } from '../component';\nimport { DOMUtils } from '../../services';\n// This class is used to create the clipPath to clip the chart components\n// It's necessary for zoom in/out behavior\nvar ChartClip = /** @class */ (function (_super) {\n    __extends(ChartClip, _super);\n    function ChartClip(model, services, configs) {\n        var _this = _super.call(this, model, services, configs) || this;\n        _this.type = 'chart-clip';\n        // Give every chart-clip a distinct ID\n        // so they don't interfere each other in a page with multiple charts\n        _this.chartClipId = 'chart-clip-id-' + Math.floor(Math.random() * 99999999999);\n        _this.init();\n        return _this;\n    }\n    ChartClip.prototype.init = function () {\n        // set unique chartClipId in this chart to model\n        this.model.set({ chartClipId: this.chartClipId }, { skipUpdate: true });\n    };\n    ChartClip.prototype.render = function (animate) {\n        if (animate === void 0) { animate = true; }\n        // Create the clipPath\n        this.createClipPath();\n    };\n    ChartClip.prototype.createClipPath = function () {\n        var svg = this.parent;\n        var cartesianScales = this.services.cartesianScales;\n        var mainXScale = cartesianScales.getMainXScale();\n        var mainYScale = cartesianScales.getMainYScale();\n        var _a = mainXScale.range(), xScaleStart = _a[0], xScaleEnd = _a[1];\n        var _b = mainYScale.range(), yScaleEnd = _b[0], yScaleStart = _b[1];\n        // Get height\n        this.chartClipPath = DOMUtils.appendOrSelect(svg, \"clipPath.\" + this.type).attr('id', this.chartClipId);\n        var clipRect = DOMUtils.appendOrSelect(this.chartClipPath, \"rect.\" + this.type);\n        clipRect\n            .attr('x', xScaleStart)\n            .attr('y', yScaleStart)\n            .attr('width', xScaleEnd - xScaleStart)\n            .attr('height', yScaleEnd - yScaleStart);\n        this.chartClipPath.merge(clipRect).lower();\n    };\n    return ChartClip;\n}(Component));\nexport { ChartClip };\n//# sourceMappingURL=../../../src/components/axes/chart-clip.js.map"]},"metadata":{},"sourceType":"module"}