{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Component } from '../component';\nimport { AxisPositions, Events, ScaleTypes, Roles, TruncationTypes } from '../../interfaces';\nimport { Tools } from '../../tools';\nimport { DOMUtils } from '../../services';\nimport { AxisTitleOrientations, TickRotations } from '../../interfaces/enums';\nimport * as Configuration from '../../configuration';\nimport { computeTimeIntervalName, formatTick, isTickPrimary } from '../../services/time-series'; // D3 Imports\n\nimport { select } from 'd3-selection';\nimport { axisBottom, axisLeft, axisRight, axisTop } from 'd3-axis';\n\nvar Axis =\n/** @class */\nfunction (_super) {\n  __extends(Axis, _super);\n\n  function Axis(model, services, configs) {\n    var _this = _super.call(this, model, services, configs) || this;\n\n    _this.type = 'axes';\n\n    if (configs) {\n      _this.configs = configs;\n    }\n\n    _this.margins = _this.configs.margins;\n    return _this;\n  }\n\n  Axis.prototype.render = function (animate) {\n    if (animate === void 0) {\n      animate = true;\n    }\n\n    var axisPosition = this.configs.position;\n    var options = this.getOptions();\n    var isAxisVisible = Tools.getProperty(options, 'axes', axisPosition, 'visible');\n    var svg = this.getContainerSVG();\n\n    var _a = DOMUtils.getSVGElementSize(this.parent, {\n      useAttrs: true\n    }),\n        width = _a.width,\n        height = _a.height; // Add axis into the parent\n\n\n    var container = DOMUtils.appendOrSelect(svg, \"g.axis.\" + axisPosition);\n    var startPosition, endPosition;\n\n    if (axisPosition === AxisPositions.BOTTOM || axisPosition === AxisPositions.TOP) {\n      startPosition = this.configs.axes[AxisPositions.LEFT] ? this.margins.left : 0;\n      endPosition = this.configs.axes[AxisPositions.RIGHT] ? width - this.margins.right : width;\n    } else {\n      startPosition = height - this.margins.bottom;\n      endPosition = this.margins.top;\n    } // Grab the scale off of the Scales service\n\n\n    var scale = this.services.cartesianScales.getScaleByPosition(axisPosition);\n\n    if (this.scaleType === ScaleTypes.LABELS || this.scaleType === ScaleTypes.LABELS_RATIO) {\n      scale.rangeRound([startPosition, endPosition]);\n    } else {\n      scale.range([startPosition, endPosition]);\n    } // Identify the corresponding d3 axis function\n\n\n    var axisFunction;\n\n    switch (axisPosition) {\n      case AxisPositions.LEFT:\n        axisFunction = axisLeft;\n        break;\n\n      case AxisPositions.BOTTOM:\n        axisFunction = axisBottom;\n        break;\n\n      case AxisPositions.RIGHT:\n        axisFunction = axisRight;\n        break;\n\n      case AxisPositions.TOP:\n        axisFunction = axisTop;\n        break;\n    }\n\n    container.attr('aria-label', axisPosition + \" axis\");\n    var axisRefExists = !container.select(\"g.ticks\").empty();\n    var axisRef = DOMUtils.appendOrSelect(container, \"g.ticks\");\n\n    if (!axisRefExists) {\n      axisRef.attr('role', Roles.GRAPHICS_OBJECT + \" \" + Roles.GROUP);\n      axisRef.attr('aria-label', axisPosition + \" ticks\");\n    } // We draw the invisible axis because of the async nature of d3 transitions\n    // To be able to tell the final width & height of the axis when initiaing the transition\n    // The invisible axis is updated instantly and without a transition\n\n\n    var invisibleAxisRef = DOMUtils.appendOrSelect(container, \"g.ticks.invisible\").style('opacity', '0').style('pointer-events', 'none').attr('aria-hidden', true).attr('aria-label', \"invisible \" + axisPosition + \" ticks\");\n    var axisOptions = Tools.getProperty(options, 'axes', axisPosition);\n    var isTimeScaleType = this.scaleType === ScaleTypes.TIME || axisOptions.scaleType === ScaleTypes.TIME;\n    var isVerticalAxis = axisPosition === AxisPositions.LEFT || axisPosition === AxisPositions.RIGHT; // if zoomDomain is available, scale type is time, and axis position isBOTTOM or TOP\n    // update scale domain to zoomDomain.\n\n    var zoomDomain = this.model.get('zoomDomain');\n\n    if (zoomDomain && isTimeScaleType && !isVerticalAxis) {\n      scale.domain(zoomDomain);\n    }\n\n    if (!isAxisVisible) {\n      axisRef.attr('aria-hidden', true);\n      return;\n    }\n\n    var axisScaleType = Tools.getProperty(axisOptions, 'scaleType');\n    var isDataLoading = Tools.getProperty(options, 'data', 'loading');\n    var numberOfTicksProvided = Tools.getProperty(axisOptions, 'ticks', 'number'); // user can provide custom ticks to be displayed\n    // ticks need to be in the domain of the axis data\n\n    var userProvidedTickValues = Tools.getProperty(axisOptions, 'ticks', 'values'); // get user provided custom values for truncation\n\n    var truncationType = Tools.getProperty(axisOptions, 'truncation', 'type');\n    var truncationThreshold = Tools.getProperty(axisOptions, 'truncation', 'threshold');\n    var truncationNumCharacter = Tools.getProperty(axisOptions, 'truncation', 'numCharacter');\n    var isNumberOfTicksProvided = numberOfTicksProvided !== null;\n    var timeScaleOptions = Tools.getProperty(options, 'timeScale'); // Append to DOM a fake tick to get the right computed font height\n\n    var fakeTick = DOMUtils.appendOrSelect(invisibleAxisRef, \"g.tick\");\n    var fakeTickText = DOMUtils.appendOrSelect(fakeTick, \"text\").text('0');\n    var tickHeight = DOMUtils.getSVGElementSize(fakeTickText.node(), {\n      useBBox: true\n    }).height;\n    fakeTick.remove();\n    var scaleType = this.scaleType || axisOptions.scaleType || ScaleTypes.LINEAR; // Initialize axis object\n\n    var axis = axisFunction(scale).tickSizeOuter(0);\n\n    if (scale.ticks) {\n      var numberOfTicks = void 0;\n\n      if (isNumberOfTicksProvided) {\n        numberOfTicks = numberOfTicksProvided;\n      } else {\n        numberOfTicks = Configuration.axis.ticks.number;\n\n        if (isVerticalAxis) {\n          // Set how many ticks based on height\n          numberOfTicks = this.getNumberOfFittingTicks(height, tickHeight, Configuration.axis.ticks.verticalSpaceRatio);\n        }\n      } // scale continuous\n      // remove 0 ticks for skeleton\n\n\n      if (scale.ticks().length === 1 && scale.ticks()[0] === 0) {\n        numberOfTicks = 0;\n      }\n\n      axis.ticks(numberOfTicks);\n\n      if (isTimeScaleType) {\n        if (!scale.ticks(numberOfTicks).length) {\n          axis.tickValues([]);\n        } else {\n          var addSpaceOnEdges = Tools.getProperty(options, 'timeScale', 'addSpaceOnEdges');\n          var customDomain = Tools.getProperty(options, 'axes', axisPosition, 'domain');\n          var tickValues = void 0; // scale.nice() will change scale domain which causes extra space near chart edge\n          // so use another scale instance to avoid impacts to original scale\n\n          var tempScale = scale.copy();\n\n          if (addSpaceOnEdges && !customDomain) {\n            tempScale.nice(numberOfTicks);\n          }\n\n          tickValues = tempScale.ticks(numberOfTicks); // Remove labels on the edges\n          // If there are more than 2 labels to show\n\n          if (addSpaceOnEdges && tickValues.length > 2 && !customDomain) {\n            tickValues.splice(tickValues.length - 1, 1);\n            tickValues.splice(0, 1);\n          }\n\n          axis.tickValues(tickValues);\n        }\n      }\n    } // create the right ticks formatter\n\n\n    var formatter;\n    var userProvidedFormatter = Tools.getProperty(axisOptions, 'ticks', 'formatter');\n\n    if (isTimeScaleType) {\n      var timeInterval_1 = computeTimeIntervalName(axis.tickValues());\n\n      if (userProvidedFormatter === null) {\n        formatter = function formatter(t, i) {\n          return formatTick(t, i, axis.tickValues(), timeInterval_1, timeScaleOptions);\n        };\n      } else {\n        formatter = function formatter(t, i) {\n          var defaultFormattedValue = formatTick(t, i, axis.tickValues(), timeInterval_1, timeScaleOptions);\n          return userProvidedFormatter(t, i, defaultFormattedValue);\n        };\n      }\n    } else {\n      if (userProvidedFormatter === null) {\n        if (scaleType === ScaleTypes.LINEAR) {\n          formatter = function formatter(t) {\n            return t.toLocaleString();\n          };\n        }\n      } else {\n        formatter = userProvidedFormatter;\n      }\n    } // Set ticks formatter\n\n\n    axis.tickFormat(formatter); // prioritize using a custom array of values rather than number of ticks\n    // if both are provided. custom tick values need to be within the domain of the scale\n\n    var _b = this.services.cartesianScales.getScaleByPosition(axisPosition).domain(),\n        lowerBound = _b[0],\n        upperBound = _b[1];\n\n    var validTicks;\n\n    if (userProvidedTickValues) {\n      if (isTimeScaleType) {\n        // sanitize user-provided tick values\n        userProvidedTickValues.forEach(function (userProvidedTickValue, i) {\n          if (userProvidedTickValue.getTime === undefined) {\n            userProvidedTickValues[i] = new Date(userProvidedTickValue);\n          }\n        }); // check the supplied ticks are within the time domain\n\n        validTicks = userProvidedTickValues.filter(function (tick) {\n          var tickTimestamp = tick.getTime();\n          return tickTimestamp >= new Date(lowerBound).getTime() && tickTimestamp <= new Date(upperBound).getTime();\n        });\n      } else if (axisScaleType === ScaleTypes.LABELS) {\n        var discreteDomain_1 = this.services.cartesianScales.getScaleByPosition(axisPosition).domain();\n        validTicks = userProvidedTickValues.filter(function (tick) {\n          return discreteDomain_1.includes(tick);\n        });\n      } else {\n        // continuous scales\n        validTicks = userProvidedTickValues.filter(function (tick) {\n          return tick >= lowerBound && tick <= upperBound;\n        });\n      }\n\n      axis.tickValues(validTicks);\n    } // Position and transition the axis\n\n\n    switch (axisPosition) {\n      case AxisPositions.LEFT:\n        axisRef.attr('transform', \"translate(\" + this.margins.left + \", 0)\");\n        break;\n\n      case AxisPositions.BOTTOM:\n        axisRef.attr('transform', \"translate(0, \" + (height - this.margins.bottom) + \")\");\n        break;\n\n      case AxisPositions.RIGHT:\n        axisRef.attr('transform', \"translate(\" + (width - this.margins.right) + \", 0)\");\n        break;\n\n      case AxisPositions.TOP:\n        axisRef.attr('transform', \"translate(0, \" + this.margins.top + \")\");\n        break;\n    } // Position the axis title\n    // check that data exists, if they don't, doesn't show the title axis\n\n\n    var isDataEmpty = this.model.isDataEmpty();\n\n    if (axisOptions.title) {\n      var axisTitleRef = DOMUtils.appendOrSelect(container, \"text.axis-title\").html(isDataEmpty || isDataLoading ? '' : axisOptions.title); // vertical axes can have override for title orientation\n\n      var titleOrientation = Tools.getProperty(axisOptions, 'titleOrientation');\n\n      switch (axisPosition) {\n        case AxisPositions.LEFT:\n          if (titleOrientation === AxisTitleOrientations.RIGHT) {\n            axisTitleRef.attr('transform', 'rotate(90)').attr('y', 0).attr('x', scale.range()[0] / 2).attr('dy', '-0.5em').style('text-anchor', 'middle');\n          } else {\n            axisTitleRef.attr('transform', 'rotate(-90)').attr('y', 0).attr('x', -(scale.range()[0] / 2)).attr('dy', '0.75em').style('text-anchor', 'middle');\n          }\n\n          break;\n\n        case AxisPositions.BOTTOM:\n          axisTitleRef.attr('transform', \"translate(\" + (this.margins.left / 2 + scale.range()[1] / 2) + \", \" + (height + 4) + \")\").style('text-anchor', 'middle');\n          break;\n\n        case AxisPositions.RIGHT:\n          if (titleOrientation === AxisTitleOrientations.LEFT) {\n            axisTitleRef.attr('transform', 'rotate(-90)').attr('y', width).attr('x', -(scale.range()[0] / 2)).style('text-anchor', 'middle');\n          } else {\n            axisTitleRef.attr('transform', 'rotate(90)').attr('y', -width).attr('x', scale.range()[0] / 2).attr('dy', '0.75em').style('text-anchor', 'middle');\n          }\n\n          break;\n\n        case AxisPositions.TOP:\n          var titleHeight = DOMUtils.getSVGElementSize(axisTitleRef, {\n            useBBox: true\n          }).height;\n          axisTitleRef.attr('transform', \"translate(\" + (this.margins.left / 2 + scale.range()[1] / 2) + \", \" + titleHeight / 2 + \")\").style('text-anchor', 'middle');\n          break;\n      }\n    } // Apply new axis to the axis element\n\n\n    if (isTimeScaleType) {\n      var timeInterval_2 = computeTimeIntervalName(axis.tickValues());\n      var showDayName_1 = timeScaleOptions.showDayName;\n      var axisRefSelection = axisRef;\n\n      if (animate) {\n        axisRef = axisRef.transition(this.services.transitions.getTransition('axis-update', animate));\n      }\n\n      axisRef = axisRef.call(axis); // Manipulate tick labels to make bold those that are in long format\n\n      var ticks = axisRefSelection.selectAll('.tick').data(axis.tickValues(), scale).order().select('text');\n      ticks.style('font-weight', function (tick, i) {\n        return isTickPrimary(tick, i, axis.tickValues(), timeInterval_2, showDayName_1) ? 'bold' : 'normal';\n      });\n    } else {\n      if (!animate || !axisRefExists) {\n        axisRef = axisRef.call(axis);\n      } else {\n        axisRef = axisRef.transition(this.services.transitions.getTransition('axis-update')).call(axis);\n      }\n    }\n\n    invisibleAxisRef.call(axis);\n\n    if (axisPosition === AxisPositions.BOTTOM || axisPosition === AxisPositions.TOP) {\n      var shouldRotateTicks = false; // user could decide if tick rotation is required during zoom domain changing\n\n      var tickRotation = Tools.getProperty(axisOptions, 'ticks', 'rotation');\n\n      if (tickRotation === TickRotations.ALWAYS) {\n        shouldRotateTicks = true;\n      } else if (tickRotation === TickRotations.NEVER) {\n        shouldRotateTicks = false;\n      } else if (!tickRotation || tickRotation === TickRotations.AUTO) {\n        // if the option is not set or set to AUTO\n        // depending on if tick rotation is necessary by calculating space\n        // If we're dealing with a discrete scale type\n        // We're able to grab the spacing between the ticks\n        if (scale.step) {\n          var textNodes = invisibleAxisRef.selectAll('g.tick text').nodes(); // If any ticks are any larger than the scale step size\n\n          shouldRotateTicks = textNodes.some(function (textNode) {\n            return DOMUtils.getSVGElementSize(textNode, {\n              useBBox: true\n            }).width >= scale.step();\n          });\n        } else {\n          // When dealing with a continuous scale\n          // We need to calculate an estimated size of the ticks\n          var minTickSize = Tools.getProperty(axisOptions, 'ticks', 'rotateIfSmallerThan') || Configuration.axis.ticks.rotateIfSmallerThan;\n          var ticksNumber = isTimeScaleType ? axis.tickValues().length : scale.ticks().length;\n          var estimatedTickSize = width / ticksNumber / 2;\n          shouldRotateTicks = isTimeScaleType ? estimatedTickSize < minTickSize * 2 // datetime tick could be very long\n          : estimatedTickSize < minTickSize;\n        }\n      }\n\n      if (shouldRotateTicks) {\n        if (!isNumberOfTicksProvided) {\n          axis.ticks(this.getNumberOfFittingTicks(width, tickHeight, Configuration.axis.ticks.horizontalSpaceRatio));\n          invisibleAxisRef.call(axis);\n          axisRef.call(axis);\n        }\n\n        container.selectAll('g.ticks g.tick text').attr('transform', \"rotate(-45)\").style('text-anchor', axisPosition === AxisPositions.TOP ? 'start' : 'end');\n      } else {\n        container.selectAll('g.ticks g.tick text').attr('transform', null).style('text-anchor', null);\n      }\n    } // we don't need to show axes on empty state and on skeleton state\n    // because the Skeleton component draws them\n\n\n    if (isDataLoading) {\n      container.attr('opacity', 0);\n    } else {\n      container.attr('opacity', 1);\n    }\n\n    axisRef.selectAll('g.tick').attr('aria-label', function (d) {\n      return d;\n    });\n    invisibleAxisRef.selectAll('g.tick').attr('aria-label', function (d) {\n      return d;\n    }); // truncate the label if it's too long\n    // only applies to discrete type\n\n    if (truncationType !== TruncationTypes.NONE && axisScaleType === ScaleTypes.LABELS && !userProvidedTickValues) {\n      var axisTickLabels = this.services.cartesianScales.getScaleDomain(axisPosition);\n\n      if (axisTickLabels.length > 0) {\n        var tick_html = svg.select(\"g.axis.\" + axisPosition + \" g.ticks g.tick\").html();\n        container.selectAll('g.ticks g.tick').html(tick_html);\n        container.selectAll('g.tick text').data(axisTickLabels).text(function (d) {\n          if (d.length > truncationThreshold) {\n            return Tools.truncateLabel(d, truncationType, truncationNumCharacter);\n          } else {\n            return d;\n          }\n        });\n        this.getInvisibleAxisRef().selectAll('g.tick text').data(axisTickLabels).text(function (d) {\n          if (d.length > truncationThreshold) {\n            return Tools.truncateLabel(d, truncationType, truncationNumCharacter);\n          } else {\n            return d;\n          }\n        });\n        container.selectAll('g.ticks').html(this.getInvisibleAxisRef().html());\n        container.selectAll('g.tick text').data(axisTickLabels);\n      }\n    } // Add event listeners to elements drawn\n\n\n    this.addEventListeners();\n  };\n\n  Axis.prototype.addEventListeners = function () {\n    var svg = this.getContainerSVG();\n    var axisPosition = this.configs.position;\n    var container = DOMUtils.appendOrSelect(svg, \"g.axis.\" + axisPosition);\n    var options = this.getOptions();\n    var axisOptions = Tools.getProperty(options, 'axes', axisPosition);\n    var axisScaleType = Tools.getProperty(axisOptions, 'scaleType');\n    var truncationThreshold = Tools.getProperty(axisOptions, 'truncation', 'threshold');\n    var isTimeScaleType = this.scaleType === ScaleTypes.TIME || axisOptions.scaleType === ScaleTypes.TIME;\n    var self = this;\n    container.selectAll('g.tick text').on('mouseover', function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Axis.LABEL_MOUSEOVER, {\n        element: select(this),\n        datum: datum\n      });\n\n      if (axisScaleType === ScaleTypes.LABELS && datum.length > truncationThreshold) {\n        self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n          hoveredElement: select(this),\n          content: datum\n        });\n      }\n    }).on('mousemove', function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Axis.LABEL_MOUSEMOVE, {\n        element: select(this),\n        datum: datum\n      });\n\n      if (axisScaleType === ScaleTypes.LABELS && datum.length > truncationThreshold) {\n        self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n      }\n    }).on('click', function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Axis.LABEL_CLICK, {\n        element: select(this),\n        datum: datum\n      });\n    }).on('mouseout', function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Axis.LABEL_MOUSEOUT, {\n        element: select(this),\n        datum: datum\n      });\n\n      if (axisScaleType === ScaleTypes.LABELS) {\n        self.services.events.dispatchEvent(Events.Tooltip.HIDE);\n      }\n    });\n  };\n\n  Axis.prototype.getInvisibleAxisRef = function () {\n    var axisPosition = this.configs.position;\n    return this.getContainerSVG().select(\"g.axis.\" + axisPosition + \" g.ticks.invisible\");\n  };\n\n  Axis.prototype.getTitleRef = function () {\n    var axisPosition = this.configs.position;\n    return this.getContainerSVG().select(\"g.axis.\" + axisPosition + \" text.axis-title\");\n  };\n\n  Axis.prototype.getNumberOfFittingTicks = function (size, tickSize, spaceRatio) {\n    var numberOfTicksFit = Math.floor(size / (tickSize * spaceRatio));\n    return Tools.clamp(numberOfTicksFit, 2, Configuration.axis.ticks.number);\n  };\n\n  Axis.prototype.destroy = function () {\n    var svg = this.getContainerSVG();\n    var axisPosition = this.configs.position;\n    var container = DOMUtils.appendOrSelect(svg, \"g.axis.\" + axisPosition); // Remove event listeners\n\n    container.selectAll('g.tick text').on('mouseover', null).on('mousemove', null).on('mouseout', null);\n  };\n\n  return Axis;\n}(Component);\n\nexport { Axis };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/components/axes/axis.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Component","AxisPositions","Events","ScaleTypes","Roles","TruncationTypes","Tools","DOMUtils","AxisTitleOrientations","TickRotations","Configuration","computeTimeIntervalName","formatTick","isTickPrimary","select","axisBottom","axisLeft","axisRight","axisTop","Axis","_super","model","services","configs","_this","call","type","margins","render","animate","axisPosition","position","options","getOptions","isAxisVisible","getProperty","svg","getContainerSVG","_a","getSVGElementSize","parent","useAttrs","width","height","container","appendOrSelect","startPosition","endPosition","BOTTOM","TOP","axes","LEFT","left","RIGHT","right","bottom","top","scale","cartesianScales","getScaleByPosition","scaleType","LABELS","LABELS_RATIO","rangeRound","range","axisFunction","attr","axisRefExists","empty","axisRef","GRAPHICS_OBJECT","GROUP","invisibleAxisRef","style","axisOptions","isTimeScaleType","TIME","isVerticalAxis","zoomDomain","get","domain","axisScaleType","isDataLoading","numberOfTicksProvided","userProvidedTickValues","truncationType","truncationThreshold","truncationNumCharacter","isNumberOfTicksProvided","timeScaleOptions","fakeTick","fakeTickText","text","tickHeight","node","useBBox","remove","LINEAR","axis","tickSizeOuter","ticks","numberOfTicks","number","getNumberOfFittingTicks","verticalSpaceRatio","length","tickValues","addSpaceOnEdges","customDomain","tempScale","copy","nice","splice","formatter","userProvidedFormatter","timeInterval_1","t","i","defaultFormattedValue","toLocaleString","tickFormat","_b","lowerBound","upperBound","validTicks","forEach","userProvidedTickValue","getTime","undefined","Date","filter","tick","tickTimestamp","discreteDomain_1","includes","isDataEmpty","title","axisTitleRef","html","titleOrientation","titleHeight","timeInterval_2","showDayName_1","showDayName","axisRefSelection","transition","transitions","getTransition","selectAll","data","order","shouldRotateTicks","tickRotation","ALWAYS","NEVER","AUTO","step","textNodes","nodes","some","textNode","minTickSize","rotateIfSmallerThan","ticksNumber","estimatedTickSize","horizontalSpaceRatio","NONE","axisTickLabels","getScaleDomain","tick_html","truncateLabel","getInvisibleAxisRef","addEventListeners","self","on","datum","events","dispatchEvent","LABEL_MOUSEOVER","element","Tooltip","SHOW","hoveredElement","content","LABEL_MOUSEMOVE","MOVE","LABEL_CLICK","LABEL_MOUSEOUT","HIDE","getTitleRef","size","tickSize","spaceRatio","numberOfTicksFit","Math","floor","clamp","destroy"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Component } from '../component';\nimport { AxisPositions, Events, ScaleTypes, Roles, TruncationTypes, } from '../../interfaces';\nimport { Tools } from '../../tools';\nimport { DOMUtils } from '../../services';\nimport { AxisTitleOrientations, TickRotations } from '../../interfaces/enums';\nimport * as Configuration from '../../configuration';\nimport { computeTimeIntervalName, formatTick, isTickPrimary, } from '../../services/time-series';\n// D3 Imports\nimport { select } from 'd3-selection';\nimport { axisBottom, axisLeft, axisRight, axisTop } from 'd3-axis';\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis(model, services, configs) {\n        var _this = _super.call(this, model, services, configs) || this;\n        _this.type = 'axes';\n        if (configs) {\n            _this.configs = configs;\n        }\n        _this.margins = _this.configs.margins;\n        return _this;\n    }\n    Axis.prototype.render = function (animate) {\n        if (animate === void 0) { animate = true; }\n        var axisPosition = this.configs.position;\n        var options = this.getOptions();\n        var isAxisVisible = Tools.getProperty(options, 'axes', axisPosition, 'visible');\n        var svg = this.getContainerSVG();\n        var _a = DOMUtils.getSVGElementSize(this.parent, {\n            useAttrs: true,\n        }), width = _a.width, height = _a.height;\n        // Add axis into the parent\n        var container = DOMUtils.appendOrSelect(svg, \"g.axis.\" + axisPosition);\n        var startPosition, endPosition;\n        if (axisPosition === AxisPositions.BOTTOM ||\n            axisPosition === AxisPositions.TOP) {\n            startPosition = this.configs.axes[AxisPositions.LEFT]\n                ? this.margins.left\n                : 0;\n            endPosition = this.configs.axes[AxisPositions.RIGHT]\n                ? width - this.margins.right\n                : width;\n        }\n        else {\n            startPosition = height - this.margins.bottom;\n            endPosition = this.margins.top;\n        }\n        // Grab the scale off of the Scales service\n        var scale = this.services.cartesianScales.getScaleByPosition(axisPosition);\n        if (this.scaleType === ScaleTypes.LABELS ||\n            this.scaleType === ScaleTypes.LABELS_RATIO) {\n            scale.rangeRound([startPosition, endPosition]);\n        }\n        else {\n            scale.range([startPosition, endPosition]);\n        }\n        // Identify the corresponding d3 axis function\n        var axisFunction;\n        switch (axisPosition) {\n            case AxisPositions.LEFT:\n                axisFunction = axisLeft;\n                break;\n            case AxisPositions.BOTTOM:\n                axisFunction = axisBottom;\n                break;\n            case AxisPositions.RIGHT:\n                axisFunction = axisRight;\n                break;\n            case AxisPositions.TOP:\n                axisFunction = axisTop;\n                break;\n        }\n        container.attr('aria-label', axisPosition + \" axis\");\n        var axisRefExists = !container.select(\"g.ticks\").empty();\n        var axisRef = DOMUtils.appendOrSelect(container, \"g.ticks\");\n        if (!axisRefExists) {\n            axisRef.attr('role', Roles.GRAPHICS_OBJECT + \" \" + Roles.GROUP);\n            axisRef.attr('aria-label', axisPosition + \" ticks\");\n        }\n        // We draw the invisible axis because of the async nature of d3 transitions\n        // To be able to tell the final width & height of the axis when initiaing the transition\n        // The invisible axis is updated instantly and without a transition\n        var invisibleAxisRef = DOMUtils.appendOrSelect(container, \"g.ticks.invisible\")\n            .style('opacity', '0')\n            .style('pointer-events', 'none')\n            .attr('aria-hidden', true)\n            .attr('aria-label', \"invisible \" + axisPosition + \" ticks\");\n        var axisOptions = Tools.getProperty(options, 'axes', axisPosition);\n        var isTimeScaleType = this.scaleType === ScaleTypes.TIME ||\n            axisOptions.scaleType === ScaleTypes.TIME;\n        var isVerticalAxis = axisPosition === AxisPositions.LEFT ||\n            axisPosition === AxisPositions.RIGHT;\n        // if zoomDomain is available, scale type is time, and axis position isBOTTOM or TOP\n        // update scale domain to zoomDomain.\n        var zoomDomain = this.model.get('zoomDomain');\n        if (zoomDomain && isTimeScaleType && !isVerticalAxis) {\n            scale.domain(zoomDomain);\n        }\n        if (!isAxisVisible) {\n            axisRef.attr('aria-hidden', true);\n            return;\n        }\n        var axisScaleType = Tools.getProperty(axisOptions, 'scaleType');\n        var isDataLoading = Tools.getProperty(options, 'data', 'loading');\n        var numberOfTicksProvided = Tools.getProperty(axisOptions, 'ticks', 'number');\n        // user can provide custom ticks to be displayed\n        // ticks need to be in the domain of the axis data\n        var userProvidedTickValues = Tools.getProperty(axisOptions, 'ticks', 'values');\n        // get user provided custom values for truncation\n        var truncationType = Tools.getProperty(axisOptions, 'truncation', 'type');\n        var truncationThreshold = Tools.getProperty(axisOptions, 'truncation', 'threshold');\n        var truncationNumCharacter = Tools.getProperty(axisOptions, 'truncation', 'numCharacter');\n        var isNumberOfTicksProvided = numberOfTicksProvided !== null;\n        var timeScaleOptions = Tools.getProperty(options, 'timeScale');\n        // Append to DOM a fake tick to get the right computed font height\n        var fakeTick = DOMUtils.appendOrSelect(invisibleAxisRef, \"g.tick\");\n        var fakeTickText = DOMUtils.appendOrSelect(fakeTick, \"text\").text('0');\n        var tickHeight = DOMUtils.getSVGElementSize(fakeTickText.node(), {\n            useBBox: true,\n        }).height;\n        fakeTick.remove();\n        var scaleType = this.scaleType || axisOptions.scaleType || ScaleTypes.LINEAR;\n        // Initialize axis object\n        var axis = axisFunction(scale).tickSizeOuter(0);\n        if (scale.ticks) {\n            var numberOfTicks = void 0;\n            if (isNumberOfTicksProvided) {\n                numberOfTicks = numberOfTicksProvided;\n            }\n            else {\n                numberOfTicks = Configuration.axis.ticks.number;\n                if (isVerticalAxis) {\n                    // Set how many ticks based on height\n                    numberOfTicks = this.getNumberOfFittingTicks(height, tickHeight, Configuration.axis.ticks.verticalSpaceRatio);\n                }\n            }\n            // scale continuous\n            // remove 0 ticks for skeleton\n            if (scale.ticks().length === 1 && scale.ticks()[0] === 0) {\n                numberOfTicks = 0;\n            }\n            axis.ticks(numberOfTicks);\n            if (isTimeScaleType) {\n                if (!scale.ticks(numberOfTicks).length) {\n                    axis.tickValues([]);\n                }\n                else {\n                    var addSpaceOnEdges = Tools.getProperty(options, 'timeScale', 'addSpaceOnEdges');\n                    var customDomain = Tools.getProperty(options, 'axes', axisPosition, 'domain');\n                    var tickValues = void 0;\n                    // scale.nice() will change scale domain which causes extra space near chart edge\n                    // so use another scale instance to avoid impacts to original scale\n                    var tempScale = scale.copy();\n                    if (addSpaceOnEdges && !customDomain) {\n                        tempScale.nice(numberOfTicks);\n                    }\n                    tickValues = tempScale.ticks(numberOfTicks);\n                    // Remove labels on the edges\n                    // If there are more than 2 labels to show\n                    if (addSpaceOnEdges &&\n                        tickValues.length > 2 &&\n                        !customDomain) {\n                        tickValues.splice(tickValues.length - 1, 1);\n                        tickValues.splice(0, 1);\n                    }\n                    axis.tickValues(tickValues);\n                }\n            }\n        }\n        // create the right ticks formatter\n        var formatter;\n        var userProvidedFormatter = Tools.getProperty(axisOptions, 'ticks', 'formatter');\n        if (isTimeScaleType) {\n            var timeInterval_1 = computeTimeIntervalName(axis.tickValues());\n            if (userProvidedFormatter === null) {\n                formatter = function (t, i) {\n                    return formatTick(t, i, axis.tickValues(), timeInterval_1, timeScaleOptions);\n                };\n            }\n            else {\n                formatter = function (t, i) {\n                    var defaultFormattedValue = formatTick(t, i, axis.tickValues(), timeInterval_1, timeScaleOptions);\n                    return userProvidedFormatter(t, i, defaultFormattedValue);\n                };\n            }\n        }\n        else {\n            if (userProvidedFormatter === null) {\n                if (scaleType === ScaleTypes.LINEAR) {\n                    formatter = function (t) { return t.toLocaleString(); };\n                }\n            }\n            else {\n                formatter = userProvidedFormatter;\n            }\n        }\n        // Set ticks formatter\n        axis.tickFormat(formatter);\n        // prioritize using a custom array of values rather than number of ticks\n        // if both are provided. custom tick values need to be within the domain of the scale\n        var _b = this.services.cartesianScales\n            .getScaleByPosition(axisPosition)\n            .domain(), lowerBound = _b[0], upperBound = _b[1];\n        var validTicks;\n        if (userProvidedTickValues) {\n            if (isTimeScaleType) {\n                // sanitize user-provided tick values\n                userProvidedTickValues.forEach(function (userProvidedTickValue, i) {\n                    if (userProvidedTickValue.getTime === undefined) {\n                        userProvidedTickValues[i] = new Date(userProvidedTickValue);\n                    }\n                });\n                // check the supplied ticks are within the time domain\n                validTicks = userProvidedTickValues.filter(function (tick) {\n                    var tickTimestamp = tick.getTime();\n                    return (tickTimestamp >= new Date(lowerBound).getTime() &&\n                        tickTimestamp <= new Date(upperBound).getTime());\n                });\n            }\n            else if (axisScaleType === ScaleTypes.LABELS) {\n                var discreteDomain_1 = this.services.cartesianScales\n                    .getScaleByPosition(axisPosition)\n                    .domain();\n                validTicks = userProvidedTickValues.filter(function (tick) {\n                    return discreteDomain_1.includes(tick);\n                });\n            }\n            else {\n                // continuous scales\n                validTicks = userProvidedTickValues.filter(function (tick) { return tick >= lowerBound && tick <= upperBound; });\n            }\n            axis.tickValues(validTicks);\n        }\n        // Position and transition the axis\n        switch (axisPosition) {\n            case AxisPositions.LEFT:\n                axisRef.attr('transform', \"translate(\" + this.margins.left + \", 0)\");\n                break;\n            case AxisPositions.BOTTOM:\n                axisRef.attr('transform', \"translate(0, \" + (height - this.margins.bottom) + \")\");\n                break;\n            case AxisPositions.RIGHT:\n                axisRef.attr('transform', \"translate(\" + (width - this.margins.right) + \", 0)\");\n                break;\n            case AxisPositions.TOP:\n                axisRef.attr('transform', \"translate(0, \" + this.margins.top + \")\");\n                break;\n        }\n        // Position the axis title\n        // check that data exists, if they don't, doesn't show the title axis\n        var isDataEmpty = this.model.isDataEmpty();\n        if (axisOptions.title) {\n            var axisTitleRef = DOMUtils.appendOrSelect(container, \"text.axis-title\").html(isDataEmpty || isDataLoading ? '' : axisOptions.title);\n            // vertical axes can have override for title orientation\n            var titleOrientation = Tools.getProperty(axisOptions, 'titleOrientation');\n            switch (axisPosition) {\n                case AxisPositions.LEFT:\n                    if (titleOrientation === AxisTitleOrientations.RIGHT) {\n                        axisTitleRef\n                            .attr('transform', 'rotate(90)')\n                            .attr('y', 0)\n                            .attr('x', scale.range()[0] / 2)\n                            .attr('dy', '-0.5em')\n                            .style('text-anchor', 'middle');\n                    }\n                    else {\n                        axisTitleRef\n                            .attr('transform', 'rotate(-90)')\n                            .attr('y', 0)\n                            .attr('x', -(scale.range()[0] / 2))\n                            .attr('dy', '0.75em')\n                            .style('text-anchor', 'middle');\n                    }\n                    break;\n                case AxisPositions.BOTTOM:\n                    axisTitleRef\n                        .attr('transform', \"translate(\" + (this.margins.left / 2 + scale.range()[1] / 2) + \", \" + (height + 4) + \")\")\n                        .style('text-anchor', 'middle');\n                    break;\n                case AxisPositions.RIGHT:\n                    if (titleOrientation === AxisTitleOrientations.LEFT) {\n                        axisTitleRef\n                            .attr('transform', 'rotate(-90)')\n                            .attr('y', width)\n                            .attr('x', -(scale.range()[0] / 2))\n                            .style('text-anchor', 'middle');\n                    }\n                    else {\n                        axisTitleRef\n                            .attr('transform', 'rotate(90)')\n                            .attr('y', -width)\n                            .attr('x', scale.range()[0] / 2)\n                            .attr('dy', '0.75em')\n                            .style('text-anchor', 'middle');\n                    }\n                    break;\n                case AxisPositions.TOP:\n                    var titleHeight = DOMUtils.getSVGElementSize(axisTitleRef, {\n                        useBBox: true,\n                    }).height;\n                    axisTitleRef\n                        .attr('transform', \"translate(\" + (this.margins.left / 2 + scale.range()[1] / 2) + \", \" + titleHeight / 2 + \")\")\n                        .style('text-anchor', 'middle');\n                    break;\n            }\n        }\n        // Apply new axis to the axis element\n        if (isTimeScaleType) {\n            var timeInterval_2 = computeTimeIntervalName(axis.tickValues());\n            var showDayName_1 = timeScaleOptions.showDayName;\n            var axisRefSelection = axisRef;\n            if (animate) {\n                axisRef = axisRef.transition(this.services.transitions.getTransition('axis-update', animate));\n            }\n            axisRef = axisRef.call(axis);\n            // Manipulate tick labels to make bold those that are in long format\n            var ticks = axisRefSelection\n                .selectAll('.tick')\n                .data(axis.tickValues(), scale)\n                .order()\n                .select('text');\n            ticks.style('font-weight', function (tick, i) {\n                return isTickPrimary(tick, i, axis.tickValues(), timeInterval_2, showDayName_1)\n                    ? 'bold'\n                    : 'normal';\n            });\n        }\n        else {\n            if (!animate || !axisRefExists) {\n                axisRef = axisRef.call(axis);\n            }\n            else {\n                axisRef = axisRef\n                    .transition(this.services.transitions.getTransition('axis-update'))\n                    .call(axis);\n            }\n        }\n        invisibleAxisRef.call(axis);\n        if (axisPosition === AxisPositions.BOTTOM ||\n            axisPosition === AxisPositions.TOP) {\n            var shouldRotateTicks = false;\n            // user could decide if tick rotation is required during zoom domain changing\n            var tickRotation = Tools.getProperty(axisOptions, 'ticks', 'rotation');\n            if (tickRotation === TickRotations.ALWAYS) {\n                shouldRotateTicks = true;\n            }\n            else if (tickRotation === TickRotations.NEVER) {\n                shouldRotateTicks = false;\n            }\n            else if (!tickRotation || tickRotation === TickRotations.AUTO) {\n                // if the option is not set or set to AUTO\n                // depending on if tick rotation is necessary by calculating space\n                // If we're dealing with a discrete scale type\n                // We're able to grab the spacing between the ticks\n                if (scale.step) {\n                    var textNodes = invisibleAxisRef\n                        .selectAll('g.tick text')\n                        .nodes();\n                    // If any ticks are any larger than the scale step size\n                    shouldRotateTicks = textNodes.some(function (textNode) {\n                        return DOMUtils.getSVGElementSize(textNode, {\n                            useBBox: true,\n                        }).width >= scale.step();\n                    });\n                }\n                else {\n                    // When dealing with a continuous scale\n                    // We need to calculate an estimated size of the ticks\n                    var minTickSize = Tools.getProperty(axisOptions, 'ticks', 'rotateIfSmallerThan') || Configuration.axis.ticks.rotateIfSmallerThan;\n                    var ticksNumber = isTimeScaleType\n                        ? axis.tickValues().length\n                        : scale.ticks().length;\n                    var estimatedTickSize = width / ticksNumber / 2;\n                    shouldRotateTicks = isTimeScaleType\n                        ? estimatedTickSize < minTickSize * 2 // datetime tick could be very long\n                        : estimatedTickSize < minTickSize;\n                }\n            }\n            if (shouldRotateTicks) {\n                if (!isNumberOfTicksProvided) {\n                    axis.ticks(this.getNumberOfFittingTicks(width, tickHeight, Configuration.axis.ticks.horizontalSpaceRatio));\n                    invisibleAxisRef.call(axis);\n                    axisRef.call(axis);\n                }\n                container\n                    .selectAll('g.ticks g.tick text')\n                    .attr('transform', \"rotate(-45)\")\n                    .style('text-anchor', axisPosition === AxisPositions.TOP ? 'start' : 'end');\n            }\n            else {\n                container\n                    .selectAll('g.ticks g.tick text')\n                    .attr('transform', null)\n                    .style('text-anchor', null);\n            }\n        }\n        // we don't need to show axes on empty state and on skeleton state\n        // because the Skeleton component draws them\n        if (isDataLoading) {\n            container.attr('opacity', 0);\n        }\n        else {\n            container.attr('opacity', 1);\n        }\n        axisRef.selectAll('g.tick').attr('aria-label', function (d) { return d; });\n        invisibleAxisRef.selectAll('g.tick').attr('aria-label', function (d) { return d; });\n        // truncate the label if it's too long\n        // only applies to discrete type\n        if (truncationType !== TruncationTypes.NONE &&\n            axisScaleType === ScaleTypes.LABELS &&\n            !userProvidedTickValues) {\n            var axisTickLabels = this.services.cartesianScales.getScaleDomain(axisPosition);\n            if (axisTickLabels.length > 0) {\n                var tick_html = svg\n                    .select(\"g.axis.\" + axisPosition + \" g.ticks g.tick\")\n                    .html();\n                container.selectAll('g.ticks g.tick').html(tick_html);\n                container\n                    .selectAll('g.tick text')\n                    .data(axisTickLabels)\n                    .text(function (d) {\n                    if (d.length > truncationThreshold) {\n                        return Tools.truncateLabel(d, truncationType, truncationNumCharacter);\n                    }\n                    else {\n                        return d;\n                    }\n                });\n                this.getInvisibleAxisRef()\n                    .selectAll('g.tick text')\n                    .data(axisTickLabels)\n                    .text(function (d) {\n                    if (d.length > truncationThreshold) {\n                        return Tools.truncateLabel(d, truncationType, truncationNumCharacter);\n                    }\n                    else {\n                        return d;\n                    }\n                });\n                container\n                    .selectAll('g.ticks')\n                    .html(this.getInvisibleAxisRef().html());\n                container.selectAll('g.tick text').data(axisTickLabels);\n            }\n        }\n        // Add event listeners to elements drawn\n        this.addEventListeners();\n    };\n    Axis.prototype.addEventListeners = function () {\n        var svg = this.getContainerSVG();\n        var axisPosition = this.configs.position;\n        var container = DOMUtils.appendOrSelect(svg, \"g.axis.\" + axisPosition);\n        var options = this.getOptions();\n        var axisOptions = Tools.getProperty(options, 'axes', axisPosition);\n        var axisScaleType = Tools.getProperty(axisOptions, 'scaleType');\n        var truncationThreshold = Tools.getProperty(axisOptions, 'truncation', 'threshold');\n        var isTimeScaleType = this.scaleType === ScaleTypes.TIME ||\n            axisOptions.scaleType === ScaleTypes.TIME;\n        var self = this;\n        container\n            .selectAll('g.tick text')\n            .on('mouseover', function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Axis.LABEL_MOUSEOVER, {\n                element: select(this),\n                datum: datum,\n            });\n            if (axisScaleType === ScaleTypes.LABELS &&\n                datum.length > truncationThreshold) {\n                self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n                    hoveredElement: select(this),\n                    content: datum,\n                });\n            }\n        })\n            .on('mousemove', function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Axis.LABEL_MOUSEMOVE, {\n                element: select(this),\n                datum: datum,\n            });\n            if (axisScaleType === ScaleTypes.LABELS &&\n                datum.length > truncationThreshold) {\n                self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n            }\n        })\n            .on('click', function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Axis.LABEL_CLICK, {\n                element: select(this),\n                datum: datum,\n            });\n        })\n            .on('mouseout', function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Axis.LABEL_MOUSEOUT, {\n                element: select(this),\n                datum: datum,\n            });\n            if (axisScaleType === ScaleTypes.LABELS) {\n                self.services.events.dispatchEvent(Events.Tooltip.HIDE);\n            }\n        });\n    };\n    Axis.prototype.getInvisibleAxisRef = function () {\n        var axisPosition = this.configs.position;\n        return this.getContainerSVG().select(\"g.axis.\" + axisPosition + \" g.ticks.invisible\");\n    };\n    Axis.prototype.getTitleRef = function () {\n        var axisPosition = this.configs.position;\n        return this.getContainerSVG().select(\"g.axis.\" + axisPosition + \" text.axis-title\");\n    };\n    Axis.prototype.getNumberOfFittingTicks = function (size, tickSize, spaceRatio) {\n        var numberOfTicksFit = Math.floor(size / (tickSize * spaceRatio));\n        return Tools.clamp(numberOfTicksFit, 2, Configuration.axis.ticks.number);\n    };\n    Axis.prototype.destroy = function () {\n        var svg = this.getContainerSVG();\n        var axisPosition = this.configs.position;\n        var container = DOMUtils.appendOrSelect(svg, \"g.axis.\" + axisPosition);\n        // Remove event listeners\n        container\n            .selectAll('g.tick text')\n            .on('mouseover', null)\n            .on('mousemove', null)\n            .on('mouseout', null);\n    };\n    return Axis;\n}(Component));\nexport { Axis };\n//# sourceMappingURL=../../../src/components/axes/axis.js.map"]},"metadata":{},"sourceType":"module"}