{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Component } from '../component';\nimport { CartesianOrientations, ColorClassNameTypes, Events, Roles } from '../../interfaces';\nimport { Tools } from '../../tools';\nimport * as Configuration from '../../configuration'; // D3 Imports\n\nimport { select } from 'd3-selection';\n\nvar Boxplot =\n/** @class */\nfunction (_super) {\n  __extends(Boxplot, _super);\n\n  function Boxplot() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'boxplot';\n    return _this;\n  }\n\n  Boxplot.prototype.render = function (animate) {\n    var _this = this; // Grab container SVG\n\n\n    var svg = this.getContainerSVG({\n      withinChartClip: true\n    });\n    var options = this.getOptions();\n    var groupMapsTo = options.data.groupMapsTo;\n    var dataGroupNames = this.model.getDataGroupNames();\n    /*\n     * Get graphable dimensions\n     */\n\n    var mainXScale = this.services.cartesianScales.getMainXScale();\n    var mainYScale = this.services.cartesianScales.getMainYScale();\n\n    var _a = mainXScale.range(),\n        xScaleStart = _a[0],\n        xScaleEnd = _a[1];\n\n    var _b = mainYScale.range(),\n        yScaleEnd = _b[0],\n        yScaleStart = _b[1];\n\n    var width = xScaleEnd - xScaleStart;\n    var height = yScaleEnd - yScaleStart;\n\n    if (width === 0) {\n      return;\n    } // Get orientation of the chart\n\n\n    var cartesianScales = this.services.cartesianScales;\n    var orientation = cartesianScales.getOrientation();\n    var isInVerticalOrientation = orientation === CartesianOrientations.VERTICAL;\n\n    var _c = Tools.flipDomainAndRangeBasedOnOrientation(function (d, i) {\n      return _this.services.cartesianScales.getDomainValue(d, i);\n    }, function (d, i) {\n      return _this.services.cartesianScales.getRangeValue(d, i);\n    }, orientation),\n        getXValue = _c[0],\n        getYValue = _c[1];\n\n    var gridSize = Math.floor((isInVerticalOrientation ? width : height) / dataGroupNames.length);\n    var boxWidth = Math.min(gridSize / 2, 16);\n    var boxplotData = this.model.getBoxplotData();\n    /*\n     * update or initialize all box groups\n     */\n\n    var boxGroups = svg.selectAll('.box-group').data(boxplotData);\n    boxGroups.exit().remove();\n    var boxGroupsEnter = boxGroups.enter().append('g').attr('class', 'box-group');\n    var allBoxGroups = boxGroups.merge(boxGroupsEnter);\n    /*\n     * draw the 2 range lines for each box\n     */\n    // Start range line\n\n    boxGroupsEnter.append('path').merge(boxGroups.select('path.vertical-line.start')).attr('class', function () {\n      return _this.model.getColorClassName({\n        classNameTypes: [ColorClassNameTypes.STROKE],\n        originalClassName: 'vertical-line start'\n      });\n    }).attr('stroke-width', Configuration.boxplot.strokeWidth.default).attr('fill', 'none').transition(this.services.transitions.getTransition('boxplot-update-verticalstartline', animate)).attr('d', function (d) {\n      var x0 = cartesianScales.getDomainValue(d[groupMapsTo]);\n      var x1 = x0;\n      var y0 = cartesianScales.getRangeValue(d.whiskers.min);\n      var y1 = cartesianScales.getRangeValue(d.quartiles.q_25);\n      return Tools.generateSVGPathString({\n        x0: x0,\n        x1: x1,\n        y0: y0,\n        y1: y1\n      }, orientation);\n    }); // End range line\n\n    boxGroupsEnter.append('path').merge(boxGroups.select('path.vertical-line.end')).attr('class', function () {\n      return _this.model.getColorClassName({\n        classNameTypes: [ColorClassNameTypes.STROKE],\n        originalClassName: 'vertical-line end'\n      });\n    }).attr('stroke-width', Configuration.boxplot.strokeWidth.default).attr('fill', 'none').transition(this.services.transitions.getTransition('boxplot-update-verticalendline', animate)).attr('d', function (d) {\n      var x0 = cartesianScales.getDomainValue(d[groupMapsTo]);\n      var x1 = x0;\n      var y0 = cartesianScales.getRangeValue(d.whiskers.max);\n      var y1 = cartesianScales.getRangeValue(d.quartiles.q_75);\n      return Tools.generateSVGPathString({\n        x0: x0,\n        x1: x1,\n        y0: y0,\n        y1: y1\n      }, orientation);\n    });\n    /*\n     * Draw out and update the boxes\n     */\n\n    boxGroupsEnter.append('path').merge(boxGroups.select('path.box')).attr('class', function () {\n      return _this.model.getColorClassName({\n        classNameTypes: [ColorClassNameTypes.FILL, ColorClassNameTypes.STROKE],\n        originalClassName: 'box'\n      });\n    }).attr('fill-opacity', Configuration.boxplot.box.opacity.default).attr('stroke-width', Configuration.boxplot.strokeWidth.default).attr('role', Roles.GRAPHICS_SYMBOL).attr('aria-roledescription', 'box').transition(this.services.transitions.getTransition('boxplot-update-quartiles', animate)).attr('d', function (d) {\n      var x0 = cartesianScales.getDomainValue(d[groupMapsTo]) - boxWidth / 2;\n      var x1 = x0 + boxWidth;\n      var y0 = cartesianScales.getRangeValue(Math[isInVerticalOrientation ? 'max' : 'min'](d.quartiles.q_75, d.quartiles.q_25));\n      var y1 = y0 + Math.abs(cartesianScales.getRangeValue(d.quartiles.q_75) - cartesianScales.getRangeValue(d.quartiles.q_25));\n      return Tools.generateSVGPathString({\n        x0: x0,\n        x1: x1,\n        y0: y0,\n        y1: y1\n      }, orientation);\n    });\n    /*\n     * Draw out and update highlight areas\n     */\n\n    boxGroupsEnter.append('path').merge(boxGroups.select('path.highlight-area')).attr('class', 'highlight-area').attr('opacity', 0).attr('d', function (d) {\n      var x0 = cartesianScales.getDomainValue(d[groupMapsTo]) - boxWidth / 2;\n      var x1 = x0 + boxWidth;\n      var y0 = cartesianScales.getRangeValue(d.whiskers.min);\n      var y1 = cartesianScales.getRangeValue(d.whiskers.max);\n      return Tools.generateSVGPathString({\n        x0: x0,\n        x1: x1,\n        y0: y0,\n        y1: y1\n      }, orientation);\n    });\n    /*\n     * Draw out and update the starting whisker\n     */\n\n    boxGroupsEnter.append('path').merge(boxGroups.select('path.whisker.start')).attr('class', function () {\n      return _this.model.getColorClassName({\n        classNameTypes: [ColorClassNameTypes.STROKE],\n        originalClassName: 'whisker start'\n      });\n    }).attr('stroke-width', Configuration.boxplot.strokeWidth.thicker).attr('fill', 'none').transition(this.services.transitions.getTransition('boxplot-update-startingwhisker', animate)).attr('d', function (d) {\n      var x0 = cartesianScales.getDomainValue(d[groupMapsTo]) - boxWidth / 4;\n      var x1 = x0 + boxWidth / 2;\n      var y0 = cartesianScales.getRangeValue(d.whiskers.min);\n      var y1 = cartesianScales.getRangeValue(d.whiskers.min);\n      return Tools.generateSVGPathString({\n        x0: x0,\n        x1: x1,\n        y0: y0,\n        y1: y1\n      }, orientation);\n    });\n    /*\n     * Draw out and update the median line\n     */\n\n    boxGroupsEnter.append('path').merge(boxGroups.select('path.median')).attr('fill', 'none').attr('class', function () {\n      return _this.model.getColorClassName({\n        classNameTypes: [ColorClassNameTypes.STROKE],\n        originalClassName: 'median'\n      });\n    }).attr('stroke-width', 2).transition(this.services.transitions.getTransition('boxplot-update-median', animate)).attr('d', function (d) {\n      var x0 = cartesianScales.getDomainValue(d[groupMapsTo]) - boxWidth / 2;\n      var x1 = x0 + boxWidth;\n      var y0 = cartesianScales.getRangeValue(d.quartiles.q_50);\n      var y1 = y0;\n      return Tools.generateSVGPathString({\n        x0: x0,\n        x1: x1,\n        y0: y0,\n        y1: y1\n      }, orientation);\n    });\n    /*\n     * Draw out and update the ending whisker\n     */\n\n    boxGroupsEnter.append('path').merge(boxGroups.select('path.whisker.end')).attr('class', function () {\n      return _this.model.getColorClassName({\n        classNameTypes: [ColorClassNameTypes.STROKE],\n        originalClassName: 'whisker end'\n      });\n    }).attr('stroke-width', Configuration.boxplot.strokeWidth.thicker).attr('fill', 'none').transition(this.services.transitions.getTransition('boxplot-update-endingwhisker', animate)).attr('d', function (d) {\n      var x0 = cartesianScales.getDomainValue(d[groupMapsTo]) - boxWidth / 4;\n      var x1 = x0 + boxWidth / 2;\n      var y0 = cartesianScales.getRangeValue(d.whiskers.max);\n      var y1 = cartesianScales.getRangeValue(d.whiskers.max);\n      return Tools.generateSVGPathString({\n        x0: x0,\n        x1: x1,\n        y0: y0,\n        y1: y1\n      }, orientation);\n    });\n    /*\n     * Draw out and update the outlier circles\n     */\n\n    var circles = allBoxGroups.selectAll('circle.outlier').data(function (d) {\n      return d.outliers.map(function (outlier) {\n        var _a;\n\n        return _a = {\n          min: d.whiskers.min,\n          max: d.whiskers.max\n        }, _a[groupMapsTo] = d[groupMapsTo], _a.value = outlier, _a;\n      });\n    });\n    circles.exit().remove();\n    var circlesEnter = circles.enter().append('circle');\n    circles.merge(circlesEnter).attr('r', Configuration.boxplot.circle.radius).attr('class', function () {\n      return _this.model.getColorClassName({\n        classNameTypes: [ColorClassNameTypes.FILL, ColorClassNameTypes.STROKE],\n        originalClassName: 'outlier'\n      });\n    }).attr('fill-opacity', Configuration.boxplot.circle.opacity.default).attr('cx', getXValue).transition(this.services.transitions.getTransition('boxplot-update-circles', animate)).attr('cy', getYValue);\n    this.addBoxEventListeners();\n    this.addCircleEventListeners();\n  };\n\n  Boxplot.prototype.addBoxEventListeners = function () {\n    var self = this;\n    var options = this.getOptions();\n    var groupMapsTo = options.data.groupMapsTo;\n    this.parent.selectAll('path.highlight-area').on('mouseover', function (datum) {\n      var hoveredElement = select(this);\n      var parentElement = select(this.parentNode);\n      parentElement.select('path.box').classed('hovered', true).attr('fill-opacity', Configuration.boxplot.box.opacity.hovered); // Show tooltip for single datapoint\n\n      self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n        hoveredElement: hoveredElement,\n        items: [{\n          label: options.tooltip.groupLabel,\n          value: datum[groupMapsTo],\n          class: self.model.getColorClassName({\n            classNameTypes: [ColorClassNameTypes.TOOLTIP]\n          })\n        }, {\n          label: 'Minimum',\n          value: datum.whiskers.min\n        }, {\n          label: 'Q1',\n          value: datum.quartiles.q_25\n        }, {\n          label: 'Median',\n          value: datum.quartiles.q_50\n        }, {\n          label: 'Q3',\n          value: datum.quartiles.q_75\n        }, {\n          label: 'Maximum',\n          value: datum.whiskers.max\n        }, {\n          label: 'IQR',\n          value: datum.quartiles.q_75 - datum.quartiles.q_25\n        }]\n      }); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Boxplot.BOX_MOUSEOVER, {\n        element: hoveredElement,\n        datum: datum\n      });\n    }).on('mousemove', function (datum) {\n      var hoveredElement = select(this); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Boxplot.BOX_MOUSEMOVE, {\n        element: hoveredElement,\n        datum: datum\n      });\n      self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n    }).on('click', function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Boxplot.BOX_CLICK, {\n        element: select(this),\n        datum: datum\n      });\n    }).on('mouseout', function (datum) {\n      var hoveredElement = select(this);\n      var parentElement = select(this.parentNode);\n      parentElement.select('path.box').classed('hovered', false).attr('fill-opacity', Configuration.boxplot.box.opacity.default); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Boxplot.BOX_MOUSEOUT, {\n        element: hoveredElement,\n        datum: datum\n      }); // Hide tooltip\n\n      self.services.events.dispatchEvent(Events.Tooltip.HIDE, {\n        hoveredElement: hoveredElement\n      });\n    });\n  };\n\n  Boxplot.prototype.addCircleEventListeners = function () {\n    var self = this;\n    var options = this.getOptions();\n    var groupMapsTo = options.data.groupMapsTo;\n    var rangeIdentifier = this.services.cartesianScales.getRangeIdentifier();\n    this.parent.selectAll('circle').on('mouseover', function (datum) {\n      var hoveredElement = select(this);\n      hoveredElement.classed('hovered', true).attr('fill-opacity', Configuration.boxplot.circle.opacity.hovered).classed('unfilled', false); // Show tooltip for single datapoint\n\n      self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n        hoveredElement: hoveredElement,\n        items: [{\n          label: options.tooltip.groupLabel,\n          value: datum[groupMapsTo],\n          class: self.model.getColorClassName({\n            classNameTypes: [ColorClassNameTypes.TOOLTIP]\n          })\n        }, {\n          label: 'Outlier',\n          value: datum[rangeIdentifier]\n        }]\n      }); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Boxplot.OUTLIER_MOUSEOVER, {\n        element: hoveredElement,\n        datum: datum\n      });\n    }).on('mousemove', function (datum) {\n      var hoveredElement = select(this); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Boxplot.OUTLIER_MOUSEMOVE, {\n        element: hoveredElement,\n        datum: datum\n      });\n      self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n    }).on('click', function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Boxplot.OUTLIER_CLICK, {\n        element: select(this),\n        datum: datum\n      });\n    }).on('mouseout', function (datum) {\n      var hoveredElement = select(this);\n      hoveredElement.classed('hovered', false).attr('fill-opacity', Configuration.boxplot.circle.opacity.default); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Boxplot.OUTLIER_MOUSEOUT, {\n        element: hoveredElement,\n        datum: datum\n      }); // Hide tooltip\n\n      self.services.events.dispatchEvent(Events.Tooltip.HIDE, {\n        hoveredElement: hoveredElement\n      });\n    });\n  };\n\n  return Boxplot;\n}(Component);\n\nexport { Boxplot };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/components/graphs/boxplot.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Component","CartesianOrientations","ColorClassNameTypes","Events","Roles","Tools","Configuration","select","Boxplot","_super","_this","apply","arguments","type","render","animate","svg","getContainerSVG","withinChartClip","options","getOptions","groupMapsTo","data","dataGroupNames","model","getDataGroupNames","mainXScale","services","cartesianScales","getMainXScale","mainYScale","getMainYScale","_a","range","xScaleStart","xScaleEnd","_b","yScaleEnd","yScaleStart","width","height","orientation","getOrientation","isInVerticalOrientation","VERTICAL","_c","flipDomainAndRangeBasedOnOrientation","i","getDomainValue","getRangeValue","getXValue","getYValue","gridSize","Math","floor","length","boxWidth","min","boxplotData","getBoxplotData","boxGroups","selectAll","exit","remove","boxGroupsEnter","enter","append","attr","allBoxGroups","merge","getColorClassName","classNameTypes","STROKE","originalClassName","boxplot","strokeWidth","default","transition","transitions","getTransition","x0","x1","y0","whiskers","y1","quartiles","q_25","generateSVGPathString","max","q_75","FILL","box","opacity","GRAPHICS_SYMBOL","abs","thicker","q_50","circles","outliers","map","outlier","value","circlesEnter","circle","radius","addBoxEventListeners","addCircleEventListeners","self","parent","on","datum","hoveredElement","parentElement","parentNode","classed","hovered","events","dispatchEvent","Tooltip","SHOW","items","label","tooltip","groupLabel","class","TOOLTIP","BOX_MOUSEOVER","element","BOX_MOUSEMOVE","MOVE","BOX_CLICK","BOX_MOUSEOUT","HIDE","rangeIdentifier","getRangeIdentifier","OUTLIER_MOUSEOVER","OUTLIER_MOUSEMOVE","OUTLIER_CLICK","OUTLIER_MOUSEOUT"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,cAAa,GAAG,uBAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,cAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd;AAAiB,YAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAA1C;AAAwD,KAF9E;;AAGA,WAAOP,cAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,cAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C,C,CAaA;;;AACA,SAASI,SAAT,QAA0B,cAA1B;AACA,SAASC,qBAAT,EAAgCC,mBAAhC,EAAqDC,MAArD,EAA6DC,KAA7D,QAA2E,kBAA3E;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,OAAO,KAAKC,aAAZ,MAA+B,qBAA/B,C,CACA;;AACA,SAASC,MAAT,QAAuB,cAAvB;;AACA,IAAIC,OAAO;AAAG;AAAe,UAAUC,MAAV,EAAkB;AAC3CvB,EAAAA,SAAS,CAACsB,OAAD,EAAUC,MAAV,CAAT;;AACA,WAASD,OAAT,GAAmB;AACf,QAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;AACAF,IAAAA,KAAK,CAACG,IAAN,GAAa,SAAb;AACA,WAAOH,KAAP;AACH;;AACDF,EAAAA,OAAO,CAACV,SAAR,CAAkBgB,MAAlB,GAA2B,UAAUC,OAAV,EAAmB;AAC1C,QAAIL,KAAK,GAAG,IAAZ,CAD0C,CAE1C;;;AACA,QAAIM,GAAG,GAAG,KAAKC,eAAL,CAAqB;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAArB,CAAV;AACA,QAAIC,OAAO,GAAG,KAAKC,UAAL,EAAd;AACA,QAAIC,WAAW,GAAGF,OAAO,CAACG,IAAR,CAAaD,WAA/B;AACA,QAAIE,cAAc,GAAG,KAAKC,KAAL,CAAWC,iBAAX,EAArB;AACA;AACR;AACA;;AACQ,QAAIC,UAAU,GAAG,KAAKC,QAAL,CAAcC,eAAd,CAA8BC,aAA9B,EAAjB;AACA,QAAIC,UAAU,GAAG,KAAKH,QAAL,CAAcC,eAAd,CAA8BG,aAA9B,EAAjB;;AACA,QAAIC,EAAE,GAAGN,UAAU,CAACO,KAAX,EAAT;AAAA,QAA6BC,WAAW,GAAGF,EAAE,CAAC,CAAD,CAA7C;AAAA,QAAkDG,SAAS,GAAGH,EAAE,CAAC,CAAD,CAAhE;;AACA,QAAII,EAAE,GAAGN,UAAU,CAACG,KAAX,EAAT;AAAA,QAA6BI,SAAS,GAAGD,EAAE,CAAC,CAAD,CAA3C;AAAA,QAAgDE,WAAW,GAAGF,EAAE,CAAC,CAAD,CAAhE;;AACA,QAAIG,KAAK,GAAGJ,SAAS,GAAGD,WAAxB;AACA,QAAIM,MAAM,GAAGH,SAAS,GAAGC,WAAzB;;AACA,QAAIC,KAAK,KAAK,CAAd,EAAiB;AACb;AACH,KAlByC,CAmB1C;;;AACA,QAAIX,eAAe,GAAG,KAAKD,QAAL,CAAcC,eAApC;AACA,QAAIa,WAAW,GAAGb,eAAe,CAACc,cAAhB,EAAlB;AACA,QAAIC,uBAAuB,GAAGF,WAAW,KAAKxC,qBAAqB,CAAC2C,QAApE;;AACA,QAAIC,EAAE,GAAGxC,KAAK,CAACyC,oCAAN,CAA2C,UAAU1D,CAAV,EAAa2D,CAAb,EAAgB;AAAE,aAAOrC,KAAK,CAACiB,QAAN,CAAeC,eAAf,CAA+BoB,cAA/B,CAA8C5D,CAA9C,EAAiD2D,CAAjD,CAAP;AAA6D,KAA1H,EAA4H,UAAU3D,CAAV,EAAa2D,CAAb,EAAgB;AAAE,aAAOrC,KAAK,CAACiB,QAAN,CAAeC,eAAf,CAA+BqB,aAA/B,CAA6C7D,CAA7C,EAAgD2D,CAAhD,CAAP;AAA4D,KAA1M,EAA4MN,WAA5M,CAAT;AAAA,QAAmOS,SAAS,GAAGL,EAAE,CAAC,CAAD,CAAjP;AAAA,QAAsPM,SAAS,GAAGN,EAAE,CAAC,CAAD,CAApQ;;AACA,QAAIO,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACX,uBAAuB,GAAGJ,KAAH,GAAWC,MAAnC,IAA6CjB,cAAc,CAACgC,MAAvE,CAAf;AACA,QAAIC,QAAQ,GAAGH,IAAI,CAACI,GAAL,CAASL,QAAQ,GAAG,CAApB,EAAuB,EAAvB,CAAf;AACA,QAAIM,WAAW,GAAG,KAAKlC,KAAL,CAAWmC,cAAX,EAAlB;AACA;AACR;AACA;;AACQ,QAAIC,SAAS,GAAG5C,GAAG,CAAC6C,SAAJ,CAAc,YAAd,EAA4BvC,IAA5B,CAAiCoC,WAAjC,CAAhB;AACAE,IAAAA,SAAS,CAACE,IAAV,GAAiBC,MAAjB;AACA,QAAIC,cAAc,GAAGJ,SAAS,CACzBK,KADgB,GAEhBC,MAFgB,CAET,GAFS,EAGhBC,IAHgB,CAGX,OAHW,EAGF,WAHE,CAArB;AAIA,QAAIC,YAAY,GAAGR,SAAS,CAACS,KAAV,CAAgBL,cAAhB,CAAnB;AACA;AACR;AACA;AACQ;;AACAA,IAAAA,cAAc,CACTE,MADL,CACY,MADZ,EAEKG,KAFL,CAEWT,SAAS,CAACrD,MAAV,CAAiB,0BAAjB,CAFX,EAGK4D,IAHL,CAGU,OAHV,EAGmB,YAAY;AAC3B,aAAOzD,KAAK,CAACc,KAAN,CAAY8C,iBAAZ,CAA8B;AACjCC,QAAAA,cAAc,EAAE,CAACrE,mBAAmB,CAACsE,MAArB,CADiB;AAEjCC,QAAAA,iBAAiB,EAAE;AAFc,OAA9B,CAAP;AAIH,KARD,EASKN,IATL,CASU,cATV,EAS0B7D,aAAa,CAACoE,OAAd,CAAsBC,WAAtB,CAAkCC,OAT5D,EAUKT,IAVL,CAUU,MAVV,EAUkB,MAVlB,EAWKU,UAXL,CAWgB,KAAKlD,QAAL,CAAcmD,WAAd,CAA0BC,aAA1B,CAAwC,kCAAxC,EAA4EhE,OAA5E,CAXhB,EAYKoD,IAZL,CAYU,GAZV,EAYe,UAAU/E,CAAV,EAAa;AACxB,UAAI4F,EAAE,GAAGpD,eAAe,CAACoB,cAAhB,CAA+B5D,CAAC,CAACiC,WAAD,CAAhC,CAAT;AACA,UAAI4D,EAAE,GAAGD,EAAT;AACA,UAAIE,EAAE,GAAGtD,eAAe,CAACqB,aAAhB,CAA8B7D,CAAC,CAAC+F,QAAF,CAAW1B,GAAzC,CAAT;AACA,UAAI2B,EAAE,GAAGxD,eAAe,CAACqB,aAAhB,CAA8B7D,CAAC,CAACiG,SAAF,CAAYC,IAA1C,CAAT;AACA,aAAOjF,KAAK,CAACkF,qBAAN,CAA4B;AAAEP,QAAAA,EAAE,EAAEA,EAAN;AAAUC,QAAAA,EAAE,EAAEA,EAAd;AAAkBC,QAAAA,EAAE,EAAEA,EAAtB;AAA0BE,QAAAA,EAAE,EAAEA;AAA9B,OAA5B,EAAgE3C,WAAhE,CAAP;AACH,KAlBD,EAzC0C,CA4D1C;;AACAuB,IAAAA,cAAc,CACTE,MADL,CACY,MADZ,EAEKG,KAFL,CAEWT,SAAS,CAACrD,MAAV,CAAiB,wBAAjB,CAFX,EAGK4D,IAHL,CAGU,OAHV,EAGmB,YAAY;AAC3B,aAAOzD,KAAK,CAACc,KAAN,CAAY8C,iBAAZ,CAA8B;AACjCC,QAAAA,cAAc,EAAE,CAACrE,mBAAmB,CAACsE,MAArB,CADiB;AAEjCC,QAAAA,iBAAiB,EAAE;AAFc,OAA9B,CAAP;AAIH,KARD,EASKN,IATL,CASU,cATV,EAS0B7D,aAAa,CAACoE,OAAd,CAAsBC,WAAtB,CAAkCC,OAT5D,EAUKT,IAVL,CAUU,MAVV,EAUkB,MAVlB,EAWKU,UAXL,CAWgB,KAAKlD,QAAL,CAAcmD,WAAd,CAA0BC,aAA1B,CAAwC,gCAAxC,EAA0EhE,OAA1E,CAXhB,EAYKoD,IAZL,CAYU,GAZV,EAYe,UAAU/E,CAAV,EAAa;AACxB,UAAI4F,EAAE,GAAGpD,eAAe,CAACoB,cAAhB,CAA+B5D,CAAC,CAACiC,WAAD,CAAhC,CAAT;AACA,UAAI4D,EAAE,GAAGD,EAAT;AACA,UAAIE,EAAE,GAAGtD,eAAe,CAACqB,aAAhB,CAA8B7D,CAAC,CAAC+F,QAAF,CAAWK,GAAzC,CAAT;AACA,UAAIJ,EAAE,GAAGxD,eAAe,CAACqB,aAAhB,CAA8B7D,CAAC,CAACiG,SAAF,CAAYI,IAA1C,CAAT;AACA,aAAOpF,KAAK,CAACkF,qBAAN,CAA4B;AAAEP,QAAAA,EAAE,EAAEA,EAAN;AAAUC,QAAAA,EAAE,EAAEA,EAAd;AAAkBC,QAAAA,EAAE,EAAEA,EAAtB;AAA0BE,QAAAA,EAAE,EAAEA;AAA9B,OAA5B,EAAgE3C,WAAhE,CAAP;AACH,KAlBD;AAmBA;AACR;AACA;;AACQuB,IAAAA,cAAc,CACTE,MADL,CACY,MADZ,EAEKG,KAFL,CAEWT,SAAS,CAACrD,MAAV,CAAiB,UAAjB,CAFX,EAGK4D,IAHL,CAGU,OAHV,EAGmB,YAAY;AAC3B,aAAOzD,KAAK,CAACc,KAAN,CAAY8C,iBAAZ,CAA8B;AACjCC,QAAAA,cAAc,EAAE,CACZrE,mBAAmB,CAACwF,IADR,EAEZxF,mBAAmB,CAACsE,MAFR,CADiB;AAKjCC,QAAAA,iBAAiB,EAAE;AALc,OAA9B,CAAP;AAOH,KAXD,EAYKN,IAZL,CAYU,cAZV,EAY0B7D,aAAa,CAACoE,OAAd,CAAsBiB,GAAtB,CAA0BC,OAA1B,CAAkChB,OAZ5D,EAaKT,IAbL,CAaU,cAbV,EAa0B7D,aAAa,CAACoE,OAAd,CAAsBC,WAAtB,CAAkCC,OAb5D,EAcKT,IAdL,CAcU,MAdV,EAckB/D,KAAK,CAACyF,eAdxB,EAeK1B,IAfL,CAeU,sBAfV,EAekC,KAflC,EAgBKU,UAhBL,CAgBgB,KAAKlD,QAAL,CAAcmD,WAAd,CAA0BC,aAA1B,CAAwC,0BAAxC,EAAoEhE,OAApE,CAhBhB,EAiBKoD,IAjBL,CAiBU,GAjBV,EAiBe,UAAU/E,CAAV,EAAa;AACxB,UAAI4F,EAAE,GAAGpD,eAAe,CAACoB,cAAhB,CAA+B5D,CAAC,CAACiC,WAAD,CAAhC,IACLmC,QAAQ,GAAG,CADf;AAEA,UAAIyB,EAAE,GAAGD,EAAE,GAAGxB,QAAd;AACA,UAAI0B,EAAE,GAAGtD,eAAe,CAACqB,aAAhB,CAA8BI,IAAI,CAACV,uBAAuB,GAAG,KAAH,GAAW,KAAnC,CAAJ,CAA8CvD,CAAC,CAACiG,SAAF,CAAYI,IAA1D,EAAgErG,CAAC,CAACiG,SAAF,CAAYC,IAA5E,CAA9B,CAAT;AACA,UAAIF,EAAE,GAAGF,EAAE,GACP7B,IAAI,CAACyC,GAAL,CAASlE,eAAe,CAACqB,aAAhB,CAA8B7D,CAAC,CAACiG,SAAF,CAAYI,IAA1C,IACL7D,eAAe,CAACqB,aAAhB,CAA8B7D,CAAC,CAACiG,SAAF,CAAYC,IAA1C,CADJ,CADJ;AAGA,aAAOjF,KAAK,CAACkF,qBAAN,CAA4B;AAAEP,QAAAA,EAAE,EAAEA,EAAN;AAAUC,QAAAA,EAAE,EAAEA,EAAd;AAAkBC,QAAAA,EAAE,EAAEA,EAAtB;AAA0BE,QAAAA,EAAE,EAAEA;AAA9B,OAA5B,EAAgE3C,WAAhE,CAAP;AACH,KA1BD;AA2BA;AACR;AACA;;AACQuB,IAAAA,cAAc,CACTE,MADL,CACY,MADZ,EAEKG,KAFL,CAEWT,SAAS,CAACrD,MAAV,CAAiB,qBAAjB,CAFX,EAGK4D,IAHL,CAGU,OAHV,EAGmB,gBAHnB,EAIKA,IAJL,CAIU,SAJV,EAIqB,CAJrB,EAKKA,IALL,CAKU,GALV,EAKe,UAAU/E,CAAV,EAAa;AACxB,UAAI4F,EAAE,GAAGpD,eAAe,CAACoB,cAAhB,CAA+B5D,CAAC,CAACiC,WAAD,CAAhC,IACLmC,QAAQ,GAAG,CADf;AAEA,UAAIyB,EAAE,GAAGD,EAAE,GAAGxB,QAAd;AACA,UAAI0B,EAAE,GAAGtD,eAAe,CAACqB,aAAhB,CAA8B7D,CAAC,CAAC+F,QAAF,CAAW1B,GAAzC,CAAT;AACA,UAAI2B,EAAE,GAAGxD,eAAe,CAACqB,aAAhB,CAA8B7D,CAAC,CAAC+F,QAAF,CAAWK,GAAzC,CAAT;AACA,aAAOnF,KAAK,CAACkF,qBAAN,CAA4B;AAAEP,QAAAA,EAAE,EAAEA,EAAN;AAAUC,QAAAA,EAAE,EAAEA,EAAd;AAAkBC,QAAAA,EAAE,EAAEA,EAAtB;AAA0BE,QAAAA,EAAE,EAAEA;AAA9B,OAA5B,EAAgE3C,WAAhE,CAAP;AACH,KAZD;AAaA;AACR;AACA;;AACQuB,IAAAA,cAAc,CACTE,MADL,CACY,MADZ,EAEKG,KAFL,CAEWT,SAAS,CAACrD,MAAV,CAAiB,oBAAjB,CAFX,EAGK4D,IAHL,CAGU,OAHV,EAGmB,YAAY;AAC3B,aAAOzD,KAAK,CAACc,KAAN,CAAY8C,iBAAZ,CAA8B;AACjCC,QAAAA,cAAc,EAAE,CAACrE,mBAAmB,CAACsE,MAArB,CADiB;AAEjCC,QAAAA,iBAAiB,EAAE;AAFc,OAA9B,CAAP;AAIH,KARD,EASKN,IATL,CASU,cATV,EAS0B7D,aAAa,CAACoE,OAAd,CAAsBC,WAAtB,CAAkCoB,OAT5D,EAUK5B,IAVL,CAUU,MAVV,EAUkB,MAVlB,EAWKU,UAXL,CAWgB,KAAKlD,QAAL,CAAcmD,WAAd,CAA0BC,aAA1B,CAAwC,gCAAxC,EAA0EhE,OAA1E,CAXhB,EAYKoD,IAZL,CAYU,GAZV,EAYe,UAAU/E,CAAV,EAAa;AACxB,UAAI4F,EAAE,GAAGpD,eAAe,CAACoB,cAAhB,CAA+B5D,CAAC,CAACiC,WAAD,CAAhC,IACLmC,QAAQ,GAAG,CADf;AAEA,UAAIyB,EAAE,GAAGD,EAAE,GAAGxB,QAAQ,GAAG,CAAzB;AACA,UAAI0B,EAAE,GAAGtD,eAAe,CAACqB,aAAhB,CAA8B7D,CAAC,CAAC+F,QAAF,CAAW1B,GAAzC,CAAT;AACA,UAAI2B,EAAE,GAAGxD,eAAe,CAACqB,aAAhB,CAA8B7D,CAAC,CAAC+F,QAAF,CAAW1B,GAAzC,CAAT;AACA,aAAOpD,KAAK,CAACkF,qBAAN,CAA4B;AAAEP,QAAAA,EAAE,EAAEA,EAAN;AAAUC,QAAAA,EAAE,EAAEA,EAAd;AAAkBC,QAAAA,EAAE,EAAEA,EAAtB;AAA0BE,QAAAA,EAAE,EAAEA;AAA9B,OAA5B,EAAgE3C,WAAhE,CAAP;AACH,KAnBD;AAoBA;AACR;AACA;;AACQuB,IAAAA,cAAc,CACTE,MADL,CACY,MADZ,EAEKG,KAFL,CAEWT,SAAS,CAACrD,MAAV,CAAiB,aAAjB,CAFX,EAGK4D,IAHL,CAGU,MAHV,EAGkB,MAHlB,EAIKA,IAJL,CAIU,OAJV,EAImB,YAAY;AAC3B,aAAOzD,KAAK,CAACc,KAAN,CAAY8C,iBAAZ,CAA8B;AACjCC,QAAAA,cAAc,EAAE,CAACrE,mBAAmB,CAACsE,MAArB,CADiB;AAEjCC,QAAAA,iBAAiB,EAAE;AAFc,OAA9B,CAAP;AAIH,KATD,EAUKN,IAVL,CAUU,cAVV,EAU0B,CAV1B,EAWKU,UAXL,CAWgB,KAAKlD,QAAL,CAAcmD,WAAd,CAA0BC,aAA1B,CAAwC,uBAAxC,EAAiEhE,OAAjE,CAXhB,EAYKoD,IAZL,CAYU,GAZV,EAYe,UAAU/E,CAAV,EAAa;AACxB,UAAI4F,EAAE,GAAGpD,eAAe,CAACoB,cAAhB,CAA+B5D,CAAC,CAACiC,WAAD,CAAhC,IACLmC,QAAQ,GAAG,CADf;AAEA,UAAIyB,EAAE,GAAGD,EAAE,GAAGxB,QAAd;AACA,UAAI0B,EAAE,GAAGtD,eAAe,CAACqB,aAAhB,CAA8B7D,CAAC,CAACiG,SAAF,CAAYW,IAA1C,CAAT;AACA,UAAIZ,EAAE,GAAGF,EAAT;AACA,aAAO7E,KAAK,CAACkF,qBAAN,CAA4B;AAAEP,QAAAA,EAAE,EAAEA,EAAN;AAAUC,QAAAA,EAAE,EAAEA,EAAd;AAAkBC,QAAAA,EAAE,EAAEA,EAAtB;AAA0BE,QAAAA,EAAE,EAAEA;AAA9B,OAA5B,EAAgE3C,WAAhE,CAAP;AACH,KAnBD;AAoBA;AACR;AACA;;AACQuB,IAAAA,cAAc,CACTE,MADL,CACY,MADZ,EAEKG,KAFL,CAEWT,SAAS,CAACrD,MAAV,CAAiB,kBAAjB,CAFX,EAGK4D,IAHL,CAGU,OAHV,EAGmB,YAAY;AAC3B,aAAOzD,KAAK,CAACc,KAAN,CAAY8C,iBAAZ,CAA8B;AACjCC,QAAAA,cAAc,EAAE,CAACrE,mBAAmB,CAACsE,MAArB,CADiB;AAEjCC,QAAAA,iBAAiB,EAAE;AAFc,OAA9B,CAAP;AAIH,KARD,EASKN,IATL,CASU,cATV,EAS0B7D,aAAa,CAACoE,OAAd,CAAsBC,WAAtB,CAAkCoB,OAT5D,EAUK5B,IAVL,CAUU,MAVV,EAUkB,MAVlB,EAWKU,UAXL,CAWgB,KAAKlD,QAAL,CAAcmD,WAAd,CAA0BC,aAA1B,CAAwC,8BAAxC,EAAwEhE,OAAxE,CAXhB,EAYKoD,IAZL,CAYU,GAZV,EAYe,UAAU/E,CAAV,EAAa;AACxB,UAAI4F,EAAE,GAAGpD,eAAe,CAACoB,cAAhB,CAA+B5D,CAAC,CAACiC,WAAD,CAAhC,IACLmC,QAAQ,GAAG,CADf;AAEA,UAAIyB,EAAE,GAAGD,EAAE,GAAGxB,QAAQ,GAAG,CAAzB;AACA,UAAI0B,EAAE,GAAGtD,eAAe,CAACqB,aAAhB,CAA8B7D,CAAC,CAAC+F,QAAF,CAAWK,GAAzC,CAAT;AACA,UAAIJ,EAAE,GAAGxD,eAAe,CAACqB,aAAhB,CAA8B7D,CAAC,CAAC+F,QAAF,CAAWK,GAAzC,CAAT;AACA,aAAOnF,KAAK,CAACkF,qBAAN,CAA4B;AAAEP,QAAAA,EAAE,EAAEA,EAAN;AAAUC,QAAAA,EAAE,EAAEA,EAAd;AAAkBC,QAAAA,EAAE,EAAEA,EAAtB;AAA0BE,QAAAA,EAAE,EAAEA;AAA9B,OAA5B,EAAgE3C,WAAhE,CAAP;AACH,KAnBD;AAoBA;AACR;AACA;;AACQ,QAAIwD,OAAO,GAAG7B,YAAY,CAACP,SAAb,CAAuB,gBAAvB,EAAyCvC,IAAzC,CAA8C,UAAUlC,CAAV,EAAa;AACrE,aAAOA,CAAC,CAAC8G,QAAF,CAAWC,GAAX,CAAe,UAAUC,OAAV,EAAmB;AACrC,YAAIpE,EAAJ;;AACA,eAAOA,EAAE,GAAG;AACJyB,UAAAA,GAAG,EAAErE,CAAC,CAAC+F,QAAF,CAAW1B,GADZ;AAEJ+B,UAAAA,GAAG,EAAEpG,CAAC,CAAC+F,QAAF,CAAWK;AAFZ,SAAL,EAIHxD,EAAE,CAACX,WAAD,CAAF,GAAkBjC,CAAC,CAACiC,WAAD,CAJhB,EAKHW,EAAE,CAACqE,KAAH,GAAWD,OALR,EAMHpE,EANJ;AAOH,OATM,CAAP;AAUH,KAXa,CAAd;AAYAiE,IAAAA,OAAO,CAACnC,IAAR,GAAeC,MAAf;AACA,QAAIuC,YAAY,GAAGL,OAAO,CAAChC,KAAR,GAAgBC,MAAhB,CAAuB,QAAvB,CAAnB;AACA+B,IAAAA,OAAO,CACF5B,KADL,CACWiC,YADX,EAEKnC,IAFL,CAEU,GAFV,EAEe7D,aAAa,CAACoE,OAAd,CAAsB6B,MAAtB,CAA6BC,MAF5C,EAGKrC,IAHL,CAGU,OAHV,EAGmB,YAAY;AAC3B,aAAOzD,KAAK,CAACc,KAAN,CAAY8C,iBAAZ,CAA8B;AACjCC,QAAAA,cAAc,EAAE,CACZrE,mBAAmB,CAACwF,IADR,EAEZxF,mBAAmB,CAACsE,MAFR,CADiB;AAKjCC,QAAAA,iBAAiB,EAAE;AALc,OAA9B,CAAP;AAOH,KAXD,EAYKN,IAZL,CAYU,cAZV,EAY0B7D,aAAa,CAACoE,OAAd,CAAsB6B,MAAtB,CAA6BX,OAA7B,CAAqChB,OAZ/D,EAaKT,IAbL,CAaU,IAbV,EAagBjB,SAbhB,EAcK2B,UAdL,CAcgB,KAAKlD,QAAL,CAAcmD,WAAd,CAA0BC,aAA1B,CAAwC,wBAAxC,EAAkEhE,OAAlE,CAdhB,EAeKoD,IAfL,CAeU,IAfV,EAegBhB,SAfhB;AAgBA,SAAKsD,oBAAL;AACA,SAAKC,uBAAL;AACH,GAtOD;;AAuOAlG,EAAAA,OAAO,CAACV,SAAR,CAAkB2G,oBAAlB,GAAyC,YAAY;AACjD,QAAIE,IAAI,GAAG,IAAX;AACA,QAAIxF,OAAO,GAAG,KAAKC,UAAL,EAAd;AACA,QAAIC,WAAW,GAAGF,OAAO,CAACG,IAAR,CAAaD,WAA/B;AACA,SAAKuF,MAAL,CACK/C,SADL,CACe,qBADf,EAEKgD,EAFL,CAEQ,WAFR,EAEqB,UAAUC,KAAV,EAAiB;AAClC,UAAIC,cAAc,GAAGxG,MAAM,CAAC,IAAD,CAA3B;AACA,UAAIyG,aAAa,GAAGzG,MAAM,CAAC,KAAK0G,UAAN,CAA1B;AACAD,MAAAA,aAAa,CACRzG,MADL,CACY,UADZ,EAEK2G,OAFL,CAEa,SAFb,EAEwB,IAFxB,EAGK/C,IAHL,CAGU,cAHV,EAG0B7D,aAAa,CAACoE,OAAd,CAAsBiB,GAAtB,CAA0BC,OAA1B,CAAkCuB,OAH5D,EAHkC,CAOlC;;AACAR,MAAAA,IAAI,CAAChF,QAAL,CAAcyF,MAAd,CAAqBC,aAArB,CAAmClH,MAAM,CAACmH,OAAP,CAAeC,IAAlD,EAAwD;AACpDR,QAAAA,cAAc,EAAEA,cADoC;AAEpDS,QAAAA,KAAK,EAAE,CACH;AACIC,UAAAA,KAAK,EAAEtG,OAAO,CAACuG,OAAR,CAAgBC,UAD3B;AAEItB,UAAAA,KAAK,EAAES,KAAK,CAACzF,WAAD,CAFhB;AAGIuG,UAAAA,KAAK,EAAEjB,IAAI,CAACnF,KAAL,CAAW8C,iBAAX,CAA6B;AAChCC,YAAAA,cAAc,EAAE,CAACrE,mBAAmB,CAAC2H,OAArB;AADgB,WAA7B;AAHX,SADG,EAQH;AACIJ,UAAAA,KAAK,EAAE,SADX;AAEIpB,UAAAA,KAAK,EAAES,KAAK,CAAC3B,QAAN,CAAe1B;AAF1B,SARG,EAYH;AACIgE,UAAAA,KAAK,EAAE,IADX;AAEIpB,UAAAA,KAAK,EAAES,KAAK,CAACzB,SAAN,CAAgBC;AAF3B,SAZG,EAgBH;AACImC,UAAAA,KAAK,EAAE,QADX;AAEIpB,UAAAA,KAAK,EAAES,KAAK,CAACzB,SAAN,CAAgBW;AAF3B,SAhBG,EAoBH;AACIyB,UAAAA,KAAK,EAAE,IADX;AAEIpB,UAAAA,KAAK,EAAES,KAAK,CAACzB,SAAN,CAAgBI;AAF3B,SApBG,EAwBH;AACIgC,UAAAA,KAAK,EAAE,SADX;AAEIpB,UAAAA,KAAK,EAAES,KAAK,CAAC3B,QAAN,CAAeK;AAF1B,SAxBG,EA4BH;AACIiC,UAAAA,KAAK,EAAE,KADX;AAEIpB,UAAAA,KAAK,EAAES,KAAK,CAACzB,SAAN,CAAgBI,IAAhB,GAAuBqB,KAAK,CAACzB,SAAN,CAAgBC;AAFlD,SA5BG;AAF6C,OAAxD,EARkC,CA4ClC;;AACAqB,MAAAA,IAAI,CAAChF,QAAL,CAAcyF,MAAd,CAAqBC,aAArB,CAAmClH,MAAM,CAACK,OAAP,CAAesH,aAAlD,EAAiE;AAC7DC,QAAAA,OAAO,EAAEhB,cADoD;AAE7DD,QAAAA,KAAK,EAAEA;AAFsD,OAAjE;AAIH,KAnDD,EAoDKD,EApDL,CAoDQ,WApDR,EAoDqB,UAAUC,KAAV,EAAiB;AAClC,UAAIC,cAAc,GAAGxG,MAAM,CAAC,IAAD,CAA3B,CADkC,CAElC;;AACAoG,MAAAA,IAAI,CAAChF,QAAL,CAAcyF,MAAd,CAAqBC,aAArB,CAAmClH,MAAM,CAACK,OAAP,CAAewH,aAAlD,EAAiE;AAC7DD,QAAAA,OAAO,EAAEhB,cADoD;AAE7DD,QAAAA,KAAK,EAAEA;AAFsD,OAAjE;AAIAH,MAAAA,IAAI,CAAChF,QAAL,CAAcyF,MAAd,CAAqBC,aAArB,CAAmClH,MAAM,CAACmH,OAAP,CAAeW,IAAlD;AACH,KA5DD,EA6DKpB,EA7DL,CA6DQ,OA7DR,EA6DiB,UAAUC,KAAV,EAAiB;AAC9B;AACAH,MAAAA,IAAI,CAAChF,QAAL,CAAcyF,MAAd,CAAqBC,aAArB,CAAmClH,MAAM,CAACK,OAAP,CAAe0H,SAAlD,EAA6D;AACzDH,QAAAA,OAAO,EAAExH,MAAM,CAAC,IAAD,CAD0C;AAEzDuG,QAAAA,KAAK,EAAEA;AAFkD,OAA7D;AAIH,KAnED,EAoEKD,EApEL,CAoEQ,UApER,EAoEoB,UAAUC,KAAV,EAAiB;AACjC,UAAIC,cAAc,GAAGxG,MAAM,CAAC,IAAD,CAA3B;AACA,UAAIyG,aAAa,GAAGzG,MAAM,CAAC,KAAK0G,UAAN,CAA1B;AACAD,MAAAA,aAAa,CACRzG,MADL,CACY,UADZ,EAEK2G,OAFL,CAEa,SAFb,EAEwB,KAFxB,EAGK/C,IAHL,CAGU,cAHV,EAG0B7D,aAAa,CAACoE,OAAd,CAAsBiB,GAAtB,CAA0BC,OAA1B,CAAkChB,OAH5D,EAHiC,CAOjC;;AACA+B,MAAAA,IAAI,CAAChF,QAAL,CAAcyF,MAAd,CAAqBC,aAArB,CAAmClH,MAAM,CAACK,OAAP,CAAe2H,YAAlD,EAAgE;AAC5DJ,QAAAA,OAAO,EAAEhB,cADmD;AAE5DD,QAAAA,KAAK,EAAEA;AAFqD,OAAhE,EARiC,CAYjC;;AACAH,MAAAA,IAAI,CAAChF,QAAL,CAAcyF,MAAd,CAAqBC,aAArB,CAAmClH,MAAM,CAACmH,OAAP,CAAec,IAAlD,EAAwD;AACpDrB,QAAAA,cAAc,EAAEA;AADoC,OAAxD;AAGH,KApFD;AAqFH,GAzFD;;AA0FAvG,EAAAA,OAAO,CAACV,SAAR,CAAkB4G,uBAAlB,GAA4C,YAAY;AACpD,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIxF,OAAO,GAAG,KAAKC,UAAL,EAAd;AACA,QAAIC,WAAW,GAAGF,OAAO,CAACG,IAAR,CAAaD,WAA/B;AACA,QAAIgH,eAAe,GAAG,KAAK1G,QAAL,CAAcC,eAAd,CAA8B0G,kBAA9B,EAAtB;AACA,SAAK1B,MAAL,CACK/C,SADL,CACe,QADf,EAEKgD,EAFL,CAEQ,WAFR,EAEqB,UAAUC,KAAV,EAAiB;AAClC,UAAIC,cAAc,GAAGxG,MAAM,CAAC,IAAD,CAA3B;AACAwG,MAAAA,cAAc,CACTG,OADL,CACa,SADb,EACwB,IADxB,EAEK/C,IAFL,CAEU,cAFV,EAE0B7D,aAAa,CAACoE,OAAd,CAAsB6B,MAAtB,CAA6BX,OAA7B,CAAqCuB,OAF/D,EAGKD,OAHL,CAGa,UAHb,EAGyB,KAHzB,EAFkC,CAMlC;;AACAP,MAAAA,IAAI,CAAChF,QAAL,CAAcyF,MAAd,CAAqBC,aAArB,CAAmClH,MAAM,CAACmH,OAAP,CAAeC,IAAlD,EAAwD;AACpDR,QAAAA,cAAc,EAAEA,cADoC;AAEpDS,QAAAA,KAAK,EAAE,CACH;AACIC,UAAAA,KAAK,EAAEtG,OAAO,CAACuG,OAAR,CAAgBC,UAD3B;AAEItB,UAAAA,KAAK,EAAES,KAAK,CAACzF,WAAD,CAFhB;AAGIuG,UAAAA,KAAK,EAAEjB,IAAI,CAACnF,KAAL,CAAW8C,iBAAX,CAA6B;AAChCC,YAAAA,cAAc,EAAE,CAACrE,mBAAmB,CAAC2H,OAArB;AADgB,WAA7B;AAHX,SADG,EAQH;AACIJ,UAAAA,KAAK,EAAE,SADX;AAEIpB,UAAAA,KAAK,EAAES,KAAK,CAACuB,eAAD;AAFhB,SARG;AAF6C,OAAxD,EAPkC,CAuBlC;;AACA1B,MAAAA,IAAI,CAAChF,QAAL,CAAcyF,MAAd,CAAqBC,aAArB,CAAmClH,MAAM,CAACK,OAAP,CAAe+H,iBAAlD,EAAqE;AACjER,QAAAA,OAAO,EAAEhB,cADwD;AAEjED,QAAAA,KAAK,EAAEA;AAF0D,OAArE;AAIH,KA9BD,EA+BKD,EA/BL,CA+BQ,WA/BR,EA+BqB,UAAUC,KAAV,EAAiB;AAClC,UAAIC,cAAc,GAAGxG,MAAM,CAAC,IAAD,CAA3B,CADkC,CAElC;;AACAoG,MAAAA,IAAI,CAAChF,QAAL,CAAcyF,MAAd,CAAqBC,aAArB,CAAmClH,MAAM,CAACK,OAAP,CAAegI,iBAAlD,EAAqE;AACjET,QAAAA,OAAO,EAAEhB,cADwD;AAEjED,QAAAA,KAAK,EAAEA;AAF0D,OAArE;AAIAH,MAAAA,IAAI,CAAChF,QAAL,CAAcyF,MAAd,CAAqBC,aAArB,CAAmClH,MAAM,CAACmH,OAAP,CAAeW,IAAlD;AACH,KAvCD,EAwCKpB,EAxCL,CAwCQ,OAxCR,EAwCiB,UAAUC,KAAV,EAAiB;AAC9B;AACAH,MAAAA,IAAI,CAAChF,QAAL,CAAcyF,MAAd,CAAqBC,aAArB,CAAmClH,MAAM,CAACK,OAAP,CAAeiI,aAAlD,EAAiE;AAC7DV,QAAAA,OAAO,EAAExH,MAAM,CAAC,IAAD,CAD8C;AAE7DuG,QAAAA,KAAK,EAAEA;AAFsD,OAAjE;AAIH,KA9CD,EA+CKD,EA/CL,CA+CQ,UA/CR,EA+CoB,UAAUC,KAAV,EAAiB;AACjC,UAAIC,cAAc,GAAGxG,MAAM,CAAC,IAAD,CAA3B;AACAwG,MAAAA,cAAc,CACTG,OADL,CACa,SADb,EACwB,KADxB,EAEK/C,IAFL,CAEU,cAFV,EAE0B7D,aAAa,CAACoE,OAAd,CAAsB6B,MAAtB,CAA6BX,OAA7B,CAAqChB,OAF/D,EAFiC,CAKjC;;AACA+B,MAAAA,IAAI,CAAChF,QAAL,CAAcyF,MAAd,CAAqBC,aAArB,CAAmClH,MAAM,CAACK,OAAP,CAAekI,gBAAlD,EAAoE;AAChEX,QAAAA,OAAO,EAAEhB,cADuD;AAEhED,QAAAA,KAAK,EAAEA;AAFyD,OAApE,EANiC,CAUjC;;AACAH,MAAAA,IAAI,CAAChF,QAAL,CAAcyF,MAAd,CAAqBC,aAArB,CAAmClH,MAAM,CAACmH,OAAP,CAAec,IAAlD,EAAwD;AACpDrB,QAAAA,cAAc,EAAEA;AADoC,OAAxD;AAGH,KA7DD;AA8DH,GAnED;;AAoEA,SAAOvG,OAAP;AACH,CA7Y4B,CA6Y3BR,SA7Y2B,CAA7B;;AA8YA,SAASQ,OAAT","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Component } from '../component';\nimport { CartesianOrientations, ColorClassNameTypes, Events, Roles, } from '../../interfaces';\nimport { Tools } from '../../tools';\nimport * as Configuration from '../../configuration';\n// D3 Imports\nimport { select } from 'd3-selection';\nvar Boxplot = /** @class */ (function (_super) {\n    __extends(Boxplot, _super);\n    function Boxplot() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'boxplot';\n        return _this;\n    }\n    Boxplot.prototype.render = function (animate) {\n        var _this = this;\n        // Grab container SVG\n        var svg = this.getContainerSVG({ withinChartClip: true });\n        var options = this.getOptions();\n        var groupMapsTo = options.data.groupMapsTo;\n        var dataGroupNames = this.model.getDataGroupNames();\n        /*\n         * Get graphable dimensions\n         */\n        var mainXScale = this.services.cartesianScales.getMainXScale();\n        var mainYScale = this.services.cartesianScales.getMainYScale();\n        var _a = mainXScale.range(), xScaleStart = _a[0], xScaleEnd = _a[1];\n        var _b = mainYScale.range(), yScaleEnd = _b[0], yScaleStart = _b[1];\n        var width = xScaleEnd - xScaleStart;\n        var height = yScaleEnd - yScaleStart;\n        if (width === 0) {\n            return;\n        }\n        // Get orientation of the chart\n        var cartesianScales = this.services.cartesianScales;\n        var orientation = cartesianScales.getOrientation();\n        var isInVerticalOrientation = orientation === CartesianOrientations.VERTICAL;\n        var _c = Tools.flipDomainAndRangeBasedOnOrientation(function (d, i) { return _this.services.cartesianScales.getDomainValue(d, i); }, function (d, i) { return _this.services.cartesianScales.getRangeValue(d, i); }, orientation), getXValue = _c[0], getYValue = _c[1];\n        var gridSize = Math.floor((isInVerticalOrientation ? width : height) / dataGroupNames.length);\n        var boxWidth = Math.min(gridSize / 2, 16);\n        var boxplotData = this.model.getBoxplotData();\n        /*\n         * update or initialize all box groups\n         */\n        var boxGroups = svg.selectAll('.box-group').data(boxplotData);\n        boxGroups.exit().remove();\n        var boxGroupsEnter = boxGroups\n            .enter()\n            .append('g')\n            .attr('class', 'box-group');\n        var allBoxGroups = boxGroups.merge(boxGroupsEnter);\n        /*\n         * draw the 2 range lines for each box\n         */\n        // Start range line\n        boxGroupsEnter\n            .append('path')\n            .merge(boxGroups.select('path.vertical-line.start'))\n            .attr('class', function () {\n            return _this.model.getColorClassName({\n                classNameTypes: [ColorClassNameTypes.STROKE],\n                originalClassName: 'vertical-line start',\n            });\n        })\n            .attr('stroke-width', Configuration.boxplot.strokeWidth.default)\n            .attr('fill', 'none')\n            .transition(this.services.transitions.getTransition('boxplot-update-verticalstartline', animate))\n            .attr('d', function (d) {\n            var x0 = cartesianScales.getDomainValue(d[groupMapsTo]);\n            var x1 = x0;\n            var y0 = cartesianScales.getRangeValue(d.whiskers.min);\n            var y1 = cartesianScales.getRangeValue(d.quartiles.q_25);\n            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, orientation);\n        });\n        // End range line\n        boxGroupsEnter\n            .append('path')\n            .merge(boxGroups.select('path.vertical-line.end'))\n            .attr('class', function () {\n            return _this.model.getColorClassName({\n                classNameTypes: [ColorClassNameTypes.STROKE],\n                originalClassName: 'vertical-line end',\n            });\n        })\n            .attr('stroke-width', Configuration.boxplot.strokeWidth.default)\n            .attr('fill', 'none')\n            .transition(this.services.transitions.getTransition('boxplot-update-verticalendline', animate))\n            .attr('d', function (d) {\n            var x0 = cartesianScales.getDomainValue(d[groupMapsTo]);\n            var x1 = x0;\n            var y0 = cartesianScales.getRangeValue(d.whiskers.max);\n            var y1 = cartesianScales.getRangeValue(d.quartiles.q_75);\n            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, orientation);\n        });\n        /*\n         * Draw out and update the boxes\n         */\n        boxGroupsEnter\n            .append('path')\n            .merge(boxGroups.select('path.box'))\n            .attr('class', function () {\n            return _this.model.getColorClassName({\n                classNameTypes: [\n                    ColorClassNameTypes.FILL,\n                    ColorClassNameTypes.STROKE,\n                ],\n                originalClassName: 'box',\n            });\n        })\n            .attr('fill-opacity', Configuration.boxplot.box.opacity.default)\n            .attr('stroke-width', Configuration.boxplot.strokeWidth.default)\n            .attr('role', Roles.GRAPHICS_SYMBOL)\n            .attr('aria-roledescription', 'box')\n            .transition(this.services.transitions.getTransition('boxplot-update-quartiles', animate))\n            .attr('d', function (d) {\n            var x0 = cartesianScales.getDomainValue(d[groupMapsTo]) -\n                boxWidth / 2;\n            var x1 = x0 + boxWidth;\n            var y0 = cartesianScales.getRangeValue(Math[isInVerticalOrientation ? 'max' : 'min'](d.quartiles.q_75, d.quartiles.q_25));\n            var y1 = y0 +\n                Math.abs(cartesianScales.getRangeValue(d.quartiles.q_75) -\n                    cartesianScales.getRangeValue(d.quartiles.q_25));\n            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, orientation);\n        });\n        /*\n         * Draw out and update highlight areas\n         */\n        boxGroupsEnter\n            .append('path')\n            .merge(boxGroups.select('path.highlight-area'))\n            .attr('class', 'highlight-area')\n            .attr('opacity', 0)\n            .attr('d', function (d) {\n            var x0 = cartesianScales.getDomainValue(d[groupMapsTo]) -\n                boxWidth / 2;\n            var x1 = x0 + boxWidth;\n            var y0 = cartesianScales.getRangeValue(d.whiskers.min);\n            var y1 = cartesianScales.getRangeValue(d.whiskers.max);\n            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, orientation);\n        });\n        /*\n         * Draw out and update the starting whisker\n         */\n        boxGroupsEnter\n            .append('path')\n            .merge(boxGroups.select('path.whisker.start'))\n            .attr('class', function () {\n            return _this.model.getColorClassName({\n                classNameTypes: [ColorClassNameTypes.STROKE],\n                originalClassName: 'whisker start',\n            });\n        })\n            .attr('stroke-width', Configuration.boxplot.strokeWidth.thicker)\n            .attr('fill', 'none')\n            .transition(this.services.transitions.getTransition('boxplot-update-startingwhisker', animate))\n            .attr('d', function (d) {\n            var x0 = cartesianScales.getDomainValue(d[groupMapsTo]) -\n                boxWidth / 4;\n            var x1 = x0 + boxWidth / 2;\n            var y0 = cartesianScales.getRangeValue(d.whiskers.min);\n            var y1 = cartesianScales.getRangeValue(d.whiskers.min);\n            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, orientation);\n        });\n        /*\n         * Draw out and update the median line\n         */\n        boxGroupsEnter\n            .append('path')\n            .merge(boxGroups.select('path.median'))\n            .attr('fill', 'none')\n            .attr('class', function () {\n            return _this.model.getColorClassName({\n                classNameTypes: [ColorClassNameTypes.STROKE],\n                originalClassName: 'median',\n            });\n        })\n            .attr('stroke-width', 2)\n            .transition(this.services.transitions.getTransition('boxplot-update-median', animate))\n            .attr('d', function (d) {\n            var x0 = cartesianScales.getDomainValue(d[groupMapsTo]) -\n                boxWidth / 2;\n            var x1 = x0 + boxWidth;\n            var y0 = cartesianScales.getRangeValue(d.quartiles.q_50);\n            var y1 = y0;\n            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, orientation);\n        });\n        /*\n         * Draw out and update the ending whisker\n         */\n        boxGroupsEnter\n            .append('path')\n            .merge(boxGroups.select('path.whisker.end'))\n            .attr('class', function () {\n            return _this.model.getColorClassName({\n                classNameTypes: [ColorClassNameTypes.STROKE],\n                originalClassName: 'whisker end',\n            });\n        })\n            .attr('stroke-width', Configuration.boxplot.strokeWidth.thicker)\n            .attr('fill', 'none')\n            .transition(this.services.transitions.getTransition('boxplot-update-endingwhisker', animate))\n            .attr('d', function (d) {\n            var x0 = cartesianScales.getDomainValue(d[groupMapsTo]) -\n                boxWidth / 4;\n            var x1 = x0 + boxWidth / 2;\n            var y0 = cartesianScales.getRangeValue(d.whiskers.max);\n            var y1 = cartesianScales.getRangeValue(d.whiskers.max);\n            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, orientation);\n        });\n        /*\n         * Draw out and update the outlier circles\n         */\n        var circles = allBoxGroups.selectAll('circle.outlier').data(function (d) {\n            return d.outliers.map(function (outlier) {\n                var _a;\n                return _a = {\n                        min: d.whiskers.min,\n                        max: d.whiskers.max\n                    },\n                    _a[groupMapsTo] = d[groupMapsTo],\n                    _a.value = outlier,\n                    _a;\n            });\n        });\n        circles.exit().remove();\n        var circlesEnter = circles.enter().append('circle');\n        circles\n            .merge(circlesEnter)\n            .attr('r', Configuration.boxplot.circle.radius)\n            .attr('class', function () {\n            return _this.model.getColorClassName({\n                classNameTypes: [\n                    ColorClassNameTypes.FILL,\n                    ColorClassNameTypes.STROKE,\n                ],\n                originalClassName: 'outlier',\n            });\n        })\n            .attr('fill-opacity', Configuration.boxplot.circle.opacity.default)\n            .attr('cx', getXValue)\n            .transition(this.services.transitions.getTransition('boxplot-update-circles', animate))\n            .attr('cy', getYValue);\n        this.addBoxEventListeners();\n        this.addCircleEventListeners();\n    };\n    Boxplot.prototype.addBoxEventListeners = function () {\n        var self = this;\n        var options = this.getOptions();\n        var groupMapsTo = options.data.groupMapsTo;\n        this.parent\n            .selectAll('path.highlight-area')\n            .on('mouseover', function (datum) {\n            var hoveredElement = select(this);\n            var parentElement = select(this.parentNode);\n            parentElement\n                .select('path.box')\n                .classed('hovered', true)\n                .attr('fill-opacity', Configuration.boxplot.box.opacity.hovered);\n            // Show tooltip for single datapoint\n            self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n                hoveredElement: hoveredElement,\n                items: [\n                    {\n                        label: options.tooltip.groupLabel,\n                        value: datum[groupMapsTo],\n                        class: self.model.getColorClassName({\n                            classNameTypes: [ColorClassNameTypes.TOOLTIP],\n                        }),\n                    },\n                    {\n                        label: 'Minimum',\n                        value: datum.whiskers.min,\n                    },\n                    {\n                        label: 'Q1',\n                        value: datum.quartiles.q_25,\n                    },\n                    {\n                        label: 'Median',\n                        value: datum.quartiles.q_50,\n                    },\n                    {\n                        label: 'Q3',\n                        value: datum.quartiles.q_75,\n                    },\n                    {\n                        label: 'Maximum',\n                        value: datum.whiskers.max,\n                    },\n                    {\n                        label: 'IQR',\n                        value: datum.quartiles.q_75 - datum.quartiles.q_25,\n                    },\n                ],\n            });\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Boxplot.BOX_MOUSEOVER, {\n                element: hoveredElement,\n                datum: datum,\n            });\n        })\n            .on('mousemove', function (datum) {\n            var hoveredElement = select(this);\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Boxplot.BOX_MOUSEMOVE, {\n                element: hoveredElement,\n                datum: datum,\n            });\n            self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n        })\n            .on('click', function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Boxplot.BOX_CLICK, {\n                element: select(this),\n                datum: datum,\n            });\n        })\n            .on('mouseout', function (datum) {\n            var hoveredElement = select(this);\n            var parentElement = select(this.parentNode);\n            parentElement\n                .select('path.box')\n                .classed('hovered', false)\n                .attr('fill-opacity', Configuration.boxplot.box.opacity.default);\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Boxplot.BOX_MOUSEOUT, {\n                element: hoveredElement,\n                datum: datum,\n            });\n            // Hide tooltip\n            self.services.events.dispatchEvent(Events.Tooltip.HIDE, {\n                hoveredElement: hoveredElement,\n            });\n        });\n    };\n    Boxplot.prototype.addCircleEventListeners = function () {\n        var self = this;\n        var options = this.getOptions();\n        var groupMapsTo = options.data.groupMapsTo;\n        var rangeIdentifier = this.services.cartesianScales.getRangeIdentifier();\n        this.parent\n            .selectAll('circle')\n            .on('mouseover', function (datum) {\n            var hoveredElement = select(this);\n            hoveredElement\n                .classed('hovered', true)\n                .attr('fill-opacity', Configuration.boxplot.circle.opacity.hovered)\n                .classed('unfilled', false);\n            // Show tooltip for single datapoint\n            self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n                hoveredElement: hoveredElement,\n                items: [\n                    {\n                        label: options.tooltip.groupLabel,\n                        value: datum[groupMapsTo],\n                        class: self.model.getColorClassName({\n                            classNameTypes: [ColorClassNameTypes.TOOLTIP],\n                        }),\n                    },\n                    {\n                        label: 'Outlier',\n                        value: datum[rangeIdentifier],\n                    },\n                ],\n            });\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Boxplot.OUTLIER_MOUSEOVER, {\n                element: hoveredElement,\n                datum: datum,\n            });\n        })\n            .on('mousemove', function (datum) {\n            var hoveredElement = select(this);\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Boxplot.OUTLIER_MOUSEMOVE, {\n                element: hoveredElement,\n                datum: datum,\n            });\n            self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n        })\n            .on('click', function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Boxplot.OUTLIER_CLICK, {\n                element: select(this),\n                datum: datum,\n            });\n        })\n            .on('mouseout', function (datum) {\n            var hoveredElement = select(this);\n            hoveredElement\n                .classed('hovered', false)\n                .attr('fill-opacity', Configuration.boxplot.circle.opacity.default);\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Boxplot.OUTLIER_MOUSEOUT, {\n                element: hoveredElement,\n                datum: datum,\n            });\n            // Hide tooltip\n            self.services.events.dispatchEvent(Events.Tooltip.HIDE, {\n                hoveredElement: hoveredElement,\n            });\n        });\n    };\n    return Boxplot;\n}(Component));\nexport { Boxplot };\n//# sourceMappingURL=../../../src/components/graphs/boxplot.js.map"]},"metadata":{},"sourceType":"module"}