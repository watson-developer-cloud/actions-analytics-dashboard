{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Pie } from './pie';\nimport { DOMUtils } from '../../services';\nimport { Tools } from '../../tools'; // D3 Imports\n\nimport { select } from 'd3-selection';\nimport { interpolateNumber, interpolateRound } from 'd3-interpolate';\n\nvar Donut =\n/** @class */\nfunction (_super) {\n  __extends(Donut, _super);\n\n  function Donut() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'donut';\n    return _this;\n  }\n\n  Donut.prototype.render = function (animate) {\n    if (animate === void 0) {\n      animate = true;\n    } // Call render() from Pie\n\n\n    _super.prototype.render.call(this, animate);\n\n    var self = this; // if there are no data, remove the center content\n    // that is the old one and do nothing\n\n    if (this.model.isDataEmpty()) {\n      this.getContainerSVG().select('g.center').remove();\n      return;\n    }\n\n    var svg = DOMUtils.appendOrSelect(this.getContainerSVG(), 'g.center');\n    var options = this.getOptions(); // Compute the outer radius needed\n\n    var radius = this.computeRadius(); // Add the number shown in the center of the donut\n\n    DOMUtils.appendOrSelect(svg, 'text.donut-figure').attr('text-anchor', 'middle').style('font-size', function () {\n      return options.donut.center.numberFontSize(radius);\n    }).transition(this.services.transitions.getTransition('donut-figure-enter-update', animate)).tween('text', function () {\n      return self.centerNumberTween(select(this));\n    }); // Add the label below the number in the center of the donut\n\n    DOMUtils.appendOrSelect(svg, 'text.donut-title').attr('text-anchor', 'middle').style('font-size', function () {\n      return options.donut.center.titleFontSize(radius);\n    }).attr('y', options.donut.center.titleYPosition(radius)).text(Tools.getProperty(options, 'donut', 'center', 'label'));\n  };\n\n  Donut.prototype.getInnerRadius = function () {\n    // Compute the outer radius needed\n    var radius = this.computeRadius();\n    return radius * (3 / 4);\n  };\n\n  Donut.prototype.centerNumberTween = function (d3Ref) {\n    var options = this.getOptions();\n    var donutCenterFigure = Tools.getProperty(options, 'donut', 'center', 'number');\n\n    if (donutCenterFigure === null) {\n      donutCenterFigure = this.model.getDisplayData().reduce(function (accumulator, d) {\n        return accumulator + d.value;\n      }, 0);\n    } // Remove commas from the current value string, and convert to an int\n\n\n    var currentValue = parseInt(d3Ref.text().replace(/[, ]+/g, ''), 10) || 0;\n    var interpolateFunction;\n\n    if (currentValue % 1 === 0 && donutCenterFigure % 1 === 0) {\n      interpolateFunction = interpolateRound;\n    } else {\n      interpolateFunction = interpolateNumber;\n    }\n\n    var i = interpolateFunction(currentValue, donutCenterFigure);\n    return function (t) {\n      var numberFormatter = options.donut.center.numberFormatter;\n      d3Ref.text(numberFormatter(i(t)));\n    };\n  };\n\n  return Donut;\n}(Pie);\n\nexport { Donut };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/components/graphs/donut.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Pie","DOMUtils","Tools","select","interpolateNumber","interpolateRound","Donut","_super","_this","apply","arguments","type","render","animate","call","self","model","isDataEmpty","getContainerSVG","remove","svg","appendOrSelect","options","getOptions","radius","computeRadius","attr","style","donut","center","numberFontSize","transition","services","transitions","getTransition","tween","centerNumberTween","titleFontSize","titleYPosition","text","getProperty","getInnerRadius","d3Ref","donutCenterFigure","getDisplayData","reduce","accumulator","value","currentValue","parseInt","replace","interpolateFunction","i","t","numberFormatter"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Pie } from './pie';\nimport { DOMUtils } from '../../services';\nimport { Tools } from '../../tools';\n// D3 Imports\nimport { select } from 'd3-selection';\nimport { interpolateNumber, interpolateRound } from 'd3-interpolate';\nvar Donut = /** @class */ (function (_super) {\n    __extends(Donut, _super);\n    function Donut() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'donut';\n        return _this;\n    }\n    Donut.prototype.render = function (animate) {\n        if (animate === void 0) { animate = true; }\n        // Call render() from Pie\n        _super.prototype.render.call(this, animate);\n        var self = this;\n        // if there are no data, remove the center content\n        // that is the old one and do nothing\n        if (this.model.isDataEmpty()) {\n            this.getContainerSVG().select('g.center').remove();\n            return;\n        }\n        var svg = DOMUtils.appendOrSelect(this.getContainerSVG(), 'g.center');\n        var options = this.getOptions();\n        // Compute the outer radius needed\n        var radius = this.computeRadius();\n        // Add the number shown in the center of the donut\n        DOMUtils.appendOrSelect(svg, 'text.donut-figure')\n            .attr('text-anchor', 'middle')\n            .style('font-size', function () {\n            return options.donut.center.numberFontSize(radius);\n        })\n            .transition(this.services.transitions.getTransition('donut-figure-enter-update', animate))\n            .tween('text', function () {\n            return self.centerNumberTween(select(this));\n        });\n        // Add the label below the number in the center of the donut\n        DOMUtils.appendOrSelect(svg, 'text.donut-title')\n            .attr('text-anchor', 'middle')\n            .style('font-size', function () {\n            return options.donut.center.titleFontSize(radius);\n        })\n            .attr('y', options.donut.center.titleYPosition(radius))\n            .text(Tools.getProperty(options, 'donut', 'center', 'label'));\n    };\n    Donut.prototype.getInnerRadius = function () {\n        // Compute the outer radius needed\n        var radius = this.computeRadius();\n        return radius * (3 / 4);\n    };\n    Donut.prototype.centerNumberTween = function (d3Ref) {\n        var options = this.getOptions();\n        var donutCenterFigure = Tools.getProperty(options, 'donut', 'center', 'number');\n        if (donutCenterFigure === null) {\n            donutCenterFigure = this.model\n                .getDisplayData()\n                .reduce(function (accumulator, d) {\n                return accumulator + d.value;\n            }, 0);\n        }\n        // Remove commas from the current value string, and convert to an int\n        var currentValue = parseInt(d3Ref.text().replace(/[, ]+/g, ''), 10) || 0;\n        var interpolateFunction;\n        if (currentValue % 1 === 0 && donutCenterFigure % 1 === 0) {\n            interpolateFunction = interpolateRound;\n        }\n        else {\n            interpolateFunction = interpolateNumber;\n        }\n        var i = interpolateFunction(currentValue, donutCenterFigure);\n        return function (t) {\n            var numberFormatter = options.donut.center.numberFormatter;\n            d3Ref.text(numberFormatter(i(t)));\n        };\n    };\n    return Donut;\n}(Pie));\nexport { Donut };\n//# sourceMappingURL=../../../src/components/graphs/donut.js.map"]},"metadata":{},"sourceType":"module"}