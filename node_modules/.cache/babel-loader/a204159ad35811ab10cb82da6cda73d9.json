{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Component } from '../component';\nimport { Events, Roles, ToolbarControlTypes } from '../../interfaces';\nimport { Tools } from '../../tools';\nimport { DOMUtils } from '../../services';\nimport * as Configuration from '../../configuration'; // D3 Imports\n\nimport { event, select } from 'd3-selection'; // import the settings for the css prefix\n\nimport settings from 'carbon-components/es/globals/js/settings';\n\nvar Toolbar =\n/** @class */\nfunction (_super) {\n  __extends(Toolbar, _super);\n\n  function Toolbar() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'toolbar'; // x, y coordinate of overflow menu\n\n    _this.overflowMenuX = 0;\n    _this.overflowMenuY = 0; // Use a random number to create overflow menu item unique ID\n    // so they don't interfere the other overflow menu item in a page\n\n    _this.overflowMenuItemId = Math.floor(Math.random() * 99999999999);\n    return _this;\n  }\n\n  Toolbar.prototype.init = function () {\n    var _this = this;\n\n    var options = this.getOptions(); // Grab the tooltip element\n\n    var holder = select(this.services.domUtils.getHolder());\n    var chartPrefix = Tools.getProperty(options, 'style', 'prefix');\n    this.overflowMenu = DOMUtils.appendOrSelect(holder, \"div.\" + settings.prefix + \"--\" + chartPrefix + \"--overflowMenu\");\n    this.overflowMenu.style('max-width', null); // listen to show overflow menu event to render the overflow menu\n\n    this.services.events.addEventListener(Events.Toolbar.SHOW_OVERFLOW_MENU, function () {\n      _this.overflowMenu.html(_this.getOverflowMenuHTML());\n    }); // listen to hide overflow menu event to hide the overflow menu\n\n    this.services.events.addEventListener(Events.Toolbar.HIDE_OVERFLOW_MENU, function () {\n      _this.overflowMenu.html(null);\n    }); // hide overflow menu if user clicks on somewhere in web page\n\n    document.body.addEventListener('click', function () {\n      return _this.updateOverflowMenu(false);\n    });\n  };\n\n  Toolbar.prototype.render = function (animate) {\n    if (animate === void 0) {\n      animate = true;\n    }\n\n    var isDataLoading = Tools.getProperty(this.getOptions(), 'data', 'loading'); // size of toolbar button with background\n\n    var buttonSize = Configuration.toolbar.buttonSize;\n    var parentY = parseFloat(this.parent.node().getAttribute('y'));\n    var svg = this.getContainerSVG(); // TODO -- adjust toolbar Y position to align title component\n    // before layout component supports vertical alignment center\n\n    var Y_OFFSET = -6;\n    svg.attr('transform', \"translate(0, \" + (parentY + Y_OFFSET) + \")\");\n    var width = DOMUtils.getSVGElementSize(this.services.domUtils.getMainSVG(), {\n      useAttrs: true\n    }).width; // overflow menu width is 160px\n    // it's set by Carbon component\n\n    var overflowMenuWidth = 160; // no good solution to get correct Toolbar position\n    // parent x doesn't work well\n    // assume the overflow icon has right alignment in layout\n\n    this.overflowMenuX = width - overflowMenuWidth;\n    this.overflowMenuY = parentY + Y_OFFSET + buttonSize;\n    var container = DOMUtils.appendOrSelect(svg, 'svg.toolbar-container').attr('width', '100%').attr('height', Configuration.toolbar.height).attr('opacity', 1); // clean children first\n\n    container.html(null); // get the toolbar buttons\n\n    var _a = this.getControlConfigs(),\n        buttonList = _a.buttonList,\n        overflowMenuItemList = _a.overflowMenuItemList; // overflow button is required only if overflow menu item list is valid\n\n\n    if (!!overflowMenuItemList) {\n      buttonList.push(this.getOverflowButtonConfig());\n    } // loading or empty state\n\n\n    if (isDataLoading || buttonList.length === 0) {\n      // put an empty rect to keep space unchanged\n      DOMUtils.appendOrSelect(container, 'svg.toolbar-loading-spacer').append('rect').attr('height', Configuration.toolbar.height).attr('width', buttonSize * 3) // value doesn't matter but can't be empty\n      .attr('opacity', 0);\n    } else {\n      // render toolbar buttons sequentially\n      var buttonXPosition_1 = 0;\n      buttonList.forEach(function (button) {\n        // button container\n        var buttonContainer = DOMUtils.appendOrSelect(container, \"svg.\" + button.id).classed('toolbar-button', true); // add button background rect\n\n        var buttonBackground = DOMUtils.appendOrSelect(buttonContainer, 'rect.toolbar-button-background').attr('x', buttonXPosition_1).attr('y', 0).attr('width', buttonSize).attr('height', buttonSize);\n        var buttonIcon = DOMUtils.appendOrSelect(buttonContainer, 'svg.toolbar-button-icon').attr('x', buttonXPosition_1 + Configuration.toolbar.iconPadding).attr('y', Configuration.toolbar.iconPadding).attr('width', Configuration.toolbar.iconSize).attr('height', Configuration.toolbar.iconSize).attr('viewBox', '0 0 32 32').attr('role', Roles.IMG);\n        buttonIcon.html(button.iconSVGContent);\n\n        if (button.shouldBeDisabled()) {\n          buttonContainer.classed('toolbar-button--disabled', true).classed('toolbar-button--focusable', false).attr('tabindex', -1).attr('role', null);\n          buttonIcon.classed('toolbar-button-icon--disabled', true);\n          buttonBackground.classed('toolbar-button-background--disabled', true);\n          buttonContainer.on('click', null).on('keyup', null);\n        } else {\n          buttonContainer.classed('toolbar-button--disabled', false).classed('toolbar-button--focusable', true).attr('tabindex', 0).attr('role', Roles.BUTTON);\n          buttonIcon.classed('toolbar-button-icon--disabled', false);\n          buttonBackground.classed('toolbar-button-background--disabled', false);\n          buttonContainer.on('click', button.clickFunction).on('keyup', function () {\n            if (event.key && event.key === 'Enter' || event.key === ' ') {\n              event.preventDefault();\n              button.clickFunction();\n            }\n          });\n        }\n\n        buttonXPosition_1 += buttonSize;\n      });\n      this.overflowButton = this.getContainerSVG().select('svg.toolbar-overflow-menu');\n\n      if (this.isOverflowMenuOpen()) {\n        // keep overflow menu displayed\n        this.updateOverflowMenu(true);\n      }\n    }\n  };\n\n  Toolbar.prototype.isOverflowMenuOpen = function () {\n    return this.overflowMenu.selectAll('ul.bx--overflow-menu-options--open').size() > 0;\n  }; // show/hide overflow menu\n\n\n  Toolbar.prototype.updateOverflowMenu = function (show) {\n    // update overflow button background\n    if (this.overflowButton) {\n      this.overflowButton.classed('toolbar-button--hovered', show);\n    }\n\n    if (show) {\n      this.services.events.dispatchEvent(Events.Toolbar.SHOW_OVERFLOW_MENU);\n    } else {\n      this.services.events.dispatchEvent(Events.Toolbar.HIDE_OVERFLOW_MENU);\n    }\n  };\n\n  Toolbar.prototype.focusOnPreviousEnabledMenuItem = function (currentItemIndex) {\n    var overflowMenuItems = this.getOverflowMenuItems();\n    var previousItemIndex = overflowMenuItems.length;\n\n    for (var i = currentItemIndex - 1; i >= 0; i--) {\n      var previousOverflowMenuItem = overflowMenuItems[i];\n\n      if (!previousOverflowMenuItem.shouldBeDisabled()) {\n        previousItemIndex = i;\n        break;\n      }\n    } // only if previous enabled menu item found\n\n\n    if (previousItemIndex < overflowMenuItems.length) {\n      var previousItemNode = select('#' + overflowMenuItems[previousItemIndex].id + this.overflowMenuItemId).node();\n\n      if ('focus' in previousItemNode) {\n        previousItemNode.focus();\n      }\n    }\n  };\n\n  Toolbar.prototype.focusOnNextEnabledMenuItem = function (currentItemIndex) {\n    var overflowMenuItems = this.getOverflowMenuItems();\n    var nextItemIndex = -1;\n\n    for (var i = currentItemIndex + 1; i < overflowMenuItems.length; i++) {\n      var nextOverflowMenuItem = overflowMenuItems[i];\n\n      if (!nextOverflowMenuItem.shouldBeDisabled()) {\n        nextItemIndex = i;\n        break;\n      }\n    } // only if next enabled menu item found\n\n\n    if (nextItemIndex > -1) {\n      var nextItemNode = select('#' + overflowMenuItems[nextItemIndex].id + this.overflowMenuItemId).node();\n\n      if ('focus' in nextItemNode) {\n        nextItemNode.focus();\n      }\n    }\n  };\n\n  Toolbar.prototype.toggleOverflowMenu = function () {\n    var _this = this;\n\n    if (this.isOverflowMenuOpen()) {\n      // hide overflow menu\n      this.updateOverflowMenu(false);\n    } else {\n      // show overflow menu\n      this.updateOverflowMenu(true); // setup overflow menu item event listener\n\n      var self_1 = this;\n      var overflowMenuItems = this.getOverflowMenuItems();\n      overflowMenuItems.forEach(function (menuItem, index) {\n        var element = select('#' + menuItem.id + _this.overflowMenuItemId);\n\n        if (element !== null) {\n          element.on('click', function () {\n            // call the specified function\n            menuItem.clickFunction(); // hide overflow menu\n\n            self_1.updateOverflowMenu(false);\n          });\n          element.on('keyup', function () {\n            if (event.key === 'Enter') {\n              // call the specified function\n              menuItem.clickFunction();\n            } else if (event.key === 'ArrowUp') {\n              // focus on previous menu item\n              self_1.focusOnPreviousEnabledMenuItem(index);\n            } else if (event.key === 'ArrowDown') {\n              // focus on next menu item\n              self_1.focusOnNextEnabledMenuItem(index);\n            } // Not hide overflow menu by keyboard arrow up/down event\n\n          });\n        }\n      }); // default to focus on the first enabled menu item\n\n      self_1.focusOnNextEnabledMenuItem(-1);\n    }\n\n    event.stopImmediatePropagation();\n  };\n\n  Toolbar.prototype.getOverflowMenuHTML = function () {\n    var _this = this;\n\n    var overflowMenuItems = this.getOverflowMenuItems(); // don't render whole overflow menu if no overflow menu item\n\n    if (!overflowMenuItems || overflowMenuItems.length === 0) {\n      return '';\n    }\n\n    var overflowMenuHtml;\n    overflowMenuHtml = \"<div data-floating-menu-container=\\\"true\\\" data-floating-menu-direction=\\\"bottom\\\" role=\\\"main\\\">\\n\\t\\t\\t<ul class=\\\"bx--overflow-menu-options bx--overflow-menu--flip bx--overflow-menu-options--open\\\"\\n\\t\\t\\t\\ttabindex=\\\"-1\\\" role=\\\"\" + Roles.MENU + \"\\\" aria-label=\\\"Menu\\\" data-floating-menu-direction=\\\"bottom\\\"\\n\\t\\t\\t\\tstyle=\\\"left:\" + this.overflowMenuX + \"px; top:\" + this.overflowMenuY + \"px;\\\">\"; // generate html for each overflow menu items\n\n    overflowMenuItems.forEach(function (menuItem, index) {\n      var menuItemClasses = 'bx--overflow-menu-options__option'.concat(menuItem.shouldBeDisabled() ? ' bx--overflow-menu-options__option--disabled' // class for disabled menu item\n      : '');\n      overflowMenuHtml += \"<li class=\\\"\" + menuItemClasses + \"\\\" role=\\\"\" + Roles.MENU_ITEM + \"\\\">\\n\\t\\t\\t\\t<button class=\\\"bx--overflow-menu-options__btn\\\"\\n\\t\\t\\t\\t\\tdata-floating-menu-primary-focus=\\\"\" + (index === 0) + \"\\\"\\n\\t\\t\\t\\t\\ttabindex=\\\"-1\\\" index=\\\"\" + index + \"\\\" title=\\\"\" + menuItem.text + \"\\\"\\n\\t\\t\\t\\t\\tid=\\\"\" + (menuItem.id + _this.overflowMenuItemId) + \"\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"bx--overflow-menu-options__option-content\\\">\\n\\t\\t\\t\\t\\t\\t\" + menuItem.text + \"\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</li>\";\n    });\n    overflowMenuHtml += \"</ul></div>\";\n    return overflowMenuHtml;\n  };\n\n  Toolbar.prototype.getControlConfigs = function () {\n    var _this = this;\n\n    var numberOfIcons = Tools.getProperty(this.getOptions(), 'toolbar', 'numberOfIcons');\n    var controls = Tools.getProperty(this.getOptions(), 'toolbar', 'controls');\n    var controlList = [];\n    controls.forEach(function (control) {\n      var controlConfig = _this.getControlConfigByType(control.type); // add to list if config is valid\n\n\n      if (controlConfig) {\n        controlConfig.text = control.text ? control.text : control.type;\n        controlList.push(controlConfig);\n      }\n    });\n\n    if (controlList.length <= numberOfIcons) {\n      return {\n        buttonList: controlList\n      };\n    }\n\n    return {\n      // leave one button for overflow button\n      buttonList: controlList.splice(0, numberOfIcons - 1),\n      overflowMenuItemList: controlList\n    };\n  };\n\n  Toolbar.prototype.getOverflowMenuItems = function () {\n    var overflowMenuItemList = this.getControlConfigs().overflowMenuItemList;\n\n    if (!!overflowMenuItemList) {\n      return overflowMenuItemList;\n    } else {\n      return [];\n    }\n  }; // special button config for overflow button\n\n\n  Toolbar.prototype.getOverflowButtonConfig = function () {\n    var _this = this;\n\n    return {\n      id: 'toolbar-overflow-menu',\n      shouldBeDisabled: function shouldBeDisabled() {\n        return false;\n      },\n      iconSVGContent: \"<circle cx=\\\"16\\\" cy=\\\"8\\\" r=\\\"2\\\"></circle>\\n\\t\\t\\t\\t\\t\\t\\t <circle cx=\\\"16\\\" cy=\\\"16\\\" r=\\\"2\\\"></circle>\\n\\t\\t\\t\\t\\t\\t\\t <circle cx=\\\"16\\\" cy=\\\"24\\\" r=\\\"2\\\"></circle>\",\n      clickFunction: function clickFunction() {\n        return _this.toggleOverflowMenu();\n      }\n    };\n  };\n\n  Toolbar.prototype.getControlConfigByType = function (controlType) {\n    var _this = this;\n\n    var isZoomBarEnabled = this.services.zoom.isZoomBarEnabled() && !this.services.zoom.isEmptyState();\n    var controlConfig;\n\n    switch (controlType) {\n      case ToolbarControlTypes.ZOOM_IN:\n        if (isZoomBarEnabled) {\n          controlConfig = {\n            id: 'toolbar-zoomIn',\n            shouldBeDisabled: function shouldBeDisabled() {\n              return _this.services.zoom.isMinZoomDomain();\n            },\n            iconSVGContent: this.getControlIconByType(controlType),\n            clickFunction: function clickFunction() {\n              return _this.services.zoom.zoomIn();\n            }\n          };\n        }\n\n        break;\n\n      case ToolbarControlTypes.ZOOM_OUT:\n        if (isZoomBarEnabled) {\n          controlConfig = {\n            id: 'toolbar-zoomOut',\n            shouldBeDisabled: function shouldBeDisabled() {\n              return _this.services.zoom.isMaxZoomDomain();\n            },\n            iconSVGContent: this.getControlIconByType(controlType),\n            clickFunction: function clickFunction() {\n              return _this.services.zoom.zoomOut();\n            }\n          };\n        }\n\n        break;\n\n      case ToolbarControlTypes.RESET_ZOOM:\n        if (isZoomBarEnabled) {\n          controlConfig = {\n            id: 'toolbar-resetZoom',\n            shouldBeDisabled: function shouldBeDisabled() {\n              return _this.services.zoom.isMaxZoomDomain();\n            },\n            iconSVGContent: this.getControlIconByType(controlType),\n            clickFunction: function clickFunction() {\n              return _this.services.zoom.resetZoomDomain();\n            }\n          };\n        }\n\n        break;\n      // add more toolbar control configuration here\n\n      default:\n        throw Error('Not supported toolbar control type: ' + controlType);\n    }\n\n    return controlConfig;\n  };\n\n  Toolbar.prototype.getControlIconByType = function (controlType) {\n    switch (controlType) {\n      case ToolbarControlTypes.ZOOM_IN:\n        return \"<polygon points=\\\"19 13 15 13 15 9 13 9 13 13 9 13 9 15 13 15 13 19 15 19 15 15 19 15 19 13\\\"/>\\n    \\t\\t\\t\\t\\t<path d=\\\"M22.45,21A10.87,10.87,0,0,0,25,14,11,11,0,1,0,14,25a10.87,10.87,0,0,0,7-2.55L28.59,30,30,28.59ZM14,23a9,9,0,1,1,9-9A9,9,0,0,1,14,23Z\\\"/>\";\n\n      case ToolbarControlTypes.ZOOM_OUT:\n        return \"<rect x=\\\"9\\\" y=\\\"13\\\" width=\\\"10\\\" height=\\\"2\\\"/>\\n\\t\\t\\t\\t\\t\\t<path d=\\\"M22.45,21A10.87,10.87,0,0,0,25,14,11,11,0,1,0,14,25a10.87,10.87,0,0,0,7-2.55L28.59,30,30,28.59ZM14,23a9,9,0,1,1,9-9A9,9,0,0,1,14,23Z\\\"/>\";\n\n      case ToolbarControlTypes.RESET_ZOOM:\n        return \"<path d=\\\"M22.4478,21A10.855,10.855,0,0,0,25,14,10.99,10.99,0,0,0,6,6.4658V2H4v8h8V8H7.332a8.9768,8.9768,0,1,1-2.1,8H3.1912A11.0118,11.0118,0,0,0,14,25a10.855,10.855,0,0,0,7-2.5522L28.5859,30,30,28.5859Z\\\"/>\";\n      // add more icons here\n      // svg icon must be with 32x32 viewBox\n\n      default:\n        throw Error('Not supported toolbar control type: ' + controlType);\n    }\n  };\n\n  return Toolbar;\n}(Component);\n\nexport { Toolbar };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/components/axes/toolbar.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Component","Events","Roles","ToolbarControlTypes","Tools","DOMUtils","Configuration","event","select","settings","Toolbar","_super","_this","apply","arguments","type","overflowMenuX","overflowMenuY","overflowMenuItemId","Math","floor","random","init","options","getOptions","holder","services","domUtils","getHolder","chartPrefix","getProperty","overflowMenu","appendOrSelect","prefix","style","events","addEventListener","SHOW_OVERFLOW_MENU","html","getOverflowMenuHTML","HIDE_OVERFLOW_MENU","document","body","updateOverflowMenu","render","animate","isDataLoading","buttonSize","toolbar","parentY","parseFloat","parent","node","getAttribute","svg","getContainerSVG","Y_OFFSET","attr","width","getSVGElementSize","getMainSVG","useAttrs","overflowMenuWidth","container","height","_a","getControlConfigs","buttonList","overflowMenuItemList","push","getOverflowButtonConfig","length","append","buttonXPosition_1","forEach","button","buttonContainer","id","classed","buttonBackground","buttonIcon","iconPadding","iconSize","IMG","iconSVGContent","shouldBeDisabled","on","BUTTON","clickFunction","key","preventDefault","overflowButton","isOverflowMenuOpen","selectAll","size","show","dispatchEvent","focusOnPreviousEnabledMenuItem","currentItemIndex","overflowMenuItems","getOverflowMenuItems","previousItemIndex","i","previousOverflowMenuItem","previousItemNode","focus","focusOnNextEnabledMenuItem","nextItemIndex","nextOverflowMenuItem","nextItemNode","toggleOverflowMenu","self_1","menuItem","index","element","stopImmediatePropagation","overflowMenuHtml","MENU","menuItemClasses","concat","MENU_ITEM","text","numberOfIcons","controls","controlList","control","controlConfig","getControlConfigByType","splice","controlType","isZoomBarEnabled","zoom","isEmptyState","ZOOM_IN","isMinZoomDomain","getControlIconByType","zoomIn","ZOOM_OUT","isMaxZoomDomain","zoomOut","RESET_ZOOM","resetZoomDomain","Error"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Component } from '../component';\nimport { Events, Roles, ToolbarControlTypes } from '../../interfaces';\nimport { Tools } from '../../tools';\nimport { DOMUtils } from '../../services';\nimport * as Configuration from '../../configuration';\n// D3 Imports\nimport { event, select } from 'd3-selection';\n// import the settings for the css prefix\nimport settings from 'carbon-components/es/globals/js/settings';\nvar Toolbar = /** @class */ (function (_super) {\n    __extends(Toolbar, _super);\n    function Toolbar() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'toolbar';\n        // x, y coordinate of overflow menu\n        _this.overflowMenuX = 0;\n        _this.overflowMenuY = 0;\n        // Use a random number to create overflow menu item unique ID\n        // so they don't interfere the other overflow menu item in a page\n        _this.overflowMenuItemId = Math.floor(Math.random() * 99999999999);\n        return _this;\n    }\n    Toolbar.prototype.init = function () {\n        var _this = this;\n        var options = this.getOptions();\n        // Grab the tooltip element\n        var holder = select(this.services.domUtils.getHolder());\n        var chartPrefix = Tools.getProperty(options, 'style', 'prefix');\n        this.overflowMenu = DOMUtils.appendOrSelect(holder, \"div.\" + settings.prefix + \"--\" + chartPrefix + \"--overflowMenu\");\n        this.overflowMenu.style('max-width', null);\n        // listen to show overflow menu event to render the overflow menu\n        this.services.events.addEventListener(Events.Toolbar.SHOW_OVERFLOW_MENU, function () {\n            _this.overflowMenu.html(_this.getOverflowMenuHTML());\n        });\n        // listen to hide overflow menu event to hide the overflow menu\n        this.services.events.addEventListener(Events.Toolbar.HIDE_OVERFLOW_MENU, function () {\n            _this.overflowMenu.html(null);\n        });\n        // hide overflow menu if user clicks on somewhere in web page\n        document.body.addEventListener('click', function () {\n            return _this.updateOverflowMenu(false);\n        });\n    };\n    Toolbar.prototype.render = function (animate) {\n        if (animate === void 0) { animate = true; }\n        var isDataLoading = Tools.getProperty(this.getOptions(), 'data', 'loading');\n        // size of toolbar button with background\n        var buttonSize = Configuration.toolbar.buttonSize;\n        var parentY = parseFloat(this.parent.node().getAttribute('y'));\n        var svg = this.getContainerSVG();\n        // TODO -- adjust toolbar Y position to align title component\n        // before layout component supports vertical alignment center\n        var Y_OFFSET = -6;\n        svg.attr('transform', \"translate(0, \" + (parentY + Y_OFFSET) + \")\");\n        var width = DOMUtils.getSVGElementSize(this.services.domUtils.getMainSVG(), {\n            useAttrs: true,\n        }).width;\n        // overflow menu width is 160px\n        // it's set by Carbon component\n        var overflowMenuWidth = 160;\n        // no good solution to get correct Toolbar position\n        // parent x doesn't work well\n        // assume the overflow icon has right alignment in layout\n        this.overflowMenuX = width - overflowMenuWidth;\n        this.overflowMenuY = parentY + Y_OFFSET + buttonSize;\n        var container = DOMUtils.appendOrSelect(svg, 'svg.toolbar-container')\n            .attr('width', '100%')\n            .attr('height', Configuration.toolbar.height)\n            .attr('opacity', 1);\n        // clean children first\n        container.html(null);\n        // get the toolbar buttons\n        var _a = this.getControlConfigs(), buttonList = _a.buttonList, overflowMenuItemList = _a.overflowMenuItemList;\n        // overflow button is required only if overflow menu item list is valid\n        if (!!overflowMenuItemList) {\n            buttonList.push(this.getOverflowButtonConfig());\n        }\n        // loading or empty state\n        if (isDataLoading || buttonList.length === 0) {\n            // put an empty rect to keep space unchanged\n            DOMUtils.appendOrSelect(container, 'svg.toolbar-loading-spacer')\n                .append('rect')\n                .attr('height', Configuration.toolbar.height)\n                .attr('width', buttonSize * 3) // value doesn't matter but can't be empty\n                .attr('opacity', 0);\n        }\n        else {\n            // render toolbar buttons sequentially\n            var buttonXPosition_1 = 0;\n            buttonList.forEach(function (button) {\n                // button container\n                var buttonContainer = DOMUtils.appendOrSelect(container, \"svg.\" + button.id).classed('toolbar-button', true);\n                // add button background rect\n                var buttonBackground = DOMUtils.appendOrSelect(buttonContainer, 'rect.toolbar-button-background')\n                    .attr('x', buttonXPosition_1)\n                    .attr('y', 0)\n                    .attr('width', buttonSize)\n                    .attr('height', buttonSize);\n                var buttonIcon = DOMUtils.appendOrSelect(buttonContainer, 'svg.toolbar-button-icon')\n                    .attr('x', buttonXPosition_1 + Configuration.toolbar.iconPadding)\n                    .attr('y', Configuration.toolbar.iconPadding)\n                    .attr('width', Configuration.toolbar.iconSize)\n                    .attr('height', Configuration.toolbar.iconSize)\n                    .attr('viewBox', '0 0 32 32')\n                    .attr('role', Roles.IMG);\n                buttonIcon.html(button.iconSVGContent);\n                if (button.shouldBeDisabled()) {\n                    buttonContainer\n                        .classed('toolbar-button--disabled', true)\n                        .classed('toolbar-button--focusable', false)\n                        .attr('tabindex', -1)\n                        .attr('role', null);\n                    buttonIcon.classed('toolbar-button-icon--disabled', true);\n                    buttonBackground.classed('toolbar-button-background--disabled', true);\n                    buttonContainer.on('click', null).on('keyup', null);\n                }\n                else {\n                    buttonContainer\n                        .classed('toolbar-button--disabled', false)\n                        .classed('toolbar-button--focusable', true)\n                        .attr('tabindex', 0)\n                        .attr('role', Roles.BUTTON);\n                    buttonIcon.classed('toolbar-button-icon--disabled', false);\n                    buttonBackground.classed('toolbar-button-background--disabled', false);\n                    buttonContainer\n                        .on('click', button.clickFunction)\n                        .on('keyup', function () {\n                        if ((event.key && event.key === 'Enter') ||\n                            event.key === ' ') {\n                            event.preventDefault();\n                            button.clickFunction();\n                        }\n                    });\n                }\n                buttonXPosition_1 += buttonSize;\n            });\n            this.overflowButton = this.getContainerSVG().select('svg.toolbar-overflow-menu');\n            if (this.isOverflowMenuOpen()) {\n                // keep overflow menu displayed\n                this.updateOverflowMenu(true);\n            }\n        }\n    };\n    Toolbar.prototype.isOverflowMenuOpen = function () {\n        return (this.overflowMenu\n            .selectAll('ul.bx--overflow-menu-options--open')\n            .size() > 0);\n    };\n    // show/hide overflow menu\n    Toolbar.prototype.updateOverflowMenu = function (show) {\n        // update overflow button background\n        if (this.overflowButton) {\n            this.overflowButton.classed('toolbar-button--hovered', show);\n        }\n        if (show) {\n            this.services.events.dispatchEvent(Events.Toolbar.SHOW_OVERFLOW_MENU);\n        }\n        else {\n            this.services.events.dispatchEvent(Events.Toolbar.HIDE_OVERFLOW_MENU);\n        }\n    };\n    Toolbar.prototype.focusOnPreviousEnabledMenuItem = function (currentItemIndex) {\n        var overflowMenuItems = this.getOverflowMenuItems();\n        var previousItemIndex = overflowMenuItems.length;\n        for (var i = currentItemIndex - 1; i >= 0; i--) {\n            var previousOverflowMenuItem = overflowMenuItems[i];\n            if (!previousOverflowMenuItem.shouldBeDisabled()) {\n                previousItemIndex = i;\n                break;\n            }\n        }\n        // only if previous enabled menu item found\n        if (previousItemIndex < overflowMenuItems.length) {\n            var previousItemNode = select('#' +\n                overflowMenuItems[previousItemIndex].id +\n                this.overflowMenuItemId).node();\n            if ('focus' in previousItemNode) {\n                previousItemNode.focus();\n            }\n        }\n    };\n    Toolbar.prototype.focusOnNextEnabledMenuItem = function (currentItemIndex) {\n        var overflowMenuItems = this.getOverflowMenuItems();\n        var nextItemIndex = -1;\n        for (var i = currentItemIndex + 1; i < overflowMenuItems.length; i++) {\n            var nextOverflowMenuItem = overflowMenuItems[i];\n            if (!nextOverflowMenuItem.shouldBeDisabled()) {\n                nextItemIndex = i;\n                break;\n            }\n        }\n        // only if next enabled menu item found\n        if (nextItemIndex > -1) {\n            var nextItemNode = select('#' +\n                overflowMenuItems[nextItemIndex].id +\n                this.overflowMenuItemId).node();\n            if ('focus' in nextItemNode) {\n                nextItemNode.focus();\n            }\n        }\n    };\n    Toolbar.prototype.toggleOverflowMenu = function () {\n        var _this = this;\n        if (this.isOverflowMenuOpen()) {\n            // hide overflow menu\n            this.updateOverflowMenu(false);\n        }\n        else {\n            // show overflow menu\n            this.updateOverflowMenu(true);\n            // setup overflow menu item event listener\n            var self_1 = this;\n            var overflowMenuItems = this.getOverflowMenuItems();\n            overflowMenuItems.forEach(function (menuItem, index) {\n                var element = select('#' + menuItem.id + _this.overflowMenuItemId);\n                if (element !== null) {\n                    element.on('click', function () {\n                        // call the specified function\n                        menuItem.clickFunction();\n                        // hide overflow menu\n                        self_1.updateOverflowMenu(false);\n                    });\n                    element.on('keyup', function () {\n                        if (event.key === 'Enter') {\n                            // call the specified function\n                            menuItem.clickFunction();\n                        }\n                        else if (event.key === 'ArrowUp') {\n                            // focus on previous menu item\n                            self_1.focusOnPreviousEnabledMenuItem(index);\n                        }\n                        else if (event.key === 'ArrowDown') {\n                            // focus on next menu item\n                            self_1.focusOnNextEnabledMenuItem(index);\n                        }\n                        // Not hide overflow menu by keyboard arrow up/down event\n                    });\n                }\n            });\n            // default to focus on the first enabled menu item\n            self_1.focusOnNextEnabledMenuItem(-1);\n        }\n        event.stopImmediatePropagation();\n    };\n    Toolbar.prototype.getOverflowMenuHTML = function () {\n        var _this = this;\n        var overflowMenuItems = this.getOverflowMenuItems();\n        // don't render whole overflow menu if no overflow menu item\n        if (!overflowMenuItems || overflowMenuItems.length === 0) {\n            return '';\n        }\n        var overflowMenuHtml;\n        overflowMenuHtml = \"<div data-floating-menu-container=\\\"true\\\" data-floating-menu-direction=\\\"bottom\\\" role=\\\"main\\\">\\n\\t\\t\\t<ul class=\\\"bx--overflow-menu-options bx--overflow-menu--flip bx--overflow-menu-options--open\\\"\\n\\t\\t\\t\\ttabindex=\\\"-1\\\" role=\\\"\" + Roles.MENU + \"\\\" aria-label=\\\"Menu\\\" data-floating-menu-direction=\\\"bottom\\\"\\n\\t\\t\\t\\tstyle=\\\"left:\" + this.overflowMenuX + \"px; top:\" + this.overflowMenuY + \"px;\\\">\";\n        // generate html for each overflow menu items\n        overflowMenuItems.forEach(function (menuItem, index) {\n            var menuItemClasses = 'bx--overflow-menu-options__option'.concat(menuItem.shouldBeDisabled()\n                ? ' bx--overflow-menu-options__option--disabled' // class for disabled menu item\n                : '');\n            overflowMenuHtml += \"<li class=\\\"\" + menuItemClasses + \"\\\" role=\\\"\" + Roles.MENU_ITEM + \"\\\">\\n\\t\\t\\t\\t<button class=\\\"bx--overflow-menu-options__btn\\\"\\n\\t\\t\\t\\t\\tdata-floating-menu-primary-focus=\\\"\" + (index === 0) + \"\\\"\\n\\t\\t\\t\\t\\ttabindex=\\\"-1\\\" index=\\\"\" + index + \"\\\" title=\\\"\" + menuItem.text + \"\\\"\\n\\t\\t\\t\\t\\tid=\\\"\" + (menuItem.id + _this.overflowMenuItemId) + \"\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"bx--overflow-menu-options__option-content\\\">\\n\\t\\t\\t\\t\\t\\t\" + menuItem.text + \"\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</li>\";\n        });\n        overflowMenuHtml += \"</ul></div>\";\n        return overflowMenuHtml;\n    };\n    Toolbar.prototype.getControlConfigs = function () {\n        var _this = this;\n        var numberOfIcons = Tools.getProperty(this.getOptions(), 'toolbar', 'numberOfIcons');\n        var controls = Tools.getProperty(this.getOptions(), 'toolbar', 'controls');\n        var controlList = [];\n        controls.forEach(function (control) {\n            var controlConfig = _this.getControlConfigByType(control.type);\n            // add to list if config is valid\n            if (controlConfig) {\n                controlConfig.text = control.text ? control.text : control.type;\n                controlList.push(controlConfig);\n            }\n        });\n        if (controlList.length <= numberOfIcons) {\n            return {\n                buttonList: controlList,\n            };\n        }\n        return {\n            // leave one button for overflow button\n            buttonList: controlList.splice(0, numberOfIcons - 1),\n            overflowMenuItemList: controlList,\n        };\n    };\n    Toolbar.prototype.getOverflowMenuItems = function () {\n        var overflowMenuItemList = this.getControlConfigs().overflowMenuItemList;\n        if (!!overflowMenuItemList) {\n            return overflowMenuItemList;\n        }\n        else {\n            return [];\n        }\n    };\n    // special button config for overflow button\n    Toolbar.prototype.getOverflowButtonConfig = function () {\n        var _this = this;\n        return {\n            id: 'toolbar-overflow-menu',\n            shouldBeDisabled: function () { return false; },\n            iconSVGContent: \"<circle cx=\\\"16\\\" cy=\\\"8\\\" r=\\\"2\\\"></circle>\\n\\t\\t\\t\\t\\t\\t\\t <circle cx=\\\"16\\\" cy=\\\"16\\\" r=\\\"2\\\"></circle>\\n\\t\\t\\t\\t\\t\\t\\t <circle cx=\\\"16\\\" cy=\\\"24\\\" r=\\\"2\\\"></circle>\",\n            clickFunction: function () { return _this.toggleOverflowMenu(); },\n        };\n    };\n    Toolbar.prototype.getControlConfigByType = function (controlType) {\n        var _this = this;\n        var isZoomBarEnabled = this.services.zoom.isZoomBarEnabled() &&\n            !this.services.zoom.isEmptyState();\n        var controlConfig;\n        switch (controlType) {\n            case ToolbarControlTypes.ZOOM_IN:\n                if (isZoomBarEnabled) {\n                    controlConfig = {\n                        id: 'toolbar-zoomIn',\n                        shouldBeDisabled: function () {\n                            return _this.services.zoom.isMinZoomDomain();\n                        },\n                        iconSVGContent: this.getControlIconByType(controlType),\n                        clickFunction: function () { return _this.services.zoom.zoomIn(); },\n                    };\n                }\n                break;\n            case ToolbarControlTypes.ZOOM_OUT:\n                if (isZoomBarEnabled) {\n                    controlConfig = {\n                        id: 'toolbar-zoomOut',\n                        shouldBeDisabled: function () {\n                            return _this.services.zoom.isMaxZoomDomain();\n                        },\n                        iconSVGContent: this.getControlIconByType(controlType),\n                        clickFunction: function () { return _this.services.zoom.zoomOut(); },\n                    };\n                }\n                break;\n            case ToolbarControlTypes.RESET_ZOOM:\n                if (isZoomBarEnabled) {\n                    controlConfig = {\n                        id: 'toolbar-resetZoom',\n                        shouldBeDisabled: function () {\n                            return _this.services.zoom.isMaxZoomDomain();\n                        },\n                        iconSVGContent: this.getControlIconByType(controlType),\n                        clickFunction: function () {\n                            return _this.services.zoom.resetZoomDomain();\n                        },\n                    };\n                }\n                break;\n            // add more toolbar control configuration here\n            default:\n                throw Error('Not supported toolbar control type: ' + controlType);\n        }\n        return controlConfig;\n    };\n    Toolbar.prototype.getControlIconByType = function (controlType) {\n        switch (controlType) {\n            case ToolbarControlTypes.ZOOM_IN:\n                return \"<polygon points=\\\"19 13 15 13 15 9 13 9 13 13 9 13 9 15 13 15 13 19 15 19 15 15 19 15 19 13\\\"/>\\n    \\t\\t\\t\\t\\t<path d=\\\"M22.45,21A10.87,10.87,0,0,0,25,14,11,11,0,1,0,14,25a10.87,10.87,0,0,0,7-2.55L28.59,30,30,28.59ZM14,23a9,9,0,1,1,9-9A9,9,0,0,1,14,23Z\\\"/>\";\n            case ToolbarControlTypes.ZOOM_OUT:\n                return \"<rect x=\\\"9\\\" y=\\\"13\\\" width=\\\"10\\\" height=\\\"2\\\"/>\\n\\t\\t\\t\\t\\t\\t<path d=\\\"M22.45,21A10.87,10.87,0,0,0,25,14,11,11,0,1,0,14,25a10.87,10.87,0,0,0,7-2.55L28.59,30,30,28.59ZM14,23a9,9,0,1,1,9-9A9,9,0,0,1,14,23Z\\\"/>\";\n            case ToolbarControlTypes.RESET_ZOOM:\n                return \"<path d=\\\"M22.4478,21A10.855,10.855,0,0,0,25,14,10.99,10.99,0,0,0,6,6.4658V2H4v8h8V8H7.332a8.9768,8.9768,0,1,1-2.1,8H3.1912A11.0118,11.0118,0,0,0,14,25a10.855,10.855,0,0,0,7-2.5522L28.5859,30,30,28.5859Z\\\"/>\";\n            // add more icons here\n            // svg icon must be with 32x32 viewBox\n            default:\n                throw Error('Not supported toolbar control type: ' + controlType);\n        }\n    };\n    return Toolbar;\n}(Component));\nexport { Toolbar };\n//# sourceMappingURL=../../../src/components/axes/toolbar.js.map"]},"metadata":{},"sourceType":"module"}