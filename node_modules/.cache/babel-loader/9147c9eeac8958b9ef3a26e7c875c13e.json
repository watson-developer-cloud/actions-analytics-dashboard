{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Component } from '../component';\nimport { AxisPositions } from '../../interfaces';\nimport { Axis } from './axis';\nimport { Tools } from '../../tools';\nimport { DOMUtils } from '../../services';\nimport { Events } from './../../interfaces';\n\nvar TwoDimensionalAxes =\n/** @class */\nfunction (_super) {\n  __extends(TwoDimensionalAxes, _super);\n\n  function TwoDimensionalAxes() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = '2D-axes';\n    _this.children = {};\n    _this.thresholds = [];\n    _this.margins = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    };\n    return _this;\n  }\n\n  TwoDimensionalAxes.prototype.render = function (animate) {\n    var _this = this;\n\n    if (animate === void 0) {\n      animate = false;\n    }\n\n    var axes = {};\n    var axisPositions = Object.keys(AxisPositions);\n    var axesOptions = Tools.getProperty(this.getOptions(), 'axes');\n    axisPositions.forEach(function (axisPosition) {\n      var axisOptions = axesOptions[AxisPositions[axisPosition]];\n\n      if (axisOptions) {\n        axes[AxisPositions[axisPosition]] = true;\n      }\n    });\n    this.configs.axes = axes; // Check the configs to know which axes need to be rendered\n\n    axisPositions.forEach(function (axisPositionKey) {\n      var axisPosition = AxisPositions[axisPositionKey];\n\n      if (_this.configs.axes[axisPosition] && !_this.children[axisPosition]) {\n        var axisComponent = new Axis(_this.model, _this.services, {\n          position: axisPosition,\n          axes: _this.configs.axes,\n          margins: _this.margins\n        }); // Set model, services & parent for the new axis component\n\n        axisComponent.setModel(_this.model);\n        axisComponent.setServices(_this.services);\n        axisComponent.setParent(_this.parent);\n        _this.children[axisPosition] = axisComponent;\n      }\n    });\n    Object.keys(this.children).forEach(function (childKey) {\n      var child = _this.children[childKey];\n      child.render(animate);\n    });\n    var margins = {};\n    Object.keys(this.children).forEach(function (childKey) {\n      var child = _this.children[childKey];\n      var axisPosition = child.configs.position; // Grab the invisibly rendered axis' width & height, and set margins\n      // Based off of that\n      // We draw the invisible axis because of the async nature of d3 transitions\n      // To be able to tell the final width & height of the axis when initiaing the transition\n      // The invisible axis is updated instantly and without a transition\n\n      var invisibleAxisRef = child.getInvisibleAxisRef();\n\n      var _a = DOMUtils.getSVGElementSize(invisibleAxisRef, {\n        useBBox: true\n      }),\n          width = _a.width,\n          height = _a.height;\n\n      var offset;\n\n      if (child.getTitleRef().empty()) {\n        offset = 0;\n      } else {\n        offset = DOMUtils.getSVGElementSize(child.getTitleRef(), {\n          useBBox: true\n        }).height;\n\n        if (axisPosition === AxisPositions.LEFT || axisPosition === AxisPositions.RIGHT) {\n          offset += 5;\n        }\n      }\n\n      switch (axisPosition) {\n        case AxisPositions.TOP:\n          margins.top = height + offset;\n          break;\n\n        case AxisPositions.BOTTOM:\n          margins.bottom = height + offset;\n          break;\n\n        case AxisPositions.LEFT:\n          margins.left = width + offset;\n          break;\n\n        case AxisPositions.RIGHT:\n          margins.right = width + offset;\n          break;\n      }\n    }); // If the new margins are different than the existing ones\n\n    var isNotEqual = Object.keys(margins).some(function (marginKey) {\n      return _this.margins[marginKey] !== margins[marginKey];\n    });\n\n    if (isNotEqual) {\n      this.margins = Object.assign(this.margins, margins); // also set new margins to model to allow external components to access\n\n      this.model.set({\n        axesMargins: this.margins\n      }, {\n        skipUpdate: true\n      });\n      this.services.events.dispatchEvent(Events.ZoomBar.UPDATE);\n      Object.keys(this.children).forEach(function (childKey) {\n        var child = _this.children[childKey];\n        child.margins = _this.margins;\n      });\n      this.render(true);\n    }\n  };\n\n  return TwoDimensionalAxes;\n}(Component);\n\nexport { TwoDimensionalAxes };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/components/axes/two-dimensional-axes.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Component","AxisPositions","Axis","Tools","DOMUtils","Events","TwoDimensionalAxes","_super","_this","apply","arguments","type","children","thresholds","margins","top","right","bottom","left","render","animate","axes","axisPositions","keys","axesOptions","getProperty","getOptions","forEach","axisPosition","axisOptions","configs","axisPositionKey","axisComponent","model","services","position","setModel","setServices","setParent","parent","childKey","child","invisibleAxisRef","getInvisibleAxisRef","_a","getSVGElementSize","useBBox","width","height","offset","getTitleRef","empty","LEFT","RIGHT","TOP","BOTTOM","isNotEqual","some","marginKey","assign","set","axesMargins","skipUpdate","events","dispatchEvent","ZoomBar","UPDATE"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Component } from '../component';\nimport { AxisPositions } from '../../interfaces';\nimport { Axis } from './axis';\nimport { Tools } from '../../tools';\nimport { DOMUtils } from '../../services';\nimport { Events } from './../../interfaces';\nvar TwoDimensionalAxes = /** @class */ (function (_super) {\n    __extends(TwoDimensionalAxes, _super);\n    function TwoDimensionalAxes() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = '2D-axes';\n        _this.children = {};\n        _this.thresholds = [];\n        _this.margins = {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n        };\n        return _this;\n    }\n    TwoDimensionalAxes.prototype.render = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = false; }\n        var axes = {};\n        var axisPositions = Object.keys(AxisPositions);\n        var axesOptions = Tools.getProperty(this.getOptions(), 'axes');\n        axisPositions.forEach(function (axisPosition) {\n            var axisOptions = axesOptions[AxisPositions[axisPosition]];\n            if (axisOptions) {\n                axes[AxisPositions[axisPosition]] = true;\n            }\n        });\n        this.configs.axes = axes;\n        // Check the configs to know which axes need to be rendered\n        axisPositions.forEach(function (axisPositionKey) {\n            var axisPosition = AxisPositions[axisPositionKey];\n            if (_this.configs.axes[axisPosition] &&\n                !_this.children[axisPosition]) {\n                var axisComponent = new Axis(_this.model, _this.services, {\n                    position: axisPosition,\n                    axes: _this.configs.axes,\n                    margins: _this.margins,\n                });\n                // Set model, services & parent for the new axis component\n                axisComponent.setModel(_this.model);\n                axisComponent.setServices(_this.services);\n                axisComponent.setParent(_this.parent);\n                _this.children[axisPosition] = axisComponent;\n            }\n        });\n        Object.keys(this.children).forEach(function (childKey) {\n            var child = _this.children[childKey];\n            child.render(animate);\n        });\n        var margins = {};\n        Object.keys(this.children).forEach(function (childKey) {\n            var child = _this.children[childKey];\n            var axisPosition = child.configs.position;\n            // Grab the invisibly rendered axis' width & height, and set margins\n            // Based off of that\n            // We draw the invisible axis because of the async nature of d3 transitions\n            // To be able to tell the final width & height of the axis when initiaing the transition\n            // The invisible axis is updated instantly and without a transition\n            var invisibleAxisRef = child.getInvisibleAxisRef();\n            var _a = DOMUtils.getSVGElementSize(invisibleAxisRef, { useBBox: true }), width = _a.width, height = _a.height;\n            var offset;\n            if (child.getTitleRef().empty()) {\n                offset = 0;\n            }\n            else {\n                offset = DOMUtils.getSVGElementSize(child.getTitleRef(), {\n                    useBBox: true,\n                }).height;\n                if (axisPosition === AxisPositions.LEFT ||\n                    axisPosition === AxisPositions.RIGHT) {\n                    offset += 5;\n                }\n            }\n            switch (axisPosition) {\n                case AxisPositions.TOP:\n                    margins.top = height + offset;\n                    break;\n                case AxisPositions.BOTTOM:\n                    margins.bottom = height + offset;\n                    break;\n                case AxisPositions.LEFT:\n                    margins.left = width + offset;\n                    break;\n                case AxisPositions.RIGHT:\n                    margins.right = width + offset;\n                    break;\n            }\n        });\n        // If the new margins are different than the existing ones\n        var isNotEqual = Object.keys(margins).some(function (marginKey) {\n            return _this.margins[marginKey] !== margins[marginKey];\n        });\n        if (isNotEqual) {\n            this.margins = Object.assign(this.margins, margins);\n            // also set new margins to model to allow external components to access\n            this.model.set({ axesMargins: this.margins }, { skipUpdate: true });\n            this.services.events.dispatchEvent(Events.ZoomBar.UPDATE);\n            Object.keys(this.children).forEach(function (childKey) {\n                var child = _this.children[childKey];\n                child.margins = _this.margins;\n            });\n            this.render(true);\n        }\n    };\n    return TwoDimensionalAxes;\n}(Component));\nexport { TwoDimensionalAxes };\n//# sourceMappingURL=../../../src/components/axes/two-dimensional-axes.js.map"]},"metadata":{},"sourceType":"module"}