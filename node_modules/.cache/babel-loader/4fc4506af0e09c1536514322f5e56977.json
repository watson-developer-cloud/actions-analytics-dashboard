{"ast":null,"code":"import _classCallCheck from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar AssistantManager = /*#__PURE__*/function () {\n  function AssistantManager() {\n    _classCallCheck(this, AssistantManager);\n\n    this.assistants = [];\n    this.assistantsLoaded = false;\n    this.assistantCallbacks = [];\n    this.logCallbacks = {};\n    this.logs = {};\n  }\n\n  _createClass(AssistantManager, [{\n    key: \"loadAssistants\",\n    value: function loadAssistants() {\n      var _this = this;\n\n      fetch(\"https://actions-logging.mybluemix.net/logging/assistants\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this.assistants = result;\n        _this.assistantsLoaded = true;\n\n        for (var i = 0; i < _this.assistantCallbacks.length; i++) {\n          var cb = _this.assistantCallbacks.pop();\n\n          cb(_this.assistants);\n        }\n      }, function (error) {\n        console.log(\"Failed to get assistants\");\n      });\n    }\n  }, {\n    key: \"loadLogsForAssistant\",\n    value: function loadLogsForAssistant(assistantName) {\n      var _this2 = this;\n\n      fetch(\"https://actions-logging.mybluemix.net/logging/assistants?assistant=\" + assistantName).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        var _this2$logCallbacks$a;\n\n        _this2.logs[assistantName] = result;\n        var callbacks = (_this2$logCallbacks$a = _this2.logCallbacks[assistantName]) !== null && _this2$logCallbacks$a !== void 0 ? _this2$logCallbacks$a : [];\n        delete _this2.logCallbacks[assistantName];\n\n        for (var i = 0; i < callbacks.length; i++) {\n          callbacks(_this2.logs[assistantName]);\n        }\n      }, function (error) {\n        console.log(\"Failed to get logs\");\n      });\n    }\n  }, {\n    key: \"getAssistants\",\n    value: function getAssistants(callback) {\n      if (!this.assistantsLoaded) this.assistantCallbacks.push(callback);else callback(this.assistants);\n    }\n  }, {\n    key: \"getLogs\",\n    value: function getLogs(assistantName, callback) {\n      if (assistantName in this.logs) {\n        var _this$logCallbacks$as;\n\n        var callbacks = (_this$logCallbacks$as = this.logCallbacks[assistantName]) !== null && _this$logCallbacks$as !== void 0 ? _this$logCallbacks$as : [];\n        callbacks.push(callback);\n        this.logCallbacks[assistantName] = callbacks;\n      } else callback(this.logs[assistantName]);\n    }\n  }]);\n\n  return AssistantManager;\n}();\n\nexport default AssistantManager;","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/AssistantManager.js"],"names":["AssistantManager","assistants","assistantsLoaded","assistantCallbacks","logCallbacks","logs","fetch","then","res","json","result","i","length","cb","pop","error","console","log","assistantName","callbacks","callback","push"],"mappings":";;;IACMA,gB;AACF,8BAAc;AAAA;;AACV,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,gBAAL,GAAwB,KAAxB;AACA,SAAKC,kBAAL,GAA0B,EAA1B;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKC,IAAL,GAAY,EAAZ;AACH;;;;qCAEgB;AAAA;;AACbC,MAAAA,KAAK,CAAC,0DAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADT,EAECF,IAFD,CAEM,UAACG,MAAD,EAAY;AACd,QAAA,KAAI,CAACT,UAAL,GAAkBS,MAAlB;AACA,QAAA,KAAI,CAACR,gBAAL,GAAwB,IAAxB;;AAEA,aAAI,IAAIS,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAI,CAACR,kBAAL,CAAwBS,MAA3C,EAAmDD,CAAC,EAApD,EAAwD;AACpD,cAAIE,EAAE,GAAG,KAAI,CAACV,kBAAL,CAAwBW,GAAxB,EAAT;;AACAD,UAAAA,EAAE,CAAC,KAAI,CAACZ,UAAN,CAAF;AACH;AACJ,OAVD,EAUG,UAACc,KAAD,EAAW;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH,OAZD;AAaH;;;yCAEoBC,a,EAAe;AAAA;;AAChCZ,MAAAA,KAAK,CAAC,wEAAwEY,aAAzE,CAAL,CACCX,IADD,CACM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADT,EAECF,IAFD,CAEM,UAACG,MAAD,EAAY;AAAA;;AACd,QAAA,MAAI,CAACL,IAAL,CAAUa,aAAV,IAA2BR,MAA3B;AAEA,YAAIS,SAAS,4BAAG,MAAI,CAACf,YAAL,CAAkBc,aAAlB,CAAH,yEAAuC,EAApD;AACA,eAAO,MAAI,CAACd,YAAL,CAAkBc,aAAlB,CAAP;;AAEA,aAAI,IAAIP,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGQ,SAAS,CAACP,MAA7B,EAAqCD,CAAC,EAAtC;AACIQ,UAAAA,SAAS,CAAC,MAAI,CAACd,IAAL,CAAUa,aAAV,CAAD,CAAT;AADJ;AAEH,OAVD,EAUG,UAACH,KAAD,EAAW;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,OAZD;AAaH;;;kCAEaG,Q,EAAU;AACpB,UAAI,CAAC,KAAKlB,gBAAV,EACI,KAAKC,kBAAL,CAAwBkB,IAAxB,CAA6BD,QAA7B,EADJ,KAEKA,QAAQ,CAAC,KAAKnB,UAAN,CAAR;AACR;;;4BAEOiB,a,EAAeE,Q,EAAU;AAC7B,UAAIF,aAAa,IAAI,KAAKb,IAA1B,EAAgC;AAAA;;AAC5B,YAAIc,SAAS,4BAAG,KAAKf,YAAL,CAAkBc,aAAlB,CAAH,yEAAuC,EAApD;AACAC,QAAAA,SAAS,CAACE,IAAV,CAAeD,QAAf;AAEA,aAAKhB,YAAL,CAAkBc,aAAlB,IAAmCC,SAAnC;AACH,OALD,MAKOC,QAAQ,CAAC,KAAKf,IAAL,CAAUa,aAAV,CAAD,CAAR;AACV;;;;;;AAGL,eAAelB,gBAAf","sourcesContent":["\nclass AssistantManager {\n    constructor() {\n        this.assistants = []\n        this.assistantsLoaded = false\n        this.assistantCallbacks = []\n        this.logCallbacks = {}\n        this.logs = {}\n    }\n\n    loadAssistants() {\n        fetch(\"https://actions-logging.mybluemix.net/logging/assistants\")\n        .then(res => res.json())\n        .then((result) => {\n            this.assistants = result\n            this.assistantsLoaded = true\n\n            for(var i = 0; i < this.assistantCallbacks.length; i++) {\n                let cb = this.assistantCallbacks.pop()\n                cb(this.assistants)\n            }\n        }, (error) => {\n            console.log(\"Failed to get assistants\")\n        })\n    }\n\n    loadLogsForAssistant(assistantName) {\n        fetch(\"https://actions-logging.mybluemix.net/logging/assistants?assistant=\" + assistantName)\n        .then(res => res.json())\n        .then((result) => {\n            this.logs[assistantName] = result\n\n            let callbacks = this.logCallbacks[assistantName] ?? []\n            delete this.logCallbacks[assistantName]\n\n            for(var i = 0; i < callbacks.length; i++)\n                callbacks(this.logs[assistantName])\n        }, (error) => {\n            console.log(\"Failed to get logs\")\n        })\n    }\n\n    getAssistants(callback) {\n        if (!this.assistantsLoaded)\n            this.assistantCallbacks.push(callback)\n        else callback(this.assistants)\n    }\n\n    getLogs(assistantName, callback) {\n        if (assistantName in this.logs) {\n            let callbacks = this.logCallbacks[assistantName] ?? []\n            callbacks.push(callback)\n\n            this.logCallbacks[assistantName] = callbacks\n        } else callback(this.logs[assistantName])\n    }\n}\n\nexport default AssistantManager\n"]},"metadata":{},"sourceType":"module"}