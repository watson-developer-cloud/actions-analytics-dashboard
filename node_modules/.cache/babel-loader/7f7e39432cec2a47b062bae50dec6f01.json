{"ast":null,"code":"var __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n}; // Internal Imports\n\n\nimport { LayoutGrowth, LayoutDirection, LegendOrientations, Events as ChartEvents } from './interfaces'; // Misc\n\nimport { ChartModel } from './model';\nimport { Title, Legend, LayoutComponent, Tooltip, Spacer, CanvasChartClip } from './components';\nimport { Tools } from './tools'; // Services\n\nimport { CanvasZoom, DOMUtils, Events, GradientUtils, Transitions } from './services/index';\n\nvar Chart =\n/** @class */\nfunction () {\n  function Chart(holder, chartConfigs) {\n    this.services = {\n      domUtils: DOMUtils,\n      events: Events,\n      gradientUtils: GradientUtils,\n      transitions: Transitions,\n      canvasZoom: CanvasZoom\n    };\n    this.model = new ChartModel(this.services);\n  } // Contains the code that uses properties that are overridable by the super-class\n\n\n  Chart.prototype.init = function (holder, chartConfigs) {\n    var _this = this; // Store the holder in the model\n\n\n    this.model.set({\n      holder: holder\n    }, {\n      skipUpdate: true\n    }); // Initialize all services\n\n    Object.keys(this.services).forEach(function (serviceName) {\n      var serviceObj = _this.services[serviceName];\n      _this.services[serviceName] = new serviceObj(_this.model, _this.services);\n    }); // Call update() when model has been updated\n\n    this.services.events.addEventListener(ChartEvents.Model.UPDATE, function (e) {\n      var animate = !!Tools.getProperty(e, 'detail', 'animate');\n\n      _this.update(animate);\n    }); // Set model data & options\n\n    this.model.setData(chartConfigs.data); // Set chart resize event listener\n\n    this.services.events.addEventListener(ChartEvents.Chart.RESIZE, function () {\n      _this.update(false);\n    });\n    this.components = this.getComponents();\n    this.update();\n  };\n\n  Chart.prototype.getComponents = function () {\n    console.error('getComponents() method is not implemented');\n    return null;\n  };\n\n  Chart.prototype.update = function (animate) {\n    var _this = this;\n\n    if (animate === void 0) {\n      animate = true;\n    }\n\n    if (!this.components) {\n      return;\n    } // Update all services\n\n\n    Object.keys(this.services).forEach(function (serviceName) {\n      var serviceObj = _this.services[serviceName];\n      serviceObj.update();\n    }); // Render all components\n\n    this.components.forEach(function (component) {\n      return component.render(animate);\n    }); // Asynchronously dispatch a \"render-finished\" event\n    // This is needed because of d3-transitions\n    // Since at the start of the transition\n    // Elements do not hold their final size or position\n\n    var pendingTransitions = this.services.transitions.getPendingTransitions();\n    var promises = Object.keys(pendingTransitions).map(function (transitionID) {\n      var transition = pendingTransitions[transitionID];\n      return transition.end().catch(function (e) {\n        return e;\n      }); // Skip rejects since we don't care about those;\n    });\n    Promise.all(promises).then(function () {\n      return _this.services.events.dispatchEvent(ChartEvents.Chart.RENDER_FINISHED);\n    });\n  };\n\n  Chart.prototype.destroy = function () {\n    // Call the destroy() method on all components\n    this.components.forEach(function (component) {\n      return component.destroy();\n    }); // Remove the chart holder\n\n    this.services.domUtils.getHolder().remove();\n    this.model.set({\n      destroyed: true\n    }, {\n      skipUpdate: true\n    });\n  };\n\n  Chart.prototype.getChartComponents = function (graphFrameComponents) {\n    var titleComponent = {\n      id: 'title',\n      components: [new Title(this.model, this.services)],\n      growth: {\n        x: LayoutGrowth.PREFERRED,\n        y: LayoutGrowth.FIXED\n      }\n    };\n    var legendComponent = {\n      id: 'legend',\n      components: [new Legend(this.model, this.services)],\n      growth: {\n        x: LayoutGrowth.PREFERRED,\n        y: LayoutGrowth.PREFERRED\n      }\n    }; // if canvas zoom is enabled\n\n    var isZoomEnabled = Tools.getProperty(this.model.getOptions(), 'canvasZoom', 'enabled');\n\n    if (isZoomEnabled && isZoomEnabled === true) {\n      graphFrameComponents.push(new CanvasChartClip(this.model, this.services));\n    }\n\n    var graphFrameComponent = {\n      id: 'graph-frame',\n      components: graphFrameComponents,\n      growth: {\n        x: LayoutGrowth.STRETCH,\n        y: LayoutGrowth.FIXED\n      }\n    };\n    var isLegendEnabled = this.model.getOptions().legend.enabled !== false; // TODORF - REUSE BETWEEN AXISCHART & CHART\n    // Decide the position of the legend in reference to the chart\n\n    var fullFrameComponentDirection = LayoutDirection.COLUMN;\n\n    if (isLegendEnabled) {\n      var legendPosition = Tools.getProperty(this.model.getOptions(), 'legend', 'position');\n\n      if (legendPosition === 'left') {\n        fullFrameComponentDirection = LayoutDirection.ROW;\n\n        if (!this.model.getOptions().legend.orientation) {\n          this.model.getOptions().legend.orientation = LegendOrientations.VERTICAL;\n        }\n      } else if (legendPosition === 'right') {\n        fullFrameComponentDirection = LayoutDirection.ROW_REVERSE;\n\n        if (!this.model.getOptions().legend.orientation) {\n          this.model.getOptions().legend.orientation = LegendOrientations.VERTICAL;\n        }\n      } else if (legendPosition === 'bottom') {\n        fullFrameComponentDirection = LayoutDirection.COLUMN_REVERSE;\n      }\n    }\n\n    var legendSpacerComponent = {\n      id: 'spacer',\n      components: [new Spacer(this.model, this.services)],\n      growth: {\n        x: LayoutGrowth.PREFERRED,\n        y: LayoutGrowth.FIXED\n      }\n    };\n    var fullFrameComponent = {\n      id: 'full-frame',\n      components: [new LayoutComponent(this.model, this.services, __spreadArrays(isLegendEnabled ? [legendComponent] : [], isLegendEnabled ? [legendSpacerComponent] : [], [graphFrameComponent]), {\n        direction: fullFrameComponentDirection\n      })],\n      growth: {\n        x: LayoutGrowth.STRETCH,\n        y: LayoutGrowth.FIXED\n      }\n    }; // Add chart title if it exists\n\n    var topLevelLayoutComponents = [];\n\n    if (this.model.getOptions().title) {\n      topLevelLayoutComponents.push(titleComponent);\n      var titleSpacerComponent = {\n        id: 'spacer',\n        components: [new Spacer(this.model, this.services)],\n        growth: {\n          x: LayoutGrowth.PREFERRED,\n          y: LayoutGrowth.FIXED\n        }\n      };\n      topLevelLayoutComponents.push(titleSpacerComponent);\n    }\n\n    topLevelLayoutComponents.push(fullFrameComponent);\n    return [new Tooltip(this.model, this.services), new LayoutComponent(this.model, this.services, topLevelLayoutComponents, {\n      direction: LayoutDirection.COLUMN\n    })];\n  };\n\n  return Chart;\n}();\n\nexport { Chart };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/chart.js"],"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","LayoutGrowth","LayoutDirection","LegendOrientations","Events","ChartEvents","ChartModel","Title","Legend","LayoutComponent","Tooltip","Spacer","CanvasChartClip","Tools","CanvasZoom","DOMUtils","GradientUtils","Transitions","Chart","holder","chartConfigs","services","domUtils","events","gradientUtils","transitions","canvasZoom","model","prototype","init","_this","set","skipUpdate","Object","keys","forEach","serviceName","serviceObj","addEventListener","Model","UPDATE","e","animate","getProperty","update","setData","data","RESIZE","components","getComponents","console","error","component","render","pendingTransitions","getPendingTransitions","promises","map","transitionID","transition","end","catch","Promise","all","then","dispatchEvent","RENDER_FINISHED","destroy","getHolder","remove","destroyed","getChartComponents","graphFrameComponents","titleComponent","id","growth","x","PREFERRED","y","FIXED","legendComponent","isZoomEnabled","getOptions","push","graphFrameComponent","STRETCH","isLegendEnabled","legend","enabled","fullFrameComponentDirection","COLUMN","legendPosition","ROW","orientation","VERTICAL","ROW_REVERSE","COLUMN_REVERSE","legendSpacerComponent","fullFrameComponent","direction","topLevelLayoutComponents","title","titleSpacerComponent"],"mappings":"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","sourcesContent":["var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\n// Internal Imports\nimport { LayoutGrowth, LayoutDirection, LegendOrientations, Events as ChartEvents, } from './interfaces';\n// Misc\nimport { ChartModel } from './model';\nimport { Title, Legend, LayoutComponent, Tooltip, Spacer, CanvasChartClip, } from './components';\nimport { Tools } from './tools';\n// Services\nimport { CanvasZoom, DOMUtils, Events, GradientUtils, Transitions, } from './services/index';\nvar Chart = /** @class */ (function () {\n    function Chart(holder, chartConfigs) {\n        this.services = {\n            domUtils: DOMUtils,\n            events: Events,\n            gradientUtils: GradientUtils,\n            transitions: Transitions,\n            canvasZoom: CanvasZoom,\n        };\n        this.model = new ChartModel(this.services);\n    }\n    // Contains the code that uses properties that are overridable by the super-class\n    Chart.prototype.init = function (holder, chartConfigs) {\n        var _this = this;\n        // Store the holder in the model\n        this.model.set({ holder: holder }, { skipUpdate: true });\n        // Initialize all services\n        Object.keys(this.services).forEach(function (serviceName) {\n            var serviceObj = _this.services[serviceName];\n            _this.services[serviceName] = new serviceObj(_this.model, _this.services);\n        });\n        // Call update() when model has been updated\n        this.services.events.addEventListener(ChartEvents.Model.UPDATE, function (e) {\n            var animate = !!Tools.getProperty(e, 'detail', 'animate');\n            _this.update(animate);\n        });\n        // Set model data & options\n        this.model.setData(chartConfigs.data);\n        // Set chart resize event listener\n        this.services.events.addEventListener(ChartEvents.Chart.RESIZE, function () {\n            _this.update(false);\n        });\n        this.components = this.getComponents();\n        this.update();\n    };\n    Chart.prototype.getComponents = function () {\n        console.error('getComponents() method is not implemented');\n        return null;\n    };\n    Chart.prototype.update = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        if (!this.components) {\n            return;\n        }\n        // Update all services\n        Object.keys(this.services).forEach(function (serviceName) {\n            var serviceObj = _this.services[serviceName];\n            serviceObj.update();\n        });\n        // Render all components\n        this.components.forEach(function (component) { return component.render(animate); });\n        // Asynchronously dispatch a \"render-finished\" event\n        // This is needed because of d3-transitions\n        // Since at the start of the transition\n        // Elements do not hold their final size or position\n        var pendingTransitions = this.services.transitions.getPendingTransitions();\n        var promises = Object.keys(pendingTransitions).map(function (transitionID) {\n            var transition = pendingTransitions[transitionID];\n            return transition.end().catch(function (e) { return e; }); // Skip rejects since we don't care about those;\n        });\n        Promise.all(promises).then(function () {\n            return _this.services.events.dispatchEvent(ChartEvents.Chart.RENDER_FINISHED);\n        });\n    };\n    Chart.prototype.destroy = function () {\n        // Call the destroy() method on all components\n        this.components.forEach(function (component) { return component.destroy(); });\n        // Remove the chart holder\n        this.services.domUtils.getHolder().remove();\n        this.model.set({ destroyed: true }, { skipUpdate: true });\n    };\n    Chart.prototype.getChartComponents = function (graphFrameComponents) {\n        var titleComponent = {\n            id: 'title',\n            components: [new Title(this.model, this.services)],\n            growth: {\n                x: LayoutGrowth.PREFERRED,\n                y: LayoutGrowth.FIXED,\n            },\n        };\n        var legendComponent = {\n            id: 'legend',\n            components: [new Legend(this.model, this.services)],\n            growth: {\n                x: LayoutGrowth.PREFERRED,\n                y: LayoutGrowth.PREFERRED,\n            },\n        };\n        // if canvas zoom is enabled\n        var isZoomEnabled = Tools.getProperty(this.model.getOptions(), 'canvasZoom', 'enabled');\n        if (isZoomEnabled && isZoomEnabled === true) {\n            graphFrameComponents.push(new CanvasChartClip(this.model, this.services));\n        }\n        var graphFrameComponent = {\n            id: 'graph-frame',\n            components: graphFrameComponents,\n            growth: {\n                x: LayoutGrowth.STRETCH,\n                y: LayoutGrowth.FIXED,\n            },\n        };\n        var isLegendEnabled = this.model.getOptions().legend.enabled !== false;\n        // TODORF - REUSE BETWEEN AXISCHART & CHART\n        // Decide the position of the legend in reference to the chart\n        var fullFrameComponentDirection = LayoutDirection.COLUMN;\n        if (isLegendEnabled) {\n            var legendPosition = Tools.getProperty(this.model.getOptions(), 'legend', 'position');\n            if (legendPosition === 'left') {\n                fullFrameComponentDirection = LayoutDirection.ROW;\n                if (!this.model.getOptions().legend.orientation) {\n                    this.model.getOptions().legend.orientation =\n                        LegendOrientations.VERTICAL;\n                }\n            }\n            else if (legendPosition === 'right') {\n                fullFrameComponentDirection = LayoutDirection.ROW_REVERSE;\n                if (!this.model.getOptions().legend.orientation) {\n                    this.model.getOptions().legend.orientation =\n                        LegendOrientations.VERTICAL;\n                }\n            }\n            else if (legendPosition === 'bottom') {\n                fullFrameComponentDirection = LayoutDirection.COLUMN_REVERSE;\n            }\n        }\n        var legendSpacerComponent = {\n            id: 'spacer',\n            components: [new Spacer(this.model, this.services)],\n            growth: {\n                x: LayoutGrowth.PREFERRED,\n                y: LayoutGrowth.FIXED,\n            },\n        };\n        var fullFrameComponent = {\n            id: 'full-frame',\n            components: [\n                new LayoutComponent(this.model, this.services, __spreadArrays((isLegendEnabled ? [legendComponent] : []), (isLegendEnabled ? [legendSpacerComponent] : []), [\n                    graphFrameComponent,\n                ]), {\n                    direction: fullFrameComponentDirection,\n                }),\n            ],\n            growth: {\n                x: LayoutGrowth.STRETCH,\n                y: LayoutGrowth.FIXED,\n            },\n        };\n        // Add chart title if it exists\n        var topLevelLayoutComponents = [];\n        if (this.model.getOptions().title) {\n            topLevelLayoutComponents.push(titleComponent);\n            var titleSpacerComponent = {\n                id: 'spacer',\n                components: [new Spacer(this.model, this.services)],\n                growth: {\n                    x: LayoutGrowth.PREFERRED,\n                    y: LayoutGrowth.FIXED,\n                },\n            };\n            topLevelLayoutComponents.push(titleSpacerComponent);\n        }\n        topLevelLayoutComponents.push(fullFrameComponent);\n        return [\n            new Tooltip(this.model, this.services),\n            new LayoutComponent(this.model, this.services, topLevelLayoutComponents, {\n                direction: LayoutDirection.COLUMN,\n            }),\n        ];\n    };\n    return Chart;\n}());\nexport { Chart };\n//# sourceMappingURL=../src/chart.js.map"]},"metadata":{},"sourceType":"module"}