{"ast":null,"code":"import _slicedToArray from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/components/OverviewTable/OverviewTable.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ArrowRight16 } from '@carbon/icons-react';\nimport './overview-table.scss';\nimport { getLayeredDictCount } from \"../../utils\";\nimport moment from 'moment';\n\nvar OverviewTable = /*#__PURE__*/function (_React$Component) {\n  _inherits(OverviewTable, _React$Component);\n\n  var _super = _createSuper(OverviewTable);\n\n  function OverviewTable(props) {\n    var _this;\n\n    _classCallCheck(this, OverviewTable);\n\n    _this = _super.call(this, props);\n    _this.titleDict = {\n      \"mostCommon\": \"Most common topics\",\n      \"leastCommon\": \"Least common topics\",\n      \"frequentlyFailedPrompts\": \"Frequently failed prompts\",\n      \"notRecognized\": \"Requests not recognized\"\n    };\n    return _this;\n  }\n\n  _createClass(OverviewTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$this$prop,\n          _this2 = this;\n\n      var data = (_this$props$this$prop = this.props[this.props.type]) !== null && _this$props$this$prop !== void 0 ? _this$props$this$prop : [];\n      var divider = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"1px\",\n          background: \"#f4f4f4\",\n          marginBottom: \"2px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      });\n      var tableRows = [];\n\n      for (var i = 0; i < Math.min(10, data.length); i++) {\n        var val = data[i];\n\n        if (this.props.type === \"notRecognized\") {\n          tableRows.push( /*#__PURE__*/React.createElement(\"div\", {\n            className: \"overview-table-row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 26\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \"overview-table-label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 27\n            }\n          }, val.label), divider));\n        } else {\n          tableRows.push( /*#__PURE__*/React.createElement(\"div\", {\n            className: \"overview-table-row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 28\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"overview-table-label-wrapper\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }\n          }, this.props.type == \"frequentlyFailedPrompts\" && /*#__PURE__*/React.createElement(\"p\", {\n            className: \"overview-table-badge\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 79\n            }\n          }, val.intent), this.props.type == \"frequentlyFailedPrompts\" && /*#__PURE__*/React.createElement(ArrowRight16, {\n            className: \"overview-table-arrow\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 79\n            }\n          }), /*#__PURE__*/React.createElement(\"p\", {\n            className: this.props.type == \"frequentlyFailedPrompts\" ? \"overview-table-label-wih-badge\" : \"overview-table-num-label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }\n          }, val.label + \" LONGER TESTING TESTING\")), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"overview-table-num\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }\n          }, this.props.type === \"frequentlyFailedPrompts\" ? val.count + \"%\" : val.count), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"overview-table-progress-container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"overview-table-progress-back\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 31\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: this.props.type === \"mostCommon\" ? \"overview-table-green-bar\" : \"overview-table-red-bar\",\n            style: {\n              width: (this.props.type === \"frequentlyFailedPrompts\" ? val.count : 100 * (val.count / this.props.maxTopicCount)) + \"%\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 31\n            }\n          }))));\n        }\n      } // Add empty cells if there are < 10\n\n\n      for (i = 0; i < Math.max(0, 10 - data.length); i++) {\n        if (this.props.type === \"notRecognized\") {\n          tableRows.push( /*#__PURE__*/React.createElement(\"div\", {\n            className: \"overview-table-row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 26\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              height: \"30px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 27\n            }\n          }), divider));\n        } else {\n          tableRows.push( /*#__PURE__*/React.createElement(\"div\", {\n            className: \"overview-table-row\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 28\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \"overview-table-num-label transparent-text\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }\n          }, \"-\"), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"overview-table-num transparent-text\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }\n          }, \"-\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"overview-table-progress-container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"overview-table-progress-back\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 31\n            }\n          }))));\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"overview-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"panel-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }, this.titleDict[this.props.type]), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"overview-table-date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      }, this.props.startDate, \" - \", this.props.endDate), divider, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }, tableRows.map(function (value, index) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 26\n          }\n        }, value);\n      })), this.props.type === \"notRecognized\" && /*#__PURE__*/React.createElement(Link, {\n        className: \"panel-link-div\",\n        to: \"/not-recognized\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"panel-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }\n      }, \"View all\"), /*#__PURE__*/React.createElement(ArrowRight16, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 57\n        }\n      })));\n    }\n  }]);\n\n  return OverviewTable;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownState) {\n  var props = _objectSpread(_objectSpread({}, ownState), {}, {\n    mostCommon: [],\n    leastCommon: [],\n    frequentlyEscalated: [],\n    notRecognized: [],\n    startDate: moment(state.startDate, \"L\").format(\"MMM DD YYYY\"),\n    endDate: moment(state.endDate, \"L\").format(\"MMM DD YYYY\")\n  });\n\n  if (state.statsLoaded) {\n    var maxTopicCount = 0;\n    var intentsArr = [];\n    var intentCounts = getLayeredDictCount(state.intentCounts, state.startDate, state.endDate);\n    Object.keys(intentCounts).forEach(function (key) {\n      maxTopicCount = Math.max(intentCounts[key], maxTopicCount);\n      intentsArr.push({\n        \"label\": key,\n        \"count\": intentCounts[key]\n      });\n    });\n    props[\"maxTopicCount\"] = maxTopicCount;\n    intentsArr.sort(function (a, b) {\n      return parseFloat(b.count) - parseFloat(a.count);\n    });\n    var mostCommon = intentsArr.slice(0, 10);\n    intentsArr.sort(function (a, b) {\n      return parseFloat(a.count) - parseFloat(b.count);\n    });\n    var leastCommon = intentsArr.slice(0, 10);\n    props.mostCommon = mostCommon;\n    props.leastCommon = leastCommon;\n    props.notRecognized = state.notRecognizedMessages.filter(function (val) {\n      return moment(val.timestamp).isBetween(state.startDate, state.endDate, \"day\", \"[]\");\n    }).sort(function (a, b) {\n      return moment(b.timestamp) - moment(a.timestamp);\n    }).map(function (val) {\n      return {\n        label: val.text\n      };\n    });\n    var failedPromptsObj = {};\n    Object.keys(state.promptStatus).forEach(function (key) {\n      var _failedPromptsObj;\n\n      var _key$split = key.split(\":::\"),\n          _key$split2 = _slicedToArray(_key$split, 3),\n          date = _key$split2[0],\n          intent = _key$split2[1],\n          step = _key$split2[2];\n\n      if (!moment(date, \"L\").isBetween(state.startDate, state.endDate, \"day\", \"[]\")) return;\n      var obj = (_failedPromptsObj = failedPromptsObj[intent + \":::\" + step]) !== null && _failedPromptsObj !== void 0 ? _failedPromptsObj : {\n        intent: intent,\n        step: step,\n        success: 0,\n        fail: 0\n      };\n      obj.success += state.promptStatus[key].success;\n      obj.fail += state.promptStatus[key].fail;\n      failedPromptsObj[intent + \":::\" + step] = obj;\n    });\n    var failedPromptCounts = [];\n    Object.keys(failedPromptsObj).forEach(function (key) {\n      var _key$split3 = key.split(\":::\"),\n          _key$split4 = _slicedToArray(_key$split3, 2),\n          intent = _key$split4[0],\n          step = _key$split4[1];\n\n      var percent = Math.round(100 * (failedPromptsObj[key].fail / (failedPromptsObj[key].success + failedPromptsObj[key].fail)));\n      failedPromptCounts.push({\n        \"intent\": intent,\n        \"label\": step,\n        \"count\": percent\n      });\n    });\n    failedPromptCounts.sort(function (a, b) {\n      return parseFloat(b.count) - parseFloat(a.count);\n    });\n    props.frequentlyFailedPrompts = failedPromptCounts.slice(0, 10);\n  }\n\n  return props;\n};\n\nexport default connect(mapStateToProps)(OverviewTable);","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/components/OverviewTable/OverviewTable.js"],"names":["React","Link","connect","ArrowRight16","getLayeredDictCount","moment","OverviewTable","props","titleDict","data","type","divider","width","height","background","marginBottom","tableRows","i","Math","min","length","val","push","label","intent","count","maxTopicCount","max","startDate","endDate","map","value","index","Component","mapStateToProps","state","ownState","mostCommon","leastCommon","frequentlyEscalated","notRecognized","format","statsLoaded","intentsArr","intentCounts","Object","keys","forEach","key","sort","a","b","parseFloat","slice","notRecognizedMessages","filter","timestamp","isBetween","text","failedPromptsObj","promptStatus","split","date","step","obj","success","fail","failedPromptCounts","percent","round","frequentlyFailedPrompts"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  ArrowRight16\n} from '@carbon/icons-react';\n\nimport './overview-table.scss';\nimport { getLayeredDictCount } from \"../../utils\"\nimport moment from 'moment';\n\nclass OverviewTable extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.titleDict = {\n          \"mostCommon\": \"Most common topics\",\n          \"leastCommon\": \"Least common topics\",\n          \"frequentlyFailedPrompts\": \"Frequently failed prompts\",\n          \"notRecognized\": \"Requests not recognized\"\n        }\n    }\n\n    render () {\n      let data = this.props[this.props.type] ?? []\n\n      let divider = <div style={{ width: \"100%\", height: \"1px\", background: \"#f4f4f4\", marginBottom: \"2px\" }}></div>\n      var tableRows = []\n\n      for (var i = 0; i < Math.min(10, data.length); i++) {\n        let val = data[i]\n\n        if (this.props.type === \"notRecognized\") {          \n          tableRows.push(<div className=\"overview-table-row\">\n                          <p className=\"overview-table-label\">{val.label}</p>\n                          { divider }\n                        </div>)\n        } else {\n            tableRows.push(<div className=\"overview-table-row\">\n                            <div className=\"overview-table-label-wrapper\">\n                            { this.props.type == \"frequentlyFailedPrompts\" && <p className=\"overview-table-badge\">{ val.intent }</p> }\n                            { this.props.type == \"frequentlyFailedPrompts\" && <ArrowRight16 className=\"overview-table-arrow\" />}\n                            <p className={ this.props.type == \"frequentlyFailedPrompts\" ? \"overview-table-label-wih-badge\" :  \"overview-table-num-label\"}>{ val.label + \" LONGER TESTING TESTING\" }</p>\n                            </div>\n                            <p className=\"overview-table-num\">{ this.props.type === \"frequentlyFailedPrompts\" ? val.count  + \"%\" : val.count}</p>\n                            <div className=\"overview-table-progress-container\">\n                              <div className=\"overview-table-progress-back\"/>\n                              <div className={ this.props.type === \"mostCommon\" ? \"overview-table-green-bar\" : \"overview-table-red-bar\" } \n                                style={{ width: (this.props.type === \"frequentlyFailedPrompts\" ? val.count : (100 * (val.count / this.props.maxTopicCount))) + \"%\" }}/>\n                              </div>\n                          </div>)\n        }\n      }\n\n      // Add empty cells if there are < 10\n      for (i = 0; i < Math.max(0, 10 - data.length); i++) {\n        if (this.props.type === \"notRecognized\") {          \n          tableRows.push(<div className=\"overview-table-row\">\n                          <div style={{ height: \"30px\" }}></div>\n                          { divider }\n                        </div>)\n        } else {\n            tableRows.push(<div className=\"overview-table-row\">\n                            <p className=\"overview-table-num-label transparent-text\">-</p>\n                            <p className=\"overview-table-num transparent-text\">-</p>\n                            <div className=\"overview-table-progress-container\">\n                              <div className=\"overview-table-progress-back\"/>\n                            </div>\n                          </div>)\n        }\n      }\n\n      return <div className=\"overview-table\">\n              <p className=\"panel-title\">{ this.titleDict[this.props.type] }</p>\n              <p className=\"overview-table-date\">{ this.props.startDate } - { this.props.endDate }</p>\n              { divider }\n              <ul>\n                { tableRows.map((value, index) => {\n                  return <li key={index}>{value}</li>\n                }) }\n              </ul>\n              {(this.props.type === \"notRecognized\") && \n                 <Link className='panel-link-div' to=\"/not-recognized\">\n                  <p className=\"panel-link\">View all</p><ArrowRight16/>\n                 </Link> }\n            </div>\n\n    }\n}\n\nconst mapStateToProps = (state, ownState) => {\n  let props = {\n      ...ownState,\n      mostCommon: [],\n      leastCommon: [],\n      frequentlyEscalated: [],\n      notRecognized: [],\n      startDate: moment(state.startDate, \"L\").format(\"MMM DD YYYY\"),\n      endDate: moment(state.endDate, \"L\").format(\"MMM DD YYYY\")\n  }\n\n  if (state.statsLoaded) {\n      let maxTopicCount = 0\n      var intentsArr = []\n\n      let intentCounts = getLayeredDictCount(state.intentCounts, state.startDate, state.endDate)\n\n      Object.keys(intentCounts).forEach(key => {\n          maxTopicCount = Math.max(intentCounts[key], maxTopicCount)\n          intentsArr.push({ \"label\": key, \"count\": intentCounts[key] })\n      })\n\n      props[\"maxTopicCount\"] = maxTopicCount\n\n      intentsArr.sort((a, b) => parseFloat(b.count) - parseFloat(a.count));\n      let mostCommon = intentsArr.slice(0, 10)\n\n      intentsArr.sort((a, b) => parseFloat(a.count) - parseFloat(b.count));\n      let leastCommon = intentsArr.slice(0, 10)\n\n      props.mostCommon = mostCommon\n      props.leastCommon = leastCommon\n      props.notRecognized = state.notRecognizedMessages.filter(val => moment(val.timestamp).isBetween(state.startDate, state.endDate, \"day\", \"[]\"))\n        .sort((a, b) => moment(b.timestamp) - moment(a.timestamp)).map(val => ({label: val.text}))\n\n      let failedPromptsObj = {}\n      Object.keys(state.promptStatus).forEach(key => {\n        let [date, intent, step] = key.split(\":::\")\n        if (!moment(date, \"L\").isBetween(state.startDate, state.endDate, \"day\", \"[]\"))\n          return\n\n        let obj = failedPromptsObj[intent + \":::\" + step] ?? { intent: intent, step: step, success: 0, fail: 0 }\n\n        obj.success += state.promptStatus[key].success\n        obj.fail += state.promptStatus[key].fail\n\n        failedPromptsObj[intent + \":::\" + step] = obj\n      })\n\n      let failedPromptCounts = []\n      Object.keys(failedPromptsObj).forEach(key => {\n        let [intent, step] = key.split(\":::\")\n        let percent = Math.round(100 * (failedPromptsObj[key].fail / (failedPromptsObj[key].success + failedPromptsObj[key].fail)))\n        failedPromptCounts.push({ \"intent\": intent, \"label\": step, \"count\": percent })\n      })\n\n      failedPromptCounts.sort((a, b) => parseFloat(b.count) - parseFloat(a.count))\n      props.frequentlyFailedPrompts = failedPromptCounts.slice(0, 10)\n  }\n\n  return props\n}\n\nexport default connect(mapStateToProps)(OverviewTable)"]},"metadata":{},"sourceType":"module"}