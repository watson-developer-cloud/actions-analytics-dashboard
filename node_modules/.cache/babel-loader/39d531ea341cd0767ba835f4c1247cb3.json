{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Bar } from './bar';\nimport { Tools } from '../../tools';\nimport { CartesianOrientations, ColorClassNameTypes, Events, Roles } from '../../interfaces'; // D3 Imports\n\nimport { map } from 'd3-collection';\nimport { select } from 'd3-selection';\nimport { scaleBand } from 'd3-scale';\n\nvar GroupedBar =\n/** @class */\nfunction (_super) {\n  __extends(GroupedBar, _super);\n\n  function GroupedBar() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'grouped-bar';\n    _this.padding = 5; // Highlight elements that match the hovered legend item\n\n    _this.handleLegendOnHover = function (event) {\n      var hoveredElement = event.detail.hoveredElement;\n\n      var groupMapsTo = _this.getOptions().data.groupMapsTo;\n\n      _this.parent.selectAll('path.bar').transition(_this.services.transitions.getTransition('legend-hover-bar')).attr('opacity', function (d) {\n        return d[groupMapsTo] !== hoveredElement.datum()['name'] ? 0.3 : 1;\n      });\n    }; // Un-highlight all elements\n\n\n    _this.handleLegendMouseOut = function (event) {\n      _this.parent.selectAll('path.bar').transition(_this.services.transitions.getTransition('legend-mouseout-bar')).attr('opacity', 1);\n    };\n\n    return _this;\n  }\n\n  GroupedBar.prototype.init = function () {\n    var eventsFragment = this.services.events; // Highlight correct circle on legend item hovers\n\n    eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover); // Un-highlight circles on legend item mouseouts\n\n    eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n  };\n\n  GroupedBar.prototype.render = function (animate) {\n    var _this = this; // Chart options mixed with the internal configurations\n\n\n    var displayData = this.model.getDisplayData(this.configs.groups);\n    var options = this.getOptions();\n    var groupMapsTo = options.data.groupMapsTo; // Get unique labels\n\n    this.setGroupScale(); // Grab container SVG\n\n    var svg = this.getContainerSVG({\n      withinChartClip: true\n    });\n    var allDataLabels = map(displayData, function (datum) {\n      var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(datum);\n\n      return datum[domainIdentifier];\n    }).keys(); // Update data on bar groups\n\n    var barGroups = svg.selectAll('g.bars').data(allDataLabels, function (label) {\n      return label;\n    }); // Remove dot groups that need to be removed\n\n    barGroups.exit().attr('opacity', 0).remove(); // Add the bar groups that need to be introduced\n\n    var barGroupsEnter = barGroups.enter().append('g').classed('bars', true).attr('role', Roles.GROUP).attr('data-name', 'bars'); // Update data on all bars\n\n    var allBarGroups = barGroupsEnter.merge(barGroups);\n    allBarGroups // Transition\n    .transition(this.services.transitions.getTransition('bar-group-update-enter', animate)).attr('transform', function (label, i) {\n      var scaleValue = _this.services.cartesianScales.getDomainValue(label, i);\n\n      var translateBy = scaleValue - _this.getGroupWidth() / 2; // const translateBy = scaleValue - this.getGroupWidth(null) / 2 + this.getBarWidth(null);\n\n      if (_this.services.cartesianScales.getOrientation() === CartesianOrientations.VERTICAL) {\n        return \"translate(\" + translateBy + \", 0)\";\n      } else {\n        // translate in the y direction for horizontal groups\n        return \"translate(0, \" + translateBy + \")\";\n      }\n    });\n    var bars = allBarGroups.selectAll('path.bar').data(function (label) {\n      return _this.getDataCorrespondingToLabel(label);\n    }, function (d) {\n      return d[groupMapsTo];\n    }); // Remove bars that are no longer needed\n\n    bars.exit().attr('opacity', 0).remove(); // Add the bars that need to be introduced\n\n    var barsEnter = bars.enter().append('path').attr('opacity', 0); // code for vertical grouped bar charts\n\n    barsEnter.merge(bars).classed('bar', true).transition(this.services.transitions.getTransition('bar-update-enter', animate)).attr('class', function (d) {\n      return _this.model.getColorClassName({\n        classNameTypes: [ColorClassNameTypes.FILL],\n        dataGroupName: d[groupMapsTo],\n        originalClassName: 'bar'\n      });\n    }).style('fill', function (d) {\n      return _this.model.getFillColor(d[groupMapsTo]);\n    }).attr('d', function (d) {\n      /*\n       * Orientation support for horizontal/vertical bar charts\n       * Determine coordinates needed for a vertical set of paths\n       * to draw the bars needed, and pass those coordinates down to\n       * generateSVGPathString() to decide whether it needs to flip them\n       */\n      var startX = _this.groupScale(d[groupMapsTo]);\n\n      var barWidth = _this.getBarWidth();\n\n      var x0 = startX;\n      var x1 = startX + barWidth;\n\n      var rangeAxis = _this.services.cartesianScales.getRangeAxisPosition({\n        datum: d\n      });\n\n      var y0 = _this.services.cartesianScales.getValueThroughAxisPosition(rangeAxis, 0);\n\n      var y1 = _this.services.cartesianScales.getRangeValue(d); // don't show if part of bar is out of zoom domain\n\n\n      if (_this.isOutsideZoomedDomain(x0, x1)) {\n        return;\n      }\n\n      return Tools.generateSVGPathString({\n        x0: x0,\n        x1: x1,\n        y0: y0,\n        y1: y1\n      }, _this.services.cartesianScales.getOrientation());\n    }).attr('opacity', 1) // a11y\n    .attr('role', Roles.GRAPHICS_SYMBOL).attr('aria-roledescription', 'bar').attr('aria-label', function (d) {\n      return d.value;\n    }); // Add event listeners to elements drawn\n\n    this.addEventListeners();\n  };\n\n  GroupedBar.prototype.addEventListeners = function () {\n    var self = this;\n    this.parent.selectAll('path.bar').on('mouseover', function (datum) {\n      var hoveredElement = select(this);\n      hoveredElement.classed('hovered', true);\n      hoveredElement.transition(self.services.transitions.getTransition('graph_element_mouseover_fill_update')); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOVER, {\n        element: hoveredElement,\n        datum: datum\n      }); // Show tooltip\n\n      self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n        hoveredElement: hoveredElement,\n        data: [datum]\n      });\n    }).on('mousemove', function (datum) {\n      var hoveredElement = select(this); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEMOVE, {\n        element: hoveredElement,\n        datum: datum\n      });\n      self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n    }).on('click', function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Bar.BAR_CLICK, {\n        element: select(this),\n        datum: datum\n      });\n    }).on('mouseout', function (datum) {\n      var hoveredElement = select(this);\n      hoveredElement.classed('hovered', false);\n      hoveredElement.transition(self.services.transitions.getTransition('graph_element_mouseout_fill_update')); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOUT, {\n        element: hoveredElement,\n        datum: datum\n      }); // Hide tooltip\n\n      self.services.events.dispatchEvent(Events.Tooltip.HIDE, {\n        hoveredElement: hoveredElement\n      });\n    });\n  };\n\n  GroupedBar.prototype.destroy = function () {\n    // Remove event listeners\n    this.parent.selectAll('path.bar').on('mouseover', null).on('mousemove', null).on('mouseout', null); // Remove legend listeners\n\n    var eventsFragment = this.services.events;\n    eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n    eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n  };\n\n  GroupedBar.prototype.getDataCorrespondingToLabel = function (label) {\n    var _this = this;\n\n    var displayData = this.model.getDisplayData(this.configs.groups);\n    return displayData.filter(function (datum) {\n      var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(datum);\n\n      return datum[domainIdentifier] === label;\n    });\n  };\n\n  GroupedBar.prototype.getGroupWidth = function () {\n    var activeData = this.model.getGroupedData(this.configs.groups);\n    var totalGroupPadding = this.getTotalGroupPadding();\n    return this.getBarWidth() * activeData.length + totalGroupPadding;\n  };\n\n  GroupedBar.prototype.getTotalGroupPadding = function () {\n    var activeData = this.model.getGroupedData(this.configs.groups);\n\n    if (activeData.length === 1) {\n      return 0;\n    }\n\n    var domainScale = this.services.cartesianScales.getDomainScale();\n    var padding = Math.min(5, 5 * (domainScale.step() / 70));\n    return padding * (activeData.length - 1);\n  }; // Gets the correct width for bars based on options & configurations\n\n\n  GroupedBar.prototype.getBarWidth = function () {\n    var options = this.getOptions();\n    var providedWidth = Tools.getProperty(options, 'bars', 'width');\n    var providedMaxWidth = Tools.getProperty(options, 'bars', 'maxWidth'); // If there's a provided width, compare with maxWidth and\n    // Determine which to return\n\n    if (providedWidth !== null) {\n      if (providedMaxWidth === null || providedWidth <= providedMaxWidth) {\n        return providedWidth;\n      }\n    }\n\n    var activeData = this.model.getGroupedData(this.configs.groups);\n    var numOfActiveDataGroups = activeData.length;\n    var totalGroupPadding = this.getTotalGroupPadding();\n    var domainScale = this.services.cartesianScales.getDomainScale();\n    return Math.min(providedMaxWidth, (domainScale.step() - totalGroupPadding) / numOfActiveDataGroups);\n  };\n\n  GroupedBar.prototype.setGroupScale = function () {\n    var activeData = this.model.getActiveDataGroupNames(this.configs.groups);\n    this.groupScale = scaleBand().domain(activeData).rangeRound([0, this.getGroupWidth()]);\n  };\n\n  return GroupedBar;\n}(Bar);\n\nexport { GroupedBar };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/components/graphs/bar-grouped.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Bar","Tools","CartesianOrientations","ColorClassNameTypes","Events","Roles","map","select","scaleBand","GroupedBar","_super","_this","apply","arguments","type","padding","handleLegendOnHover","event","hoveredElement","detail","groupMapsTo","getOptions","data","parent","selectAll","transition","services","transitions","getTransition","attr","datum","handleLegendMouseOut","init","eventsFragment","events","addEventListener","Legend","ITEM_HOVER","ITEM_MOUSEOUT","render","animate","displayData","model","getDisplayData","configs","groups","options","setGroupScale","svg","getContainerSVG","withinChartClip","allDataLabels","domainIdentifier","cartesianScales","getDomainIdentifier","keys","barGroups","label","exit","remove","barGroupsEnter","enter","append","classed","GROUP","allBarGroups","merge","i","scaleValue","getDomainValue","translateBy","getGroupWidth","getOrientation","VERTICAL","bars","getDataCorrespondingToLabel","barsEnter","getColorClassName","classNameTypes","FILL","dataGroupName","originalClassName","style","getFillColor","startX","groupScale","barWidth","getBarWidth","x0","x1","rangeAxis","getRangeAxisPosition","y0","getValueThroughAxisPosition","y1","getRangeValue","isOutsideZoomedDomain","generateSVGPathString","GRAPHICS_SYMBOL","value","addEventListeners","self","on","dispatchEvent","BAR_MOUSEOVER","element","Tooltip","SHOW","BAR_MOUSEMOVE","MOVE","BAR_CLICK","BAR_MOUSEOUT","HIDE","destroy","removeEventListener","filter","activeData","getGroupedData","totalGroupPadding","getTotalGroupPadding","length","domainScale","getDomainScale","Math","min","step","providedWidth","getProperty","providedMaxWidth","numOfActiveDataGroups","getActiveDataGroupNames","domain","rangeRound"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,cAAa,GAAG,uBAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,cAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd;AAAiB,YAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAA1C;AAAwD,KAF9E;;AAGA,WAAOP,cAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,cAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C,C,CAaA;;;AACA,SAASI,GAAT,QAAoB,OAApB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,qBAAT,EAAgCC,mBAAhC,EAAqDC,MAArD,EAA6DC,KAA7D,QAA2E,kBAA3E,C,CACA;;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,SAAT,QAA0B,UAA1B;;AACA,IAAIC,UAAU;AAAG;AAAe,UAAUC,MAAV,EAAkB;AAC9CxB,EAAAA,SAAS,CAACuB,UAAD,EAAaC,MAAb,CAAT;;AACA,WAASD,UAAT,GAAsB;AAClB,QAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;AACAF,IAAAA,KAAK,CAACG,IAAN,GAAa,aAAb;AACAH,IAAAA,KAAK,CAACI,OAAN,GAAgB,CAAhB,CAHkB,CAIlB;;AACAJ,IAAAA,KAAK,CAACK,mBAAN,GAA4B,UAAUC,KAAV,EAAiB;AACzC,UAAIC,cAAc,GAAGD,KAAK,CAACE,MAAN,CAAaD,cAAlC;;AACA,UAAIE,WAAW,GAAGT,KAAK,CAACU,UAAN,GAAmBC,IAAnB,CAAwBF,WAA1C;;AACAT,MAAAA,KAAK,CAACY,MAAN,CACKC,SADL,CACe,UADf,EAEKC,UAFL,CAEgBd,KAAK,CAACe,QAAN,CAAeC,WAAf,CAA2BC,aAA3B,CAAyC,kBAAzC,CAFhB,EAGKC,IAHL,CAGU,SAHV,EAGqB,UAAUzC,CAAV,EAAa;AAC9B,eAAOA,CAAC,CAACgC,WAAD,CAAD,KAAmBF,cAAc,CAACY,KAAf,GAAuB,MAAvB,CAAnB,GAAoD,GAApD,GAA0D,CAAjE;AACH,OALD;AAMH,KATD,CALkB,CAelB;;;AACAnB,IAAAA,KAAK,CAACoB,oBAAN,GAA6B,UAAUd,KAAV,EAAiB;AAC1CN,MAAAA,KAAK,CAACY,MAAN,CACKC,SADL,CACe,UADf,EAEKC,UAFL,CAEgBd,KAAK,CAACe,QAAN,CAAeC,WAAf,CAA2BC,aAA3B,CAAyC,qBAAzC,CAFhB,EAGKC,IAHL,CAGU,SAHV,EAGqB,CAHrB;AAIH,KALD;;AAMA,WAAOlB,KAAP;AACH;;AACDF,EAAAA,UAAU,CAACX,SAAX,CAAqBkC,IAArB,GAA4B,YAAY;AACpC,QAAIC,cAAc,GAAG,KAAKP,QAAL,CAAcQ,MAAnC,CADoC,CAEpC;;AACAD,IAAAA,cAAc,CAACE,gBAAf,CAAgC/B,MAAM,CAACgC,MAAP,CAAcC,UAA9C,EAA0D,KAAKrB,mBAA/D,EAHoC,CAIpC;;AACAiB,IAAAA,cAAc,CAACE,gBAAf,CAAgC/B,MAAM,CAACgC,MAAP,CAAcE,aAA9C,EAA6D,KAAKP,oBAAlE;AACH,GAND;;AAOAtB,EAAAA,UAAU,CAACX,SAAX,CAAqByC,MAArB,GAA8B,UAAUC,OAAV,EAAmB;AAC7C,QAAI7B,KAAK,GAAG,IAAZ,CAD6C,CAE7C;;;AACA,QAAI8B,WAAW,GAAG,KAAKC,KAAL,CAAWC,cAAX,CAA0B,KAAKC,OAAL,CAAaC,MAAvC,CAAlB;AACA,QAAIC,OAAO,GAAG,KAAKzB,UAAL,EAAd;AACA,QAAID,WAAW,GAAG0B,OAAO,CAACxB,IAAR,CAAaF,WAA/B,CAL6C,CAM7C;;AACA,SAAK2B,aAAL,GAP6C,CAQ7C;;AACA,QAAIC,GAAG,GAAG,KAAKC,eAAL,CAAqB;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAArB,CAAV;AACA,QAAIC,aAAa,GAAG7C,GAAG,CAACmC,WAAD,EAAc,UAAUX,KAAV,EAAiB;AAClD,UAAIsB,gBAAgB,GAAGzC,KAAK,CAACe,QAAN,CAAe2B,eAAf,CAA+BC,mBAA/B,CAAmDxB,KAAnD,CAAvB;;AACA,aAAOA,KAAK,CAACsB,gBAAD,CAAZ;AACH,KAHsB,CAAH,CAGjBG,IAHiB,EAApB,CAV6C,CAc7C;;AACA,QAAIC,SAAS,GAAGR,GAAG,CACdxB,SADW,CACD,QADC,EAEXF,IAFW,CAEN6B,aAFM,EAES,UAAUM,KAAV,EAAiB;AAAE,aAAOA,KAAP;AAAe,KAF3C,CAAhB,CAf6C,CAkB7C;;AACAD,IAAAA,SAAS,CAACE,IAAV,GAAiB7B,IAAjB,CAAsB,SAAtB,EAAiC,CAAjC,EAAoC8B,MAApC,GAnB6C,CAoB7C;;AACA,QAAIC,cAAc,GAAGJ,SAAS,CACzBK,KADgB,GAEhBC,MAFgB,CAET,GAFS,EAGhBC,OAHgB,CAGR,MAHQ,EAGA,IAHA,EAIhBlC,IAJgB,CAIX,MAJW,EAIHxB,KAAK,CAAC2D,KAJH,EAKhBnC,IALgB,CAKX,WALW,EAKE,MALF,CAArB,CArB6C,CA2B7C;;AACA,QAAIoC,YAAY,GAAGL,cAAc,CAACM,KAAf,CAAqBV,SAArB,CAAnB;AACAS,IAAAA,YAAY,CACR;AADQ,KAEPxC,UAFL,CAEgB,KAAKC,QAAL,CAAcC,WAAd,CAA0BC,aAA1B,CAAwC,wBAAxC,EAAkEY,OAAlE,CAFhB,EAGKX,IAHL,CAGU,WAHV,EAGuB,UAAU4B,KAAV,EAAiBU,CAAjB,EAAoB;AACvC,UAAIC,UAAU,GAAGzD,KAAK,CAACe,QAAN,CAAe2B,eAAf,CAA+BgB,cAA/B,CAA8CZ,KAA9C,EAAqDU,CAArD,CAAjB;;AACA,UAAIG,WAAW,GAAGF,UAAU,GAAGzD,KAAK,CAAC4D,aAAN,KAAwB,CAAvD,CAFuC,CAGvC;;AACA,UAAI5D,KAAK,CAACe,QAAN,CAAe2B,eAAf,CAA+BmB,cAA/B,OACAtE,qBAAqB,CAACuE,QAD1B,EACoC;AAChC,eAAO,eAAeH,WAAf,GAA6B,MAApC;AACH,OAHD,MAIK;AACD;AACA,eAAO,kBAAkBA,WAAlB,GAAgC,GAAvC;AACH;AACJ,KAfD;AAgBA,QAAII,IAAI,GAAGT,YAAY,CAACzC,SAAb,CAAuB,UAAvB,EAAmCF,IAAnC,CAAwC,UAAUmC,KAAV,EAAiB;AAAE,aAAO9C,KAAK,CAACgE,2BAAN,CAAkClB,KAAlC,CAAP;AAAkD,KAA7G,EAA+G,UAAUrE,CAAV,EAAa;AAAE,aAAOA,CAAC,CAACgC,WAAD,CAAR;AAAwB,KAAtJ,CAAX,CA7C6C,CA8C7C;;AACAsD,IAAAA,IAAI,CAAChB,IAAL,GAAY7B,IAAZ,CAAiB,SAAjB,EAA4B,CAA5B,EAA+B8B,MAA/B,GA/C6C,CAgD7C;;AACA,QAAIiB,SAAS,GAAGF,IAAI,CAACb,KAAL,GAAaC,MAAb,CAAoB,MAApB,EAA4BjC,IAA5B,CAAiC,SAAjC,EAA4C,CAA5C,CAAhB,CAjD6C,CAkD7C;;AACA+C,IAAAA,SAAS,CACJV,KADL,CACWQ,IADX,EAEKX,OAFL,CAEa,KAFb,EAEoB,IAFpB,EAGKtC,UAHL,CAGgB,KAAKC,QAAL,CAAcC,WAAd,CAA0BC,aAA1B,CAAwC,kBAAxC,EAA4DY,OAA5D,CAHhB,EAIKX,IAJL,CAIU,OAJV,EAImB,UAAUzC,CAAV,EAAa;AAC5B,aAAOuB,KAAK,CAAC+B,KAAN,CAAYmC,iBAAZ,CAA8B;AACjCC,QAAAA,cAAc,EAAE,CAAC3E,mBAAmB,CAAC4E,IAArB,CADiB;AAEjCC,QAAAA,aAAa,EAAE5F,CAAC,CAACgC,WAAD,CAFiB;AAGjC6D,QAAAA,iBAAiB,EAAE;AAHc,OAA9B,CAAP;AAKH,KAVD,EAWKC,KAXL,CAWW,MAXX,EAWmB,UAAU9F,CAAV,EAAa;AAAE,aAAOuB,KAAK,CAAC+B,KAAN,CAAYyC,YAAZ,CAAyB/F,CAAC,CAACgC,WAAD,CAA1B,CAAP;AAAkD,KAXpF,EAYKS,IAZL,CAYU,GAZV,EAYe,UAAUzC,CAAV,EAAa;AACxB;AACZ;AACA;AACA;AACA;AACA;AACY,UAAIgG,MAAM,GAAGzE,KAAK,CAAC0E,UAAN,CAAiBjG,CAAC,CAACgC,WAAD,CAAlB,CAAb;;AACA,UAAIkE,QAAQ,GAAG3E,KAAK,CAAC4E,WAAN,EAAf;;AACA,UAAIC,EAAE,GAAGJ,MAAT;AACA,UAAIK,EAAE,GAAGL,MAAM,GAAGE,QAAlB;;AACA,UAAII,SAAS,GAAG/E,KAAK,CAACe,QAAN,CAAe2B,eAAf,CAA+BsC,oBAA/B,CAAoD;AAAE7D,QAAAA,KAAK,EAAE1C;AAAT,OAApD,CAAhB;;AACA,UAAIwG,EAAE,GAAGjF,KAAK,CAACe,QAAN,CAAe2B,eAAf,CAA+BwC,2BAA/B,CAA2DH,SAA3D,EAAsE,CAAtE,CAAT;;AACA,UAAII,EAAE,GAAGnF,KAAK,CAACe,QAAN,CAAe2B,eAAf,CAA+B0C,aAA/B,CAA6C3G,CAA7C,CAAT,CAbwB,CAcxB;;;AACA,UAAIuB,KAAK,CAACqF,qBAAN,CAA4BR,EAA5B,EAAgCC,EAAhC,CAAJ,EAAyC;AACrC;AACH;;AACD,aAAOxF,KAAK,CAACgG,qBAAN,CAA4B;AAAET,QAAAA,EAAE,EAAEA,EAAN;AAAUC,QAAAA,EAAE,EAAEA,EAAd;AAAkBG,QAAAA,EAAE,EAAEA,EAAtB;AAA0BE,QAAAA,EAAE,EAAEA;AAA9B,OAA5B,EAAgEnF,KAAK,CAACe,QAAN,CAAe2B,eAAf,CAA+BmB,cAA/B,EAAhE,CAAP;AACH,KA/BD,EAgCK3C,IAhCL,CAgCU,SAhCV,EAgCqB,CAhCrB,EAiCI;AAjCJ,KAkCKA,IAlCL,CAkCU,MAlCV,EAkCkBxB,KAAK,CAAC6F,eAlCxB,EAmCKrE,IAnCL,CAmCU,sBAnCV,EAmCkC,KAnClC,EAoCKA,IApCL,CAoCU,YApCV,EAoCwB,UAAUzC,CAAV,EAAa;AAAE,aAAOA,CAAC,CAAC+G,KAAT;AAAiB,KApCxD,EAnD6C,CAwF7C;;AACA,SAAKC,iBAAL;AACH,GA1FD;;AA2FA3F,EAAAA,UAAU,CAACX,SAAX,CAAqBsG,iBAArB,GAAyC,YAAY;AACjD,QAAIC,IAAI,GAAG,IAAX;AACA,SAAK9E,MAAL,CACKC,SADL,CACe,UADf,EAEK8E,EAFL,CAEQ,WAFR,EAEqB,UAAUxE,KAAV,EAAiB;AAClC,UAAIZ,cAAc,GAAGX,MAAM,CAAC,IAAD,CAA3B;AACAW,MAAAA,cAAc,CAAC6C,OAAf,CAAuB,SAAvB,EAAkC,IAAlC;AACA7C,MAAAA,cAAc,CAACO,UAAf,CAA0B4E,IAAI,CAAC3E,QAAL,CAAcC,WAAd,CAA0BC,aAA1B,CAAwC,qCAAxC,CAA1B,EAHkC,CAIlC;;AACAyE,MAAAA,IAAI,CAAC3E,QAAL,CAAcQ,MAAd,CAAqBqE,aAArB,CAAmCnG,MAAM,CAACJ,GAAP,CAAWwG,aAA9C,EAA6D;AACzDC,QAAAA,OAAO,EAAEvF,cADgD;AAEzDY,QAAAA,KAAK,EAAEA;AAFkD,OAA7D,EALkC,CASlC;;AACAuE,MAAAA,IAAI,CAAC3E,QAAL,CAAcQ,MAAd,CAAqBqE,aAArB,CAAmCnG,MAAM,CAACsG,OAAP,CAAeC,IAAlD,EAAwD;AACpDzF,QAAAA,cAAc,EAAEA,cADoC;AAEpDI,QAAAA,IAAI,EAAE,CAACQ,KAAD;AAF8C,OAAxD;AAIH,KAhBD,EAiBKwE,EAjBL,CAiBQ,WAjBR,EAiBqB,UAAUxE,KAAV,EAAiB;AAClC,UAAIZ,cAAc,GAAGX,MAAM,CAAC,IAAD,CAA3B,CADkC,CAElC;;AACA8F,MAAAA,IAAI,CAAC3E,QAAL,CAAcQ,MAAd,CAAqBqE,aAArB,CAAmCnG,MAAM,CAACJ,GAAP,CAAW4G,aAA9C,EAA6D;AACzDH,QAAAA,OAAO,EAAEvF,cADgD;AAEzDY,QAAAA,KAAK,EAAEA;AAFkD,OAA7D;AAIAuE,MAAAA,IAAI,CAAC3E,QAAL,CAAcQ,MAAd,CAAqBqE,aAArB,CAAmCnG,MAAM,CAACsG,OAAP,CAAeG,IAAlD;AACH,KAzBD,EA0BKP,EA1BL,CA0BQ,OA1BR,EA0BiB,UAAUxE,KAAV,EAAiB;AAC9B;AACAuE,MAAAA,IAAI,CAAC3E,QAAL,CAAcQ,MAAd,CAAqBqE,aAArB,CAAmCnG,MAAM,CAACJ,GAAP,CAAW8G,SAA9C,EAAyD;AACrDL,QAAAA,OAAO,EAAElG,MAAM,CAAC,IAAD,CADsC;AAErDuB,QAAAA,KAAK,EAAEA;AAF8C,OAAzD;AAIH,KAhCD,EAiCKwE,EAjCL,CAiCQ,UAjCR,EAiCoB,UAAUxE,KAAV,EAAiB;AACjC,UAAIZ,cAAc,GAAGX,MAAM,CAAC,IAAD,CAA3B;AACAW,MAAAA,cAAc,CAAC6C,OAAf,CAAuB,SAAvB,EAAkC,KAAlC;AACA7C,MAAAA,cAAc,CAACO,UAAf,CAA0B4E,IAAI,CAAC3E,QAAL,CAAcC,WAAd,CAA0BC,aAA1B,CAAwC,oCAAxC,CAA1B,EAHiC,CAIjC;;AACAyE,MAAAA,IAAI,CAAC3E,QAAL,CAAcQ,MAAd,CAAqBqE,aAArB,CAAmCnG,MAAM,CAACJ,GAAP,CAAW+G,YAA9C,EAA4D;AACxDN,QAAAA,OAAO,EAAEvF,cAD+C;AAExDY,QAAAA,KAAK,EAAEA;AAFiD,OAA5D,EALiC,CASjC;;AACAuE,MAAAA,IAAI,CAAC3E,QAAL,CAAcQ,MAAd,CAAqBqE,aAArB,CAAmCnG,MAAM,CAACsG,OAAP,CAAeM,IAAlD,EAAwD;AACpD9F,QAAAA,cAAc,EAAEA;AADoC,OAAxD;AAGH,KA9CD;AA+CH,GAjDD;;AAkDAT,EAAAA,UAAU,CAACX,SAAX,CAAqBmH,OAArB,GAA+B,YAAY;AACvC;AACA,SAAK1F,MAAL,CACKC,SADL,CACe,UADf,EAEK8E,EAFL,CAEQ,WAFR,EAEqB,IAFrB,EAGKA,EAHL,CAGQ,WAHR,EAGqB,IAHrB,EAIKA,EAJL,CAIQ,UAJR,EAIoB,IAJpB,EAFuC,CAOvC;;AACA,QAAIrE,cAAc,GAAG,KAAKP,QAAL,CAAcQ,MAAnC;AACAD,IAAAA,cAAc,CAACiF,mBAAf,CAAmC9G,MAAM,CAACgC,MAAP,CAAcC,UAAjD,EAA6D,KAAKrB,mBAAlE;AACAiB,IAAAA,cAAc,CAACiF,mBAAf,CAAmC9G,MAAM,CAACgC,MAAP,CAAcE,aAAjD,EAAgE,KAAKP,oBAArE;AACH,GAXD;;AAYAtB,EAAAA,UAAU,CAACX,SAAX,CAAqB6E,2BAArB,GAAmD,UAAUlB,KAAV,EAAiB;AAChE,QAAI9C,KAAK,GAAG,IAAZ;;AACA,QAAI8B,WAAW,GAAG,KAAKC,KAAL,CAAWC,cAAX,CAA0B,KAAKC,OAAL,CAAaC,MAAvC,CAAlB;AACA,WAAOJ,WAAW,CAAC0E,MAAZ,CAAmB,UAAUrF,KAAV,EAAiB;AACvC,UAAIsB,gBAAgB,GAAGzC,KAAK,CAACe,QAAN,CAAe2B,eAAf,CAA+BC,mBAA/B,CAAmDxB,KAAnD,CAAvB;;AACA,aAAOA,KAAK,CAACsB,gBAAD,CAAL,KAA4BK,KAAnC;AACH,KAHM,CAAP;AAIH,GAPD;;AAQAhD,EAAAA,UAAU,CAACX,SAAX,CAAqByE,aAArB,GAAqC,YAAY;AAC7C,QAAI6C,UAAU,GAAG,KAAK1E,KAAL,CAAW2E,cAAX,CAA0B,KAAKzE,OAAL,CAAaC,MAAvC,CAAjB;AACA,QAAIyE,iBAAiB,GAAG,KAAKC,oBAAL,EAAxB;AACA,WAAO,KAAKhC,WAAL,KAAqB6B,UAAU,CAACI,MAAhC,GAAyCF,iBAAhD;AACH,GAJD;;AAKA7G,EAAAA,UAAU,CAACX,SAAX,CAAqByH,oBAArB,GAA4C,YAAY;AACpD,QAAIH,UAAU,GAAG,KAAK1E,KAAL,CAAW2E,cAAX,CAA0B,KAAKzE,OAAL,CAAaC,MAAvC,CAAjB;;AACA,QAAIuE,UAAU,CAACI,MAAX,KAAsB,CAA1B,EAA6B;AACzB,aAAO,CAAP;AACH;;AACD,QAAIC,WAAW,GAAG,KAAK/F,QAAL,CAAc2B,eAAd,CAA8BqE,cAA9B,EAAlB;AACA,QAAI3G,OAAO,GAAG4G,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAKH,WAAW,CAACI,IAAZ,KAAqB,EAA1B,CAAZ,CAAd;AACA,WAAO9G,OAAO,IAAIqG,UAAU,CAACI,MAAX,GAAoB,CAAxB,CAAd;AACH,GARD,CAvM8C,CAgN9C;;;AACA/G,EAAAA,UAAU,CAACX,SAAX,CAAqByF,WAArB,GAAmC,YAAY;AAC3C,QAAIzC,OAAO,GAAG,KAAKzB,UAAL,EAAd;AACA,QAAIyG,aAAa,GAAG7H,KAAK,CAAC8H,WAAN,CAAkBjF,OAAlB,EAA2B,MAA3B,EAAmC,OAAnC,CAApB;AACA,QAAIkF,gBAAgB,GAAG/H,KAAK,CAAC8H,WAAN,CAAkBjF,OAAlB,EAA2B,MAA3B,EAAmC,UAAnC,CAAvB,CAH2C,CAI3C;AACA;;AACA,QAAIgF,aAAa,KAAK,IAAtB,EAA4B;AACxB,UAAIE,gBAAgB,KAAK,IAArB,IACAF,aAAa,IAAIE,gBADrB,EACuC;AACnC,eAAOF,aAAP;AACH;AACJ;;AACD,QAAIV,UAAU,GAAG,KAAK1E,KAAL,CAAW2E,cAAX,CAA0B,KAAKzE,OAAL,CAAaC,MAAvC,CAAjB;AACA,QAAIoF,qBAAqB,GAAGb,UAAU,CAACI,MAAvC;AACA,QAAIF,iBAAiB,GAAG,KAAKC,oBAAL,EAAxB;AACA,QAAIE,WAAW,GAAG,KAAK/F,QAAL,CAAc2B,eAAd,CAA8BqE,cAA9B,EAAlB;AACA,WAAOC,IAAI,CAACC,GAAL,CAASI,gBAAT,EAA2B,CAACP,WAAW,CAACI,IAAZ,KAAqBP,iBAAtB,IAA2CW,qBAAtE,CAAP;AACH,GAjBD;;AAkBAxH,EAAAA,UAAU,CAACX,SAAX,CAAqBiD,aAArB,GAAqC,YAAY;AAC7C,QAAIqE,UAAU,GAAG,KAAK1E,KAAL,CAAWwF,uBAAX,CAAmC,KAAKtF,OAAL,CAAaC,MAAhD,CAAjB;AACA,SAAKwC,UAAL,GAAkB7E,SAAS,GACtB2H,MADa,CACNf,UADM,EAEbgB,UAFa,CAEF,CAAC,CAAD,EAAI,KAAK7D,aAAL,EAAJ,CAFE,CAAlB;AAGH,GALD;;AAMA,SAAO9D,UAAP;AACH,CA1O+B,CA0O9BT,GA1O8B,CAAhC;;AA2OA,SAASS,UAAT","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Bar } from './bar';\nimport { Tools } from '../../tools';\nimport { CartesianOrientations, ColorClassNameTypes, Events, Roles, } from '../../interfaces';\n// D3 Imports\nimport { map } from 'd3-collection';\nimport { select } from 'd3-selection';\nimport { scaleBand } from 'd3-scale';\nvar GroupedBar = /** @class */ (function (_super) {\n    __extends(GroupedBar, _super);\n    function GroupedBar() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'grouped-bar';\n        _this.padding = 5;\n        // Highlight elements that match the hovered legend item\n        _this.handleLegendOnHover = function (event) {\n            var hoveredElement = event.detail.hoveredElement;\n            var groupMapsTo = _this.getOptions().data.groupMapsTo;\n            _this.parent\n                .selectAll('path.bar')\n                .transition(_this.services.transitions.getTransition('legend-hover-bar'))\n                .attr('opacity', function (d) {\n                return d[groupMapsTo] !== hoveredElement.datum()['name'] ? 0.3 : 1;\n            });\n        };\n        // Un-highlight all elements\n        _this.handleLegendMouseOut = function (event) {\n            _this.parent\n                .selectAll('path.bar')\n                .transition(_this.services.transitions.getTransition('legend-mouseout-bar'))\n                .attr('opacity', 1);\n        };\n        return _this;\n    }\n    GroupedBar.prototype.init = function () {\n        var eventsFragment = this.services.events;\n        // Highlight correct circle on legend item hovers\n        eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n        // Un-highlight circles on legend item mouseouts\n        eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n    };\n    GroupedBar.prototype.render = function (animate) {\n        var _this = this;\n        // Chart options mixed with the internal configurations\n        var displayData = this.model.getDisplayData(this.configs.groups);\n        var options = this.getOptions();\n        var groupMapsTo = options.data.groupMapsTo;\n        // Get unique labels\n        this.setGroupScale();\n        // Grab container SVG\n        var svg = this.getContainerSVG({ withinChartClip: true });\n        var allDataLabels = map(displayData, function (datum) {\n            var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(datum);\n            return datum[domainIdentifier];\n        }).keys();\n        // Update data on bar groups\n        var barGroups = svg\n            .selectAll('g.bars')\n            .data(allDataLabels, function (label) { return label; });\n        // Remove dot groups that need to be removed\n        barGroups.exit().attr('opacity', 0).remove();\n        // Add the bar groups that need to be introduced\n        var barGroupsEnter = barGroups\n            .enter()\n            .append('g')\n            .classed('bars', true)\n            .attr('role', Roles.GROUP)\n            .attr('data-name', 'bars');\n        // Update data on all bars\n        var allBarGroups = barGroupsEnter.merge(barGroups);\n        allBarGroups\n            // Transition\n            .transition(this.services.transitions.getTransition('bar-group-update-enter', animate))\n            .attr('transform', function (label, i) {\n            var scaleValue = _this.services.cartesianScales.getDomainValue(label, i);\n            var translateBy = scaleValue - _this.getGroupWidth() / 2;\n            // const translateBy = scaleValue - this.getGroupWidth(null) / 2 + this.getBarWidth(null);\n            if (_this.services.cartesianScales.getOrientation() ===\n                CartesianOrientations.VERTICAL) {\n                return \"translate(\" + translateBy + \", 0)\";\n            }\n            else {\n                // translate in the y direction for horizontal groups\n                return \"translate(0, \" + translateBy + \")\";\n            }\n        });\n        var bars = allBarGroups.selectAll('path.bar').data(function (label) { return _this.getDataCorrespondingToLabel(label); }, function (d) { return d[groupMapsTo]; });\n        // Remove bars that are no longer needed\n        bars.exit().attr('opacity', 0).remove();\n        // Add the bars that need to be introduced\n        var barsEnter = bars.enter().append('path').attr('opacity', 0);\n        // code for vertical grouped bar charts\n        barsEnter\n            .merge(bars)\n            .classed('bar', true)\n            .transition(this.services.transitions.getTransition('bar-update-enter', animate))\n            .attr('class', function (d) {\n            return _this.model.getColorClassName({\n                classNameTypes: [ColorClassNameTypes.FILL],\n                dataGroupName: d[groupMapsTo],\n                originalClassName: 'bar',\n            });\n        })\n            .style('fill', function (d) { return _this.model.getFillColor(d[groupMapsTo]); })\n            .attr('d', function (d) {\n            /*\n             * Orientation support for horizontal/vertical bar charts\n             * Determine coordinates needed for a vertical set of paths\n             * to draw the bars needed, and pass those coordinates down to\n             * generateSVGPathString() to decide whether it needs to flip them\n             */\n            var startX = _this.groupScale(d[groupMapsTo]);\n            var barWidth = _this.getBarWidth();\n            var x0 = startX;\n            var x1 = startX + barWidth;\n            var rangeAxis = _this.services.cartesianScales.getRangeAxisPosition({ datum: d });\n            var y0 = _this.services.cartesianScales.getValueThroughAxisPosition(rangeAxis, 0);\n            var y1 = _this.services.cartesianScales.getRangeValue(d);\n            // don't show if part of bar is out of zoom domain\n            if (_this.isOutsideZoomedDomain(x0, x1)) {\n                return;\n            }\n            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, _this.services.cartesianScales.getOrientation());\n        })\n            .attr('opacity', 1)\n            // a11y\n            .attr('role', Roles.GRAPHICS_SYMBOL)\n            .attr('aria-roledescription', 'bar')\n            .attr('aria-label', function (d) { return d.value; });\n        // Add event listeners to elements drawn\n        this.addEventListeners();\n    };\n    GroupedBar.prototype.addEventListeners = function () {\n        var self = this;\n        this.parent\n            .selectAll('path.bar')\n            .on('mouseover', function (datum) {\n            var hoveredElement = select(this);\n            hoveredElement.classed('hovered', true);\n            hoveredElement.transition(self.services.transitions.getTransition('graph_element_mouseover_fill_update'));\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOVER, {\n                element: hoveredElement,\n                datum: datum,\n            });\n            // Show tooltip\n            self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n                hoveredElement: hoveredElement,\n                data: [datum],\n            });\n        })\n            .on('mousemove', function (datum) {\n            var hoveredElement = select(this);\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEMOVE, {\n                element: hoveredElement,\n                datum: datum,\n            });\n            self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n        })\n            .on('click', function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_CLICK, {\n                element: select(this),\n                datum: datum,\n            });\n        })\n            .on('mouseout', function (datum) {\n            var hoveredElement = select(this);\n            hoveredElement.classed('hovered', false);\n            hoveredElement.transition(self.services.transitions.getTransition('graph_element_mouseout_fill_update'));\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOUT, {\n                element: hoveredElement,\n                datum: datum,\n            });\n            // Hide tooltip\n            self.services.events.dispatchEvent(Events.Tooltip.HIDE, {\n                hoveredElement: hoveredElement,\n            });\n        });\n    };\n    GroupedBar.prototype.destroy = function () {\n        // Remove event listeners\n        this.parent\n            .selectAll('path.bar')\n            .on('mouseover', null)\n            .on('mousemove', null)\n            .on('mouseout', null);\n        // Remove legend listeners\n        var eventsFragment = this.services.events;\n        eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n        eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n    };\n    GroupedBar.prototype.getDataCorrespondingToLabel = function (label) {\n        var _this = this;\n        var displayData = this.model.getDisplayData(this.configs.groups);\n        return displayData.filter(function (datum) {\n            var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(datum);\n            return datum[domainIdentifier] === label;\n        });\n    };\n    GroupedBar.prototype.getGroupWidth = function () {\n        var activeData = this.model.getGroupedData(this.configs.groups);\n        var totalGroupPadding = this.getTotalGroupPadding();\n        return this.getBarWidth() * activeData.length + totalGroupPadding;\n    };\n    GroupedBar.prototype.getTotalGroupPadding = function () {\n        var activeData = this.model.getGroupedData(this.configs.groups);\n        if (activeData.length === 1) {\n            return 0;\n        }\n        var domainScale = this.services.cartesianScales.getDomainScale();\n        var padding = Math.min(5, 5 * (domainScale.step() / 70));\n        return padding * (activeData.length - 1);\n    };\n    // Gets the correct width for bars based on options & configurations\n    GroupedBar.prototype.getBarWidth = function () {\n        var options = this.getOptions();\n        var providedWidth = Tools.getProperty(options, 'bars', 'width');\n        var providedMaxWidth = Tools.getProperty(options, 'bars', 'maxWidth');\n        // If there's a provided width, compare with maxWidth and\n        // Determine which to return\n        if (providedWidth !== null) {\n            if (providedMaxWidth === null ||\n                providedWidth <= providedMaxWidth) {\n                return providedWidth;\n            }\n        }\n        var activeData = this.model.getGroupedData(this.configs.groups);\n        var numOfActiveDataGroups = activeData.length;\n        var totalGroupPadding = this.getTotalGroupPadding();\n        var domainScale = this.services.cartesianScales.getDomainScale();\n        return Math.min(providedMaxWidth, (domainScale.step() - totalGroupPadding) / numOfActiveDataGroups);\n    };\n    GroupedBar.prototype.setGroupScale = function () {\n        var activeData = this.model.getActiveDataGroupNames(this.configs.groups);\n        this.groupScale = scaleBand()\n            .domain(activeData)\n            .rangeRound([0, this.getGroupWidth()]);\n    };\n    return GroupedBar;\n}(Bar));\nexport { GroupedBar };\n//# sourceMappingURL=../../../src/components/graphs/bar-grouped.js.map"]},"metadata":{},"sourceType":"module"}