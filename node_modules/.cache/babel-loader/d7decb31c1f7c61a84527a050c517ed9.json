{"ast":null,"code":"import OverviewTable from './OverviewTable';\nimport { connect } from 'react-redux';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(\"ABC STATE\" + state);\n  console.log(\"ABC OWN STATE\" + state);\n  var props = {\n    mostCommon: [],\n    leastCommon: [],\n    frequentlyEscalated: [],\n    notRecognized: []\n  };\n\n  if (state.statsLoaded) {\n    var maxTopicCount = 0;\n    var intentsArr = [];\n    Object.keys(state.stats.intentCounts).forEach(function (key) {\n      maxTopicCount = Math.max(state.stats.intentCounts[key], maxTopicCount);\n      intentsArr.push({\n        \"label\": key,\n        \"count\": state.stats.intentCounts[key]\n      });\n    });\n    props[\"maxTopicCount\"] = maxTopicCount;\n    intentsArr.sort(function (a, b) {\n      return parseFloat(b.count) - parseFloat(a.count);\n    });\n    var mostCommon = intentsArr.slice(0, 10);\n    intentsArr.sort(function (a, b) {\n      return parseFloat(a.count) - parseFloat(b.count);\n    });\n    var leastCommon = intentsArr.slice(0, 10);\n    props.mostCommon = mostCommon;\n    props.leastCommon = leastCommon;\n    props.frequentlyEscalated = [];\n    props.notRecognized = [{\n      label: \"I need to pay my bill\"\n    }, {\n      label: \"Where can I get my account information?\"\n    }, {\n      label: \"I need to transfer money to my family in Russia.\"\n    }, {\n      label: \"I was charged $7000 by my energy company\"\n    }, {\n      label: \"Wow so cool haha\"\n    }, {\n      label: \"Can I defer a payment I have to pay.\"\n    }, {\n      label: \"Can you please tell me a joke?\"\n    }];\n  }\n};\n\nexport default connect(mapStateToProps)(OverviewTable);","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/components/OverviewTable/index.js"],"names":["OverviewTable","connect","mapStateToProps","state","console","log","props","mostCommon","leastCommon","frequentlyEscalated","notRecognized","statsLoaded","maxTopicCount","intentsArr","Object","keys","stats","intentCounts","forEach","key","Math","max","push","sort","a","b","parseFloat","count","slice","label"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAcF,KAA1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBF,KAA9B;AAEA,MAAIG,KAAK,GAAG;AACRC,IAAAA,UAAU,EAAE,EADJ;AAERC,IAAAA,WAAW,EAAE,EAFL;AAGRC,IAAAA,mBAAmB,EAAE,EAHb;AAIRC,IAAAA,aAAa,EAAE;AAJP,GAAZ;;AAOA,MAAIP,KAAK,CAACQ,WAAV,EAAuB;AACnB,QAAIC,aAAa,GAAG,CAApB;AACA,QAAIC,UAAU,GAAG,EAAjB;AAEAC,IAAAA,MAAM,CAACC,IAAP,CAAYZ,KAAK,CAACa,KAAN,CAAYC,YAAxB,EAAsCC,OAAtC,CAA8C,UAAAC,GAAG,EAAI;AACjDP,MAAAA,aAAa,GAAGQ,IAAI,CAACC,GAAL,CAASlB,KAAK,CAACa,KAAN,CAAYC,YAAZ,CAAyBE,GAAzB,CAAT,EAAwCP,aAAxC,CAAhB;AACAC,MAAAA,UAAU,CAACS,IAAX,CAAgB;AAAE,iBAASH,GAAX;AAAgB,iBAAShB,KAAK,CAACa,KAAN,CAAYC,YAAZ,CAAyBE,GAAzB;AAAzB,OAAhB;AACH,KAHD;AAKAb,IAAAA,KAAK,CAAC,eAAD,CAAL,GAAyBM,aAAzB;AAEAC,IAAAA,UAAU,CAACU,IAAX,CAAgB,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUC,UAAU,CAACD,CAAC,CAACE,KAAH,CAAV,GAAsBD,UAAU,CAACF,CAAC,CAACG,KAAH,CAA1C;AAAA,KAAhB;AACA,QAAIpB,UAAU,GAAGM,UAAU,CAACe,KAAX,CAAiB,CAAjB,EAAoB,EAApB,CAAjB;AAEAf,IAAAA,UAAU,CAACU,IAAX,CAAgB,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUC,UAAU,CAACF,CAAC,CAACG,KAAH,CAAV,GAAsBD,UAAU,CAACD,CAAC,CAACE,KAAH,CAA1C;AAAA,KAAhB;AACA,QAAInB,WAAW,GAAGK,UAAU,CAACe,KAAX,CAAiB,CAAjB,EAAoB,EAApB,CAAlB;AAEAtB,IAAAA,KAAK,CAACC,UAAN,GAAmBA,UAAnB;AACAD,IAAAA,KAAK,CAACE,WAAN,GAAoBA,WAApB;AACAF,IAAAA,KAAK,CAACG,mBAAN,GAA4B,EAA5B;AACAH,IAAAA,KAAK,CAACI,aAAN,GAAsB,CAClB;AAACmB,MAAAA,KAAK,EAAE;AAAR,KADkB,EAElB;AAACA,MAAAA,KAAK,EAAE;AAAR,KAFkB,EAGlB;AAACA,MAAAA,KAAK,EAAE;AAAR,KAHkB,EAIlB;AAACA,MAAAA,KAAK,EAAE;AAAR,KAJkB,EAKlB;AAACA,MAAAA,KAAK,EAAE;AAAR,KALkB,EAMlB;AAACA,MAAAA,KAAK,EAAE;AAAR,KANkB,EAOlB;AAACA,MAAAA,KAAK,EAAE;AAAR,KAPkB,CAAtB;AASH;AACJ,CAzCD;;AA2CA,eAAe5B,OAAO,CAACC,eAAD,CAAP,CAAyBF,aAAzB,CAAf","sourcesContent":["import OverviewTable from './OverviewTable';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n    console.log(\"ABC STATE\" + state)\n    console.log(\"ABC OWN STATE\" + state)\n\n    let props = {\n        mostCommon: [],\n        leastCommon: [],\n        frequentlyEscalated: [],\n        notRecognized: []\n    }\n\n    if (state.statsLoaded) {\n        let maxTopicCount = 0\n        var intentsArr = []\n\n        Object.keys(state.stats.intentCounts).forEach(key => {\n            maxTopicCount = Math.max(state.stats.intentCounts[key], maxTopicCount)\n            intentsArr.push({ \"label\": key, \"count\": state.stats.intentCounts[key] })\n        })\n\n        props[\"maxTopicCount\"] = maxTopicCount\n\n        intentsArr.sort((a, b) => parseFloat(b.count) - parseFloat(a.count));\n        let mostCommon = intentsArr.slice(0, 10)\n\n        intentsArr.sort((a, b) => parseFloat(a.count) - parseFloat(b.count));\n        let leastCommon = intentsArr.slice(0, 10)\n\n        props.mostCommon = mostCommon\n        props.leastCommon = leastCommon\n        props.frequentlyEscalated = []\n        props.notRecognized = [\n            {label: \"I need to pay my bill\" },\n            {label: \"Where can I get my account information?\" },\n            {label: \"I need to transfer money to my family in Russia.\" },\n            {label: \"I was charged $7000 by my energy company\"},\n            {label: \"Wow so cool haha\"},\n            {label: \"Can I defer a payment I have to pay.\"},\n            {label: \"Can you please tell me a joke?\"}\n        ]\n    }\n}\n\nexport default connect(mapStateToProps)(OverviewTable)"]},"metadata":{},"sourceType":"module"}