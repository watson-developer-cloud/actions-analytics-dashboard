{"ast":null,"code":"import OverviewPage from './OverviewPage';\nimport { connect } from 'react-redux';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(\"STATE: \" + JSON.stringify(state));\n  var props = {\n    statsLoaded: state.statsLoaded,\n    uniqueUsers: state.stats.uniqueUsers,\n    uniqueSessions: state.stats.uniqueSessions,\n    requestCount: state.stats.requestCount,\n    recognized: state.stats.recognized,\n    notRecognized: state.stats[\"not-recognized\"],\n    recognizedPercent: Math.round(100 * (state.stats.recognized / (state.stats.recognized + state.stats[\"not-recognized\"])))\n  };\n  var maxTopicCount = 0;\n  var intentsArr = [];\n\n  if (state.statsLoaded) {\n    Object.keys(state.stats.intentCounts).forEach(function (key) {\n      maxTopicCount = Math.max(state.stats.intentCounts[key], maxTopicCount);\n      intentsArr.push({\n        \"label\": key,\n        \"count\": state.stats.intentCounts[key]\n      });\n    });\n    props[\"maxTopicCount\"] = maxTopicCount;\n    intentsArr.sort(function (a, b) {\n      return parseFloat(b.count) - parseFloat(a.count);\n    });\n    var mostCommon = intentsArr.slice(0, 10);\n    intentsArr.sort(function (a, b) {\n      return parseFloat(a.count) - parseFloat(b.count);\n    });\n    var leastCommon = intentsArr.slice(0, 10);\n    props[\"mostCommonData\"] = mostCommon;\n    props[\"leastCommonData\"] = leastCommon;\n    props[\"frequentlyEscalatedData\"] = [];\n    props[\"notRecognizedData\"] = [{\n      label: \"I need to pay my bill\"\n    }, {\n      label: \"Where can I get my account information?\"\n    }, {\n      label: \"I need to transfer money to my family in Russia.\"\n    }, {\n      label: \"I was charged $7000 by my energy company\"\n    }, {\n      label: \"Wow so cool haha\"\n    }, {\n      label: \"Can I defer a payment I have to pay.\"\n    }, {\n      label: \"Can you please tell me a joke?\"\n    }];\n  } else {\n    props[\"maxTopicCount\"] = 0;\n    props[\"mostCommonData\"] = [];\n    props[\"leastCommonData\"] = [];\n    props[\"frequentlyEscalatedData\"] = [];\n    props[\"notRecognizedData\"] = [];\n  }\n\n  console.log(\"PROPS: \" + JSON.stringify(props));\n  return props;\n};\n\nexport default connect(mapStateToProps)(OverviewPage);","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/content/OverviewPage/index.js"],"names":["OverviewPage","connect","mapStateToProps","state","console","log","JSON","stringify","props","statsLoaded","uniqueUsers","stats","uniqueSessions","requestCount","recognized","notRecognized","recognizedPercent","Math","round","maxTopicCount","intentsArr","Object","keys","intentCounts","forEach","key","max","push","sort","a","b","parseFloat","count","mostCommon","slice","leastCommon","label"],"mappings":"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","sourcesContent":["import OverviewPage from './OverviewPage';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n    console.log(\"STATE: \" + JSON.stringify(state))\n\n    let props = {\n        statsLoaded: state.statsLoaded,\n        uniqueUsers: state.stats.uniqueUsers,\n        uniqueSessions: state.stats.uniqueSessions,\n        requestCount: state.stats.requestCount,\n        recognized: state.stats.recognized,\n        notRecognized: state.stats[\"not-recognized\"],\n        recognizedPercent: Math.round(100 * (state.stats.recognized / (state.stats.recognized + state.stats[\"not-recognized\"])))\n    };\n\n    var maxTopicCount = 0\n    var intentsArr = []\n\n    if (state.statsLoaded) {\n        Object.keys(state.stats.intentCounts).forEach(key => {\n            maxTopicCount = Math.max(state.stats.intentCounts[key], maxTopicCount)\n            intentsArr.push({ \"label\": key, \"count\": state.stats.intentCounts[key] })\n        })\n\n        props[\"maxTopicCount\"] = maxTopicCount\n\n        intentsArr.sort((a, b) => parseFloat(b.count) - parseFloat(a.count));\n        let mostCommon = intentsArr.slice(0, 10)\n\n        intentsArr.sort((a, b) => parseFloat(a.count) - parseFloat(b.count));\n        let leastCommon = intentsArr.slice(0, 10)\n\n        props[\"mostCommonData\"] = mostCommon\n        props[\"leastCommonData\"] = leastCommon\n        props[\"frequentlyEscalatedData\"] = []\n        props[\"notRecognizedData\"] = [\n            {label: \"I need to pay my bill\" },\n            {label: \"Where can I get my account information?\" },\n            {label: \"I need to transfer money to my family in Russia.\" },\n            {label: \"I was charged $7000 by my energy company\"},\n            {label: \"Wow so cool haha\"},\n            {label: \"Can I defer a payment I have to pay.\"},\n            {label: \"Can you please tell me a joke?\"}\n        ]\n    } else {\n        props[\"maxTopicCount\"] = 0\n        props[\"mostCommonData\"] = []\n        props[\"leastCommonData\"] = []\n        props[\"frequentlyEscalatedData\"] = []\n        props[\"notRecognizedData\"] = []\n    }\n\n    console.log(\"PROPS: \" + JSON.stringify(props))\n\n    return props\n}\n\nexport default connect(mapStateToProps)(OverviewPage)"]},"metadata":{},"sourceType":"module"}