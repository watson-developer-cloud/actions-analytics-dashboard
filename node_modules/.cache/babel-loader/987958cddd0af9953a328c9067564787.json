{"ast":null,"code":"import _classCallCheck from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/components/Graph/Graph.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { LineChart } from \"@carbon/charts-react\";\nimport { Checkbox } from \"carbon-components-react\";\nimport './graph.scss';\nimport \"@carbon/charts/styles.css\";\nimport moment from 'moment';\nimport config from '../../config';\n\nvar Graph = /*#__PURE__*/function (_React$Component) {\n  _inherits(Graph, _React$Component);\n\n  var _super = _createSuper(Graph);\n\n  function Graph(props) {\n    _classCallCheck(this, Graph);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Graph, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"graph-panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"panel-title\",\n        style: {\n          marginBottom: \"16px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }\n      }, this.props.type + \" over time\", \" \"), this.props.type == \"Engagement\" && /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: \"bx--fieldset\",\n        align: \"horizontal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 54\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        className: \"activeUsersCB\",\n        labelText: \"Show active users\",\n        checked: this.props.showActiveUsers,\n        id: \"activeUsersCB\",\n        onChange: function onChange(checked) {\n          _this.props.dispatch({\n            type: config.UPDATE,\n            update: {\n              engagement_showActiveUsers: checked\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Checkbox, {\n        labelText: \"Show conversations\",\n        checked: this.props.showConversations,\n        id: \"conversationsCB\",\n        onChange: function onChange(checked) {\n          _this.props.dispatch({\n            type: config.UPDATE,\n            update: {\n              engagement_showConversations: checked\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Checkbox, {\n        labelText: \"Show requests\",\n        checked: this.props.showRequests,\n        id: \"requestsCB\",\n        onChange: function onChange(checked) {\n          _this.props.dispatch({\n            type: config.UPDATE,\n            update: {\n              engagement_showRequests: checked\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chartWrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(LineChart, {\n        data: this.props.data,\n        options: this.props.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return Graph;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownState) {\n  var props = {\n    type: ownState.type,\n    showActiveUsers: state.engagement_showActiveUsers,\n    showConversations: state.engagement_showConversations,\n    showRequests: state.engagement_showRequests,\n    data: [],\n    options: {\n      axes: {\n        bottom: {\n          title: \"Date\",\n          mapsTo: \"date\",\n          scaleType: \"time\"\n        },\n        left: {\n          mapsTo: \"value\",\n          title: \"Loading\",\n          scaleType: \"linear\"\n        }\n      },\n      data: {\n        loading: true\n      },\n      legend: {\n        enabled: false\n      },\n      height: \"400px\",\n      color: {\n        scale: {\n          \"Requests\": \"#9C74F7\",\n          \"Active Users\": \"#38807E\",\n          \"Conversations\": \"#DA5E93\"\n        }\n      }\n    }\n  };\n\n  if (state.statsLoaded) {\n    var leftAxis = props.type == \"Engagment\" ? {\n      title: \"volume\",\n      mapsTo: \"value\",\n      scaleType: \"linear\"\n    } : {\n      title: props.type,\n      mapsTo: \"value\",\n      scaleType: \"linear\"\n    };\n    props.options = {\n      axes: {\n        left: leftAxis\n      },\n      data: {\n        loading: false\n      }\n    };\n\n    switch (props.type) {\n      case \"Engagement\":\n        props.data = loadEngagementData(state);\n    }\n  }\n\n  return props;\n};\n\nvar loadEngagementData = function loadEngagementData(state) {\n  var data = [];\n\n  if (state.engagement_showActiveUsers) {\n    for (var i = 0; i < Object.keys(state.uniqueUsers).length; i++) {\n      var date = Object.keys(state.uniqueUsers)[i];\n      data.push({\n        date: moment(date, \"L\").toISOString(),\n        value: state.uniqueUsers[date].count,\n        group: \"Active Users\"\n      });\n    }\n  }\n\n  if (state.engagement_showConversations) {\n    for (var _i = 0; _i < Object.keys(state.uniqueSessions).length; _i++) {\n      var _date = Object.keys(state.uniqueSessions)[_i];\n\n      data.push({\n        date: moment(_date, \"L\").toISOString(),\n        value: state.uniqueSessions[_date],\n        group: \"Conversations\"\n      });\n    }\n  }\n\n  if (state.engagement_showRequests) {\n    for (var _i2 = 0; _i2 < Object.keys(state.requestCounts).length; _i2++) {\n      var _date2 = Object.keys(state.requestCounts)[_i2];\n\n      data.push({\n        date: moment(_date2, \"L\").toISOString(),\n        value: state.requestCounts[_date2],\n        group: \"Requests\"\n      });\n    }\n  }\n\n  console.log(\"LOADED ENGAGEMENT DATA: \" + JSON.stringify(data));\n  return data;\n};\n\nexport default connect(mapStateToProps)(Graph);","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/src/components/Graph/Graph.js"],"names":["React","connect","LineChart","Checkbox","moment","config","Graph","props","marginBottom","type","showActiveUsers","checked","dispatch","UPDATE","update","engagement_showActiveUsers","showConversations","engagement_showConversations","showRequests","engagement_showRequests","data","options","Component","mapStateToProps","state","ownState","axes","bottom","title","mapsTo","scaleType","left","loading","legend","enabled","height","color","scale","statsLoaded","leftAxis","loadEngagementData","i","Object","keys","uniqueUsers","length","date","push","toISOString","value","count","group","uniqueSessions","requestCounts","console","log","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { LineChart } from \"@carbon/charts-react\";\nimport { Checkbox } from \"carbon-components-react\"\nimport './graph.scss';\nimport \"@carbon/charts/styles.css\";\nimport moment from 'moment';\nimport config from '../../config';\n\nclass Graph extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render () {\n      return <div className=\"graph-panel\">\n                <p className=\"panel-title\" style={{ marginBottom: \"16px\" }}>{ this.props.type + \" over time\" } </p>\n                { this.props.type == \"Engagement\" && <fieldset className=\"bx--fieldset\" align=\"horizontal\">\n                <Checkbox className=\"activeUsersCB\" labelText=\"Show active users\" checked={ this.props.showActiveUsers } id=\"activeUsersCB\"\n                     onChange={ (checked) => { this.props.dispatch({type: config.UPDATE, update: {engagement_showActiveUsers: checked}}) } } />\n                <Checkbox labelText=\"Show conversations\" checked={ this.props.showConversations } id=\"conversationsCB\"\n                    onChange={ (checked) => { this.props.dispatch({type: config.UPDATE, update: {engagement_showConversations: checked}}) } } />\n                <Checkbox labelText=\"Show requests\" checked={ this.props.showRequests } id=\"requestsCB\"\n                    onChange={ (checked) => { this.props.dispatch({type: config.UPDATE, update: {engagement_showRequests: checked}}) } } />\n                </fieldset> }\n                <div className=\"chartWrapper\">\n                    <LineChart\n                        data={this.props.data}\n                        options={this.props.options}>\n                    </LineChart>\n                </div>\n            </div>\n\n    }\n}\n\nconst mapStateToProps = (state, ownState) => {\n  let props = {\n      type: ownState.type,\n      showActiveUsers: state.engagement_showActiveUsers,\n      showConversations: state.engagement_showConversations,\n      showRequests: state.engagement_showRequests,\n      data: [],\n      options: {\n        axes: {\n            bottom: {\n              title: \"Date\",\n              mapsTo: \"date\",\n              scaleType: \"time\"\n            },\n            left: {\n              mapsTo: \"value\",\n              title: \"Loading\",\n              scaleType: \"linear\"\n            }\n          },\n        data: {\n            loading: true,\n        },\n        legend: { enabled: false },\n        height: \"400px\",\n        color: { scale: { \"Requests\": \"#9C74F7\", \"Active Users\": \"#38807E\", \"Conversations\": \"#DA5E93\" } }\n      }\n  }\n\n  if (state.statsLoaded) {\n      let leftAxis = props.type == \"Engagment\" ?\n            {\n                title: \"volume\",\n                mapsTo: \"value\",\n                scaleType: \"linear\"\n            } :\n            {\n                title: props.type,\n                mapsTo: \"value\",\n                scaleType: \"linear\"\n            }\n\n      props.options = {\n        axes: {\n            left: leftAxis\n        },\n        data: {\n            loading: false,\n        },\n    }\n\n    switch(props.type) {\n        case \"Engagement\":\n            props.data = loadEngagementData(state)\n    }\n\n  }\n\n  return props\n}\n\nconst loadEngagementData = (state) => {\n    let data = []\n\n    if (state.engagement_showActiveUsers) {\n        for(let i = 0; i < Object.keys(state.uniqueUsers).length; i++) {\n            let date = Object.keys(state.uniqueUsers)[i]\n            \n            data.push({\n                date: moment(date, \"L\").toISOString(),\n                value: state.uniqueUsers[date].count,\n                group: \"Active Users\"\n            })\n        }\n    }\n\n    if (state.engagement_showConversations) {\n        for(let i = 0; i < Object.keys(state.uniqueSessions).length; i++) {\n            let date = Object.keys(state.uniqueSessions)[i]\n            \n            data.push({\n                date: moment(date, \"L\").toISOString(),\n                value: state.uniqueSessions[date],\n                group: \"Conversations\"\n            })\n        }\n    }\n\n    if (state.engagement_showRequests) {\n        for(let i = 0; i < Object.keys(state.requestCounts).length; i++) {\n            let date = Object.keys(state.requestCounts)[i]\n            \n            data.push({\n                date: moment(date, \"L\").toISOString(),\n                value: state.requestCounts[date],\n                group: \"Requests\"\n            })\n        }\n    }\n\n    console.log(\"LOADED ENGAGEMENT DATA: \" + JSON.stringify(data))\n    return data\n}\n\nexport default connect(mapStateToProps)(Graph)"]},"metadata":{},"sourceType":"module"}