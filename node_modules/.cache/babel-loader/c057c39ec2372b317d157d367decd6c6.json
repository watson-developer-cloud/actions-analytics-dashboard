{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n}; // Internal Imports\n\n\nimport * as Configuration from '../configuration';\nimport { Service } from './service';\nimport { AxisPositions, CartesianOrientations, ScaleTypes } from '../interfaces';\nimport { Tools } from '../tools'; // D3 Imports\n\nimport { scaleBand, scaleLinear, scaleTime, scaleLog } from 'd3-scale';\nimport { extent, sum } from 'd3-array';\nimport { map, values } from 'd3-collection'; // Misc\n\nimport { differenceInYears, addYears, subYears, differenceInMonths, addMonths, subMonths, differenceInDays, addDays, subDays, differenceInHours, addHours, subHours, differenceInMinutes, addMinutes, subMinutes, differenceInSeconds, subSeconds, addSeconds } from 'date-fns';\n\nvar CartesianScales =\n/** @class */\nfunction (_super) {\n  __extends(CartesianScales, _super);\n\n  function CartesianScales() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.scaleTypes = {\n      top: null,\n      right: null,\n      bottom: null,\n      left: null\n    };\n    _this.scales = {\n      top: null,\n      right: null,\n      bottom: null,\n      left: null\n    };\n    return _this;\n  }\n\n  CartesianScales.prototype.getDomainAxisPosition = function (_a) {\n    var _b = (_a === void 0 ? {} : _a).datum,\n        datum = _b === void 0 ? null : _b;\n\n    var _c;\n\n    if (this.dualAxes && datum) {\n      var options = this.model.getOptions();\n      var groupMapsTo = options.data.groupMapsTo;\n      var axesOptions = Tools.getProperty(options, 'axes', this.secondaryDomainAxisPosition);\n      var dataset = datum[groupMapsTo];\n\n      if (((_c = axesOptions) === null || _c === void 0 ? void 0 : _c.correspondingDatasets) && axesOptions.correspondingDatasets.includes(dataset)) {\n        return this.secondaryDomainAxisPosition;\n      }\n    }\n\n    return this.domainAxisPosition;\n  };\n\n  CartesianScales.prototype.getRangeAxisPosition = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.datum,\n        datum = _c === void 0 ? null : _c,\n        _d = _b.groups,\n        groups = _d === void 0 ? null : _d;\n\n    var _e;\n\n    if (this.dualAxes) {\n      var options = this.model.getOptions();\n      var groupMapsTo = options.data.groupMapsTo;\n      var axisOptions = Tools.getProperty(options, 'axes', this.secondaryRangeAxisPosition);\n      var dataset = void 0;\n\n      if (datum !== null) {\n        dataset = datum[groupMapsTo];\n      } else if (groups && groups.length > 0) {\n        dataset = groups[0];\n      }\n\n      if (((_e = axisOptions) === null || _e === void 0 ? void 0 : _e.correspondingDatasets) && axisOptions.correspondingDatasets.includes(dataset)) {\n        return this.secondaryRangeAxisPosition;\n      }\n    }\n\n    return this.rangeAxisPosition;\n  };\n\n  CartesianScales.prototype.getAxisOptions = function (position) {\n    return Tools.getProperty(this.model.getOptions(), 'axes', position);\n  };\n\n  CartesianScales.prototype.getDomainAxisOptions = function () {\n    var domainAxisPosition = this.getDomainAxisPosition();\n    return this.getAxisOptions(domainAxisPosition);\n  };\n\n  CartesianScales.prototype.getRangeAxisOptions = function () {\n    var rangeAxisPosition = this.getRangeAxisPosition();\n    return this.getAxisOptions(rangeAxisPosition);\n  };\n\n  CartesianScales.prototype.update = function (animate) {\n    var _this = this;\n\n    if (animate === void 0) {\n      animate = true;\n    }\n\n    this.determineAxisDuality();\n    this.findDomainAndRangeAxes();\n    this.determineOrientation();\n    var axisPositions = Object.keys(AxisPositions).map(function (axisPositionKey) {\n      return AxisPositions[axisPositionKey];\n    });\n    axisPositions.forEach(function (axisPosition) {\n      _this.scales[axisPosition] = _this.createScale(axisPosition);\n    });\n  };\n\n  CartesianScales.prototype.findDomainAndRangeAxes = function () {\n    // find main axes between (left & right) && (bottom & top)\n    var verticalAxesPositions = this.findVerticalAxesPositions();\n    var horizontalAxesPositions = this.findHorizontalAxesPositions(); // Now we have horizontal & vertical main axes to choose domain & range axes from\n\n    var domainAndRangeAxesPositions = this.findDomainAndRangeAxesPositions(verticalAxesPositions, horizontalAxesPositions);\n    this.domainAxisPosition = domainAndRangeAxesPositions.primaryDomainAxisPosition;\n    this.rangeAxisPosition = domainAndRangeAxesPositions.primaryRangeAxisPosition;\n\n    if (this.isDualAxes()) {\n      this.secondaryDomainAxisPosition = domainAndRangeAxesPositions.secondaryDomainAxisPosition;\n      this.secondaryRangeAxisPosition = domainAndRangeAxesPositions.secondaryRangeAxisPosition;\n    }\n  };\n\n  CartesianScales.prototype.determineOrientation = function () {\n    if ((this.rangeAxisPosition === AxisPositions.LEFT || this.rangeAxisPosition === AxisPositions.RIGHT) && (this.domainAxisPosition === AxisPositions.BOTTOM || this.domainAxisPosition === AxisPositions.TOP)) {\n      this.orientation = CartesianOrientations.VERTICAL;\n    } else {\n      this.orientation = CartesianOrientations.HORIZONTAL;\n    }\n  };\n\n  CartesianScales.prototype.isDualAxes = function () {\n    return this.dualAxes;\n  }; // if any of the axes objects have correspondingDatasets [] asserted we flag the chart as dual axes\n  // it does not count as dual axes if it just has another axis turned on but is not actually using it to map a dataset\n\n\n  CartesianScales.prototype.determineAxisDuality = function () {\n    var _a, _b, _c, _d;\n\n    var options = this.model.getOptions();\n    var axesOptions = Tools.getProperty(options, 'axes');\n\n    if (((_a = axesOptions[AxisPositions.LEFT]) === null || _a === void 0 ? void 0 : _a.correspondingDatasets) && axesOptions[AxisPositions.RIGHT] || ((_b = axesOptions[AxisPositions.RIGHT]) === null || _b === void 0 ? void 0 : _b.correspondingDatasets) && axesOptions[AxisPositions.LEFT] || ((_c = axesOptions[AxisPositions.TOP]) === null || _c === void 0 ? void 0 : _c.correspondingDatasets) && axesOptions[AxisPositions.BOTTOM] || ((_d = axesOptions[AxisPositions.BOTTOM]) === null || _d === void 0 ? void 0 : _d.correspondingDatasets) && axesOptions[AxisPositions.TOP]) {\n      this.dualAxes = true;\n    }\n  };\n\n  CartesianScales.prototype.getOrientation = function () {\n    return this.orientation;\n  };\n\n  CartesianScales.prototype.getScaleByPosition = function (axisPosition) {\n    return this.scales[axisPosition];\n  };\n\n  CartesianScales.prototype.getScaleTypeByPosition = function (axisPosition) {\n    return this.scaleTypes[axisPosition];\n  };\n\n  CartesianScales.prototype.getDomainAxisScaleType = function () {\n    var domainAxisPosition = this.getDomainAxisPosition();\n    return this.getScaleTypeByPosition(domainAxisPosition);\n  };\n\n  CartesianScales.prototype.getRangeAxisScaleType = function () {\n    var rangeAxisPosition = this.getRangeAxisPosition();\n    return this.getScaleTypeByPosition(rangeAxisPosition);\n  };\n\n  CartesianScales.prototype.getDomainScale = function () {\n    return this.scales[this.domainAxisPosition];\n  };\n\n  CartesianScales.prototype.getRangeScale = function () {\n    return this.scales[this.rangeAxisPosition];\n  }; // Find the main x-axis out of the 2 x-axis on the chart (when 2D axis is used)\n\n\n  CartesianScales.prototype.getMainXAxisPosition = function () {\n    var possibleXAxisPositions = [AxisPositions.BOTTOM, AxisPositions.TOP];\n    return [this.domainAxisPosition, this.rangeAxisPosition].find(function (position) {\n      return possibleXAxisPositions.indexOf(position) > -1;\n    });\n  }; // Find the main y-axis out of the 2 y-axis on the chart (when 2D axis is used)\n\n\n  CartesianScales.prototype.getMainYAxisPosition = function () {\n    var possibleYAxisPositions = [AxisPositions.LEFT, AxisPositions.RIGHT];\n    return [this.domainAxisPosition, this.rangeAxisPosition].find(function (position) {\n      return possibleYAxisPositions.indexOf(position) > -1;\n    });\n  };\n\n  CartesianScales.prototype.getMainXScale = function () {\n    return this.scales[this.getMainXAxisPosition()];\n  };\n\n  CartesianScales.prototype.getMainYScale = function () {\n    return this.scales[this.getMainYAxisPosition()];\n  };\n\n  CartesianScales.prototype.getValueFromScale = function (scale, scaleType, axisPosition, datum, index) {\n    var options = this.model.getOptions();\n    var axesOptions = Tools.getProperty(options, 'axes');\n    var axisOptions = axesOptions[axisPosition];\n    var mapsTo = axisOptions.mapsTo;\n    var value = Tools.getProperty(datum, mapsTo) !== null ? datum[mapsTo] : datum;\n    var scaledValue;\n\n    switch (scaleType) {\n      case ScaleTypes.LABELS:\n        scaledValue = scale(value) + scale.step() / 2;\n        break;\n\n      case ScaleTypes.TIME:\n        scaledValue = scale(new Date(value));\n        break;\n\n      default:\n        scaledValue = scale(value);\n    }\n\n    return scaledValue;\n  };\n\n  CartesianScales.prototype.getBoundedScaledValues = function (datum, index) {\n    var bounds = this.model.getOptions().bounds;\n    var scale = this.scales[this.rangeAxisPosition];\n    var options = this.model.getOptions();\n    var axesOptions = Tools.getProperty(options, 'axes');\n    var axisOptions = axesOptions[this.rangeAxisPosition];\n    var mapsTo = axisOptions.mapsTo;\n    var value = datum[mapsTo] !== undefined ? datum[mapsTo] : datum;\n    var boundedValues = [scale(Tools.getProperty(datum, bounds.upperBoundMapsTo) !== null ? datum[bounds.upperBoundMapsTo] : value), scale(Tools.getProperty(datum, bounds.lowerBoundMapsTo) !== null ? datum[bounds.lowerBoundMapsTo] : value)];\n    return boundedValues;\n  };\n\n  CartesianScales.prototype.getValueThroughAxisPosition = function (axisPosition, datum, index) {\n    var scaleType = this.scaleTypes[axisPosition];\n    var scale = this.scales[axisPosition];\n    return this.getValueFromScale(scale, scaleType, axisPosition, datum, index);\n  };\n\n  CartesianScales.prototype.getDomainValue = function (d, i) {\n    var axisPosition = this.getDomainAxisPosition({\n      datum: d\n    });\n    return this.getValueThroughAxisPosition(axisPosition, d, i);\n  };\n\n  CartesianScales.prototype.getRangeValue = function (d, i) {\n    var axisPosition = this.getRangeAxisPosition({\n      datum: d\n    });\n    return this.getValueThroughAxisPosition(axisPosition, d, i);\n  };\n\n  CartesianScales.prototype.getMainXScaleType = function () {\n    return this.getScaleTypeByPosition(this.getMainXAxisPosition());\n  };\n\n  CartesianScales.prototype.getMainYScaleType = function () {\n    return this.getScaleTypeByPosition(this.getMainYAxisPosition());\n  };\n\n  CartesianScales.prototype.getDomainIdentifier = function (datum) {\n    var options = this.model.getOptions();\n    return Tools.getProperty(options, 'axes', this.getDomainAxisPosition({\n      datum: datum\n    }), 'mapsTo');\n  };\n\n  CartesianScales.prototype.getRangeIdentifier = function (datum) {\n    var options = this.model.getOptions();\n    return Tools.getProperty(options, 'axes', this.getRangeAxisPosition({\n      datum: datum\n    }), 'mapsTo');\n  };\n\n  CartesianScales.prototype.extendsDomain = function (axisPosition, domain) {\n    var options = this.model.getOptions();\n    var axisOptions = Tools.getProperty(options, 'axes', axisPosition);\n\n    if (axisOptions.scaleType === ScaleTypes.TIME) {\n      var spaceToAddToEdges = Tools.getProperty(options, 'timeScale', 'addSpaceOnEdges');\n      return addSpacingToTimeDomain(domain, spaceToAddToEdges);\n    } else {\n      return addSpacingToContinuousDomain(domain, Configuration.axis.paddingRatio);\n    }\n  };\n\n  CartesianScales.prototype.findVerticalAxesPositions = function () {\n    var options = this.model.getOptions();\n    var axesOptions = Tools.getProperty(options, 'axes');\n    var dualAxes = this.isDualAxes(); // If right axis has been specified as `main`\n\n    if (Tools.getProperty(axesOptions, AxisPositions.LEFT) === null && Tools.getProperty(axesOptions, AxisPositions.RIGHT) !== null || Tools.getProperty(axesOptions, AxisPositions.RIGHT, 'main') === true || dualAxes && Tools.getProperty(axesOptions, AxisPositions.LEFT, 'correspondingDatasets')) {\n      return {\n        primary: AxisPositions.RIGHT,\n        secondary: AxisPositions.LEFT\n      };\n    }\n\n    return {\n      primary: AxisPositions.LEFT,\n      secondary: AxisPositions.RIGHT\n    };\n  };\n\n  CartesianScales.prototype.findHorizontalAxesPositions = function () {\n    var options = this.model.getOptions();\n    var axesOptions = Tools.getProperty(options, 'axes');\n    var dualAxes = this.isDualAxes(); // If top axis has been specified as `main`\n\n    if (Tools.getProperty(axesOptions, AxisPositions.BOTTOM) === null && Tools.getProperty(axesOptions, AxisPositions.TOP) !== null || Tools.getProperty(axesOptions, AxisPositions.TOP, 'main') === true || dualAxes && Tools.getProperty(axesOptions, AxisPositions.BOTTOM, 'correspondingDatasets')) {\n      return {\n        primary: AxisPositions.TOP,\n        secondary: AxisPositions.BOTTOM\n      };\n    }\n\n    return {\n      primary: AxisPositions.BOTTOM,\n      secondary: AxisPositions.TOP\n    };\n  };\n\n  CartesianScales.prototype.findDomainAndRangeAxesPositions = function (verticalAxesPositions, horizontalAxesPositions) {\n    var options = this.model.getOptions();\n    var mainVerticalAxisOptions = Tools.getProperty(options, 'axes', verticalAxesPositions.primary);\n    var mainHorizontalAxisOptions = Tools.getProperty(options, 'axes', horizontalAxesPositions.primary);\n    var mainVerticalScaleType = mainVerticalAxisOptions.scaleType || ScaleTypes.LINEAR;\n    var mainHorizontalScaleType = mainHorizontalAxisOptions.scaleType || ScaleTypes.LINEAR;\n    var result = {\n      primaryDomainAxisPosition: null,\n      secondaryDomainAxisPosition: null,\n      primaryRangeAxisPosition: null,\n      secondaryRangeAxisPosition: null\n    }; // assign to to be a vertical chart by default\n\n    result.primaryDomainAxisPosition = horizontalAxesPositions.primary;\n    result.primaryRangeAxisPosition = verticalAxesPositions.primary; // secondary axes\n\n    result.secondaryDomainAxisPosition = horizontalAxesPositions.secondary;\n    result.secondaryRangeAxisPosition = verticalAxesPositions.secondary; // if neither the horizontal axes are label or time\n    // and atleast  one of the main vertical ones are labels or time then it should be horizontal\n\n    if (!(mainHorizontalScaleType === ScaleTypes.LABELS || mainHorizontalScaleType === ScaleTypes.TIME) && mainVerticalScaleType === ScaleTypes.LABELS || mainVerticalScaleType === ScaleTypes.TIME) {\n      result.primaryDomainAxisPosition = verticalAxesPositions.primary;\n      result.primaryRangeAxisPosition = horizontalAxesPositions.primary; // secondary axes\n\n      result.secondaryDomainAxisPosition = verticalAxesPositions.secondary;\n      result.secondaryRangeAxisPosition = horizontalAxesPositions.secondary;\n    }\n\n    return result;\n  };\n\n  CartesianScales.prototype.getScaleDomain = function (axisPosition) {\n    var options = this.model.getOptions();\n    var axisOptions = Tools.getProperty(options, 'axes', axisPosition);\n    var bounds = Tools.getProperty(options, 'bounds');\n    var includeZero = axisOptions.includeZero;\n    var scaleType = Tools.getProperty(axisOptions, 'scaleType') || ScaleTypes.LINEAR;\n\n    if (this.model.isDataEmpty()) {\n      return [];\n    }\n\n    var displayData = this.model.getDisplayData();\n    var extendLinearDomainBy = axisOptions.extendLinearDomainBy,\n        mapsTo = axisOptions.mapsTo,\n        percentage = axisOptions.percentage,\n        thresholds = axisOptions.thresholds;\n    var _a = Configuration.axis.ratio,\n        ratioReference = _a.reference,\n        ratioCompareTo = _a.compareTo; // If domain is specified return that domain\n\n    if (axisOptions.domain) {\n      if (scaleType === ScaleTypes.LABELS) {\n        return axisOptions.domain;\n      } else if (scaleType === ScaleTypes.TIME) {\n        axisOptions.domain = axisOptions.domain.map(function (d) {\n          return d.getTime === undefined ? new Date(d) : d;\n        });\n      }\n\n      return this.extendsDomain(axisPosition, axisOptions.domain);\n    } // Return [0, 100] for percentage axis scale\n\n\n    if (percentage) {\n      return [0, 100];\n    } // If scale is a LABELS scale, return some labels as the domain\n\n\n    if (axisOptions && scaleType === ScaleTypes.LABELS) {\n      // Get unique values\n      return map(displayData, function (d) {\n        return d[mapsTo];\n      }).keys();\n    } // Get the extent of the domain\n\n\n    var domain;\n    var allDataValues;\n    var dataGroupNames = this.model.getDataGroupNames();\n\n    if (scaleType === ScaleTypes.LABELS_RATIO) {\n      return displayData.map(function (datum) {\n        return datum[ratioReference] + \"/\" + datum[ratioCompareTo];\n      });\n    } else if (scaleType === ScaleTypes.TIME) {\n      allDataValues = displayData.map(function (datum) {\n        return +new Date(datum[mapsTo]);\n      });\n    } else if (bounds && options.axes) {\n      allDataValues = [];\n      displayData.forEach(function (datum) {\n        allDataValues.push(datum[mapsTo]);\n\n        if (datum[bounds.upperBoundMapsTo]) {\n          allDataValues.push(datum[bounds.upperBoundMapsTo]);\n        }\n\n        if (datum[bounds.lowerBoundMapsTo]) {\n          allDataValues.push(datum[bounds.lowerBoundMapsTo]);\n        }\n      });\n    } else if (axisOptions.stacked === true && dataGroupNames && axisPosition === this.getRangeAxisPosition()) {\n      var groupMapsTo_1 = options.data.groupMapsTo;\n      var dataValuesGroupedByKeys = this.model.getDataValuesGroupedByKeys(dataGroupNames);\n      var nonStackedGroupsData = displayData.filter(function (datum) {\n        return !dataGroupNames.includes(datum[groupMapsTo_1]);\n      });\n      var stackedValues = dataValuesGroupedByKeys.map(function (dataValues) {\n        var sharedStackKey = dataValues.sharedStackKey,\n            numericalValues = __rest(dataValues, [\"sharedStackKey\"]);\n\n        return sum(values(numericalValues));\n      });\n      allDataValues = __spreadArrays(stackedValues, nonStackedGroupsData.map(function (datum) {\n        return datum[mapsTo];\n      }));\n    } else {\n      allDataValues = [];\n      displayData.forEach(function (datum) {\n        var value = datum[mapsTo];\n\n        if (Array.isArray(value) && value.length === 2) {\n          allDataValues.push(value[0]);\n          allDataValues.push(value[1]);\n        } else {\n          if (extendLinearDomainBy) {\n            allDataValues.push(Math.max(datum[mapsTo], datum[extendLinearDomainBy]));\n          }\n\n          allDataValues.push(value);\n        }\n      });\n    }\n\n    if (scaleType !== ScaleTypes.TIME && includeZero) {\n      allDataValues.push(0);\n    } // Add threshold values into the scale\n\n\n    if (thresholds && thresholds.length > 0) {\n      thresholds.forEach(function (threshold) {\n        var thresholdValue = Tools.getProperty(threshold, 'value');\n        if (thresholdValue !== null) allDataValues.push(thresholdValue);\n      });\n    }\n\n    domain = extent(allDataValues);\n    domain = this.extendsDomain(axisPosition, domain);\n    return domain;\n  };\n\n  CartesianScales.prototype.createScale = function (axisPosition) {\n    var options = this.model.getOptions();\n    var axisOptions = Tools.getProperty(options, 'axes', axisPosition);\n\n    if (!axisOptions) {\n      return null;\n    }\n\n    var scaleType = Tools.getProperty(axisOptions, 'scaleType') || ScaleTypes.LINEAR;\n    this.scaleTypes[axisPosition] = scaleType;\n    var scale;\n\n    if (scaleType === ScaleTypes.TIME) {\n      scale = scaleTime();\n    } else if (scaleType === ScaleTypes.LOG) {\n      scale = scaleLog().base(axisOptions.base || 10);\n    } else if (scaleType === ScaleTypes.LABELS || scaleType === ScaleTypes.LABELS_RATIO) {\n      scale = scaleBand();\n    } else {\n      scale = scaleLinear();\n    }\n\n    scale.domain(this.getScaleDomain(axisPosition));\n    return scale;\n  };\n\n  CartesianScales.prototype.getHighestDomainThreshold = function () {\n    var axesOptions = Tools.getProperty(this.model.getOptions(), 'axes');\n    var domainAxisPosition = this.getDomainAxisPosition();\n    var thresholds = axesOptions[domainAxisPosition].thresholds;\n\n    if (!thresholds) {\n      return null;\n    }\n\n    var domainScale = this.getDomainScale(); // Find the highest threshold for the domain\n\n    var highestThreshold = thresholds.sort(function (a, b) {\n      return b.value - a.value;\n    })[0];\n    var scaleType = this.getScaleTypeByPosition(domainAxisPosition);\n\n    if (scaleType === ScaleTypes.TIME && (typeof highestThreshold.value === 'string' || highestThreshold.value.getTime === undefined)) {\n      highestThreshold.value = new Date(highestThreshold.value);\n    }\n\n    return {\n      threshold: highestThreshold,\n      scaleValue: domainScale(highestThreshold.value)\n    };\n  };\n\n  CartesianScales.prototype.getHighestRangeThreshold = function () {\n    var axesOptions = Tools.getProperty(this.model.getOptions(), 'axes');\n    var rangeAxisPosition = this.getRangeAxisPosition();\n    var thresholds = axesOptions[rangeAxisPosition].thresholds;\n\n    if (!thresholds) {\n      return null;\n    }\n\n    var rangeScale = this.getRangeScale(); // Find the highest threshold for the range\n\n    var highestThreshold = thresholds.sort(function (a, b) {\n      return b.value - a.value;\n    })[0];\n    return {\n      threshold: highestThreshold,\n      scaleValue: rangeScale(highestThreshold.value)\n    };\n  };\n\n  return CartesianScales;\n}(Service);\n\nexport { CartesianScales };\n\nfunction addSpacingToTimeDomain(domain, spaceToAddToEdges) {\n  var startDate = new Date(domain[0]);\n  var endDate = new Date(domain[1]);\n\n  if (differenceInYears(endDate, startDate) > 1) {\n    return [subYears(startDate, spaceToAddToEdges), addYears(endDate, spaceToAddToEdges)];\n  }\n\n  if (differenceInMonths(endDate, startDate) > 1) {\n    return [subMonths(startDate, spaceToAddToEdges), addMonths(endDate, spaceToAddToEdges)];\n  }\n\n  if (differenceInDays(endDate, startDate) > 1) {\n    return [subDays(startDate, spaceToAddToEdges), addDays(endDate, spaceToAddToEdges)];\n  }\n\n  if (differenceInHours(endDate, startDate) > 1) {\n    return [subHours(startDate, spaceToAddToEdges), addHours(endDate, spaceToAddToEdges)];\n  }\n\n  if (differenceInMinutes(endDate, startDate) > 30) {\n    return [subMinutes(startDate, spaceToAddToEdges * 30), addMinutes(endDate, spaceToAddToEdges * 30)];\n  }\n\n  if (differenceInMinutes(endDate, startDate) > 1) {\n    return [subMinutes(startDate, spaceToAddToEdges), addMinutes(endDate, spaceToAddToEdges)];\n  }\n\n  if (differenceInSeconds(endDate, startDate) > 15) {\n    return [subSeconds(startDate, spaceToAddToEdges * 15), addSeconds(endDate, spaceToAddToEdges * 15)];\n  }\n\n  if (differenceInSeconds(endDate, startDate) > 1) {\n    return [subSeconds(startDate, spaceToAddToEdges), addSeconds(endDate, spaceToAddToEdges)];\n  }\n\n  return [startDate, endDate];\n}\n\nfunction addSpacingToContinuousDomain(_a, paddingRatio) {\n  var lower = _a[0],\n      upper = _a[1];\n  var domainLength = upper - lower;\n  var padding = domainLength * paddingRatio; // If padding crosses 0, keep 0 as new upper bound\n\n  var newUpper = upper <= 0 && upper + padding > 0 ? 0 : upper + padding; // If padding crosses 0, keep 0 as new lower bound\n\n  var newLower = lower >= 0 && lower - padding < 0 ? 0 : lower - padding;\n  return [newLower, newUpper];\n}","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/services/scales-cartesian.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__rest","s","e","t","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__spreadArrays","il","arguments","r","k","a","j","jl","Configuration","Service","AxisPositions","CartesianOrientations","ScaleTypes","Tools","scaleBand","scaleLinear","scaleTime","scaleLog","extent","sum","map","values","differenceInYears","addYears","subYears","differenceInMonths","addMonths","subMonths","differenceInDays","addDays","subDays","differenceInHours","addHours","subHours","differenceInMinutes","addMinutes","subMinutes","differenceInSeconds","subSeconds","addSeconds","CartesianScales","_super","_this","apply","scaleTypes","top","right","bottom","left","scales","getDomainAxisPosition","_a","_b","datum","_c","dualAxes","options","model","getOptions","groupMapsTo","data","axesOptions","getProperty","secondaryDomainAxisPosition","dataset","correspondingDatasets","includes","domainAxisPosition","getRangeAxisPosition","_d","groups","_e","axisOptions","secondaryRangeAxisPosition","rangeAxisPosition","getAxisOptions","position","getDomainAxisOptions","getRangeAxisOptions","update","animate","determineAxisDuality","findDomainAndRangeAxes","determineOrientation","axisPositions","keys","axisPositionKey","forEach","axisPosition","createScale","verticalAxesPositions","findVerticalAxesPositions","horizontalAxesPositions","findHorizontalAxesPositions","domainAndRangeAxesPositions","findDomainAndRangeAxesPositions","primaryDomainAxisPosition","primaryRangeAxisPosition","isDualAxes","LEFT","RIGHT","BOTTOM","TOP","orientation","VERTICAL","HORIZONTAL","getOrientation","getScaleByPosition","getScaleTypeByPosition","getDomainAxisScaleType","getRangeAxisScaleType","getDomainScale","getRangeScale","getMainXAxisPosition","possibleXAxisPositions","find","getMainYAxisPosition","possibleYAxisPositions","getMainXScale","getMainYScale","getValueFromScale","scale","scaleType","index","mapsTo","value","scaledValue","LABELS","step","TIME","Date","getBoundedScaledValues","bounds","undefined","boundedValues","upperBoundMapsTo","lowerBoundMapsTo","getValueThroughAxisPosition","getDomainValue","getRangeValue","getMainXScaleType","getMainYScaleType","getDomainIdentifier","getRangeIdentifier","extendsDomain","domain","spaceToAddToEdges","addSpacingToTimeDomain","addSpacingToContinuousDomain","axis","paddingRatio","primary","secondary","mainVerticalAxisOptions","mainHorizontalAxisOptions","mainVerticalScaleType","LINEAR","mainHorizontalScaleType","result","getScaleDomain","includeZero","isDataEmpty","displayData","getDisplayData","extendLinearDomainBy","percentage","thresholds","ratio","ratioReference","reference","ratioCompareTo","compareTo","getTime","allDataValues","dataGroupNames","getDataGroupNames","LABELS_RATIO","axes","push","stacked","groupMapsTo_1","dataValuesGroupedByKeys","getDataValuesGroupedByKeys","nonStackedGroupsData","filter","stackedValues","dataValues","sharedStackKey","numericalValues","isArray","Math","max","threshold","thresholdValue","LOG","base","getHighestDomainThreshold","domainScale","highestThreshold","sort","scaleValue","getHighestRangeThreshold","rangeScale","startDate","endDate","lower","upper","domainLength","padding","newUpper","newLower"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\n// Internal Imports\nimport * as Configuration from '../configuration';\nimport { Service } from './service';\nimport { AxisPositions, CartesianOrientations, ScaleTypes, } from '../interfaces';\nimport { Tools } from '../tools';\n// D3 Imports\nimport { scaleBand, scaleLinear, scaleTime, scaleLog } from 'd3-scale';\nimport { extent, sum } from 'd3-array';\nimport { map, values } from 'd3-collection';\n// Misc\nimport { differenceInYears, addYears, subYears, differenceInMonths, addMonths, subMonths, differenceInDays, addDays, subDays, differenceInHours, addHours, subHours, differenceInMinutes, addMinutes, subMinutes, differenceInSeconds, subSeconds, addSeconds, } from 'date-fns';\nvar CartesianScales = /** @class */ (function (_super) {\n    __extends(CartesianScales, _super);\n    function CartesianScales() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.scaleTypes = {\n            top: null,\n            right: null,\n            bottom: null,\n            left: null,\n        };\n        _this.scales = {\n            top: null,\n            right: null,\n            bottom: null,\n            left: null,\n        };\n        return _this;\n    }\n    CartesianScales.prototype.getDomainAxisPosition = function (_a) {\n        var _b = (_a === void 0 ? {} : _a).datum, datum = _b === void 0 ? null : _b;\n        var _c;\n        if (this.dualAxes && datum) {\n            var options = this.model.getOptions();\n            var groupMapsTo = options.data.groupMapsTo;\n            var axesOptions = Tools.getProperty(options, 'axes', this.secondaryDomainAxisPosition);\n            var dataset = datum[groupMapsTo];\n            if (((_c = axesOptions) === null || _c === void 0 ? void 0 : _c.correspondingDatasets) &&\n                axesOptions.correspondingDatasets.includes(dataset)) {\n                return this.secondaryDomainAxisPosition;\n            }\n        }\n        return this.domainAxisPosition;\n    };\n    CartesianScales.prototype.getRangeAxisPosition = function (_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.datum, datum = _c === void 0 ? null : _c, _d = _b.groups, groups = _d === void 0 ? null : _d;\n        var _e;\n        if (this.dualAxes) {\n            var options = this.model.getOptions();\n            var groupMapsTo = options.data.groupMapsTo;\n            var axisOptions = Tools.getProperty(options, 'axes', this.secondaryRangeAxisPosition);\n            var dataset = void 0;\n            if (datum !== null) {\n                dataset = datum[groupMapsTo];\n            }\n            else if (groups && groups.length > 0) {\n                dataset = groups[0];\n            }\n            if (((_e = axisOptions) === null || _e === void 0 ? void 0 : _e.correspondingDatasets) &&\n                axisOptions.correspondingDatasets.includes(dataset)) {\n                return this.secondaryRangeAxisPosition;\n            }\n        }\n        return this.rangeAxisPosition;\n    };\n    CartesianScales.prototype.getAxisOptions = function (position) {\n        return Tools.getProperty(this.model.getOptions(), 'axes', position);\n    };\n    CartesianScales.prototype.getDomainAxisOptions = function () {\n        var domainAxisPosition = this.getDomainAxisPosition();\n        return this.getAxisOptions(domainAxisPosition);\n    };\n    CartesianScales.prototype.getRangeAxisOptions = function () {\n        var rangeAxisPosition = this.getRangeAxisPosition();\n        return this.getAxisOptions(rangeAxisPosition);\n    };\n    CartesianScales.prototype.update = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        this.determineAxisDuality();\n        this.findDomainAndRangeAxes();\n        this.determineOrientation();\n        var axisPositions = Object.keys(AxisPositions).map(function (axisPositionKey) { return AxisPositions[axisPositionKey]; });\n        axisPositions.forEach(function (axisPosition) {\n            _this.scales[axisPosition] = _this.createScale(axisPosition);\n        });\n    };\n    CartesianScales.prototype.findDomainAndRangeAxes = function () {\n        // find main axes between (left & right) && (bottom & top)\n        var verticalAxesPositions = this.findVerticalAxesPositions();\n        var horizontalAxesPositions = this.findHorizontalAxesPositions();\n        // Now we have horizontal & vertical main axes to choose domain & range axes from\n        var domainAndRangeAxesPositions = this.findDomainAndRangeAxesPositions(verticalAxesPositions, horizontalAxesPositions);\n        this.domainAxisPosition =\n            domainAndRangeAxesPositions.primaryDomainAxisPosition;\n        this.rangeAxisPosition =\n            domainAndRangeAxesPositions.primaryRangeAxisPosition;\n        if (this.isDualAxes()) {\n            this.secondaryDomainAxisPosition =\n                domainAndRangeAxesPositions.secondaryDomainAxisPosition;\n            this.secondaryRangeAxisPosition =\n                domainAndRangeAxesPositions.secondaryRangeAxisPosition;\n        }\n    };\n    CartesianScales.prototype.determineOrientation = function () {\n        if ((this.rangeAxisPosition === AxisPositions.LEFT ||\n            this.rangeAxisPosition === AxisPositions.RIGHT) &&\n            (this.domainAxisPosition === AxisPositions.BOTTOM ||\n                this.domainAxisPosition === AxisPositions.TOP)) {\n            this.orientation = CartesianOrientations.VERTICAL;\n        }\n        else {\n            this.orientation = CartesianOrientations.HORIZONTAL;\n        }\n    };\n    CartesianScales.prototype.isDualAxes = function () {\n        return this.dualAxes;\n    };\n    // if any of the axes objects have correspondingDatasets [] asserted we flag the chart as dual axes\n    // it does not count as dual axes if it just has another axis turned on but is not actually using it to map a dataset\n    CartesianScales.prototype.determineAxisDuality = function () {\n        var _a, _b, _c, _d;\n        var options = this.model.getOptions();\n        var axesOptions = Tools.getProperty(options, 'axes');\n        if ((((_a = axesOptions[AxisPositions.LEFT]) === null || _a === void 0 ? void 0 : _a.correspondingDatasets) &&\n            axesOptions[AxisPositions.RIGHT]) ||\n            (((_b = axesOptions[AxisPositions.RIGHT]) === null || _b === void 0 ? void 0 : _b.correspondingDatasets) &&\n                axesOptions[AxisPositions.LEFT]) ||\n            (((_c = axesOptions[AxisPositions.TOP]) === null || _c === void 0 ? void 0 : _c.correspondingDatasets) &&\n                axesOptions[AxisPositions.BOTTOM]) ||\n            (((_d = axesOptions[AxisPositions.BOTTOM]) === null || _d === void 0 ? void 0 : _d.correspondingDatasets) &&\n                axesOptions[AxisPositions.TOP])) {\n            this.dualAxes = true;\n        }\n    };\n    CartesianScales.prototype.getOrientation = function () {\n        return this.orientation;\n    };\n    CartesianScales.prototype.getScaleByPosition = function (axisPosition) {\n        return this.scales[axisPosition];\n    };\n    CartesianScales.prototype.getScaleTypeByPosition = function (axisPosition) {\n        return this.scaleTypes[axisPosition];\n    };\n    CartesianScales.prototype.getDomainAxisScaleType = function () {\n        var domainAxisPosition = this.getDomainAxisPosition();\n        return this.getScaleTypeByPosition(domainAxisPosition);\n    };\n    CartesianScales.prototype.getRangeAxisScaleType = function () {\n        var rangeAxisPosition = this.getRangeAxisPosition();\n        return this.getScaleTypeByPosition(rangeAxisPosition);\n    };\n    CartesianScales.prototype.getDomainScale = function () {\n        return this.scales[this.domainAxisPosition];\n    };\n    CartesianScales.prototype.getRangeScale = function () {\n        return this.scales[this.rangeAxisPosition];\n    };\n    // Find the main x-axis out of the 2 x-axis on the chart (when 2D axis is used)\n    CartesianScales.prototype.getMainXAxisPosition = function () {\n        var possibleXAxisPositions = [\n            AxisPositions.BOTTOM,\n            AxisPositions.TOP,\n        ];\n        return [this.domainAxisPosition, this.rangeAxisPosition].find(function (position) { return possibleXAxisPositions.indexOf(position) > -1; });\n    };\n    // Find the main y-axis out of the 2 y-axis on the chart (when 2D axis is used)\n    CartesianScales.prototype.getMainYAxisPosition = function () {\n        var possibleYAxisPositions = [\n            AxisPositions.LEFT,\n            AxisPositions.RIGHT,\n        ];\n        return [this.domainAxisPosition, this.rangeAxisPosition].find(function (position) { return possibleYAxisPositions.indexOf(position) > -1; });\n    };\n    CartesianScales.prototype.getMainXScale = function () {\n        return this.scales[this.getMainXAxisPosition()];\n    };\n    CartesianScales.prototype.getMainYScale = function () {\n        return this.scales[this.getMainYAxisPosition()];\n    };\n    CartesianScales.prototype.getValueFromScale = function (scale, scaleType, axisPosition, datum, index) {\n        var options = this.model.getOptions();\n        var axesOptions = Tools.getProperty(options, 'axes');\n        var axisOptions = axesOptions[axisPosition];\n        var mapsTo = axisOptions.mapsTo;\n        var value = Tools.getProperty(datum, mapsTo) !== null ? datum[mapsTo] : datum;\n        var scaledValue;\n        switch (scaleType) {\n            case ScaleTypes.LABELS:\n                scaledValue = scale(value) + scale.step() / 2;\n                break;\n            case ScaleTypes.TIME:\n                scaledValue = scale(new Date(value));\n                break;\n            default:\n                scaledValue = scale(value);\n        }\n        return scaledValue;\n    };\n    CartesianScales.prototype.getBoundedScaledValues = function (datum, index) {\n        var bounds = this.model.getOptions().bounds;\n        var scale = this.scales[this.rangeAxisPosition];\n        var options = this.model.getOptions();\n        var axesOptions = Tools.getProperty(options, 'axes');\n        var axisOptions = axesOptions[this.rangeAxisPosition];\n        var mapsTo = axisOptions.mapsTo;\n        var value = datum[mapsTo] !== undefined ? datum[mapsTo] : datum;\n        var boundedValues = [\n            scale(Tools.getProperty(datum, bounds.upperBoundMapsTo) !== null\n                ? datum[bounds.upperBoundMapsTo]\n                : value),\n            scale(Tools.getProperty(datum, bounds.lowerBoundMapsTo) !== null\n                ? datum[bounds.lowerBoundMapsTo]\n                : value),\n        ];\n        return boundedValues;\n    };\n    CartesianScales.prototype.getValueThroughAxisPosition = function (axisPosition, datum, index) {\n        var scaleType = this.scaleTypes[axisPosition];\n        var scale = this.scales[axisPosition];\n        return this.getValueFromScale(scale, scaleType, axisPosition, datum, index);\n    };\n    CartesianScales.prototype.getDomainValue = function (d, i) {\n        var axisPosition = this.getDomainAxisPosition({ datum: d });\n        return this.getValueThroughAxisPosition(axisPosition, d, i);\n    };\n    CartesianScales.prototype.getRangeValue = function (d, i) {\n        var axisPosition = this.getRangeAxisPosition({ datum: d });\n        return this.getValueThroughAxisPosition(axisPosition, d, i);\n    };\n    CartesianScales.prototype.getMainXScaleType = function () {\n        return this.getScaleTypeByPosition(this.getMainXAxisPosition());\n    };\n    CartesianScales.prototype.getMainYScaleType = function () {\n        return this.getScaleTypeByPosition(this.getMainYAxisPosition());\n    };\n    CartesianScales.prototype.getDomainIdentifier = function (datum) {\n        var options = this.model.getOptions();\n        return Tools.getProperty(options, 'axes', this.getDomainAxisPosition({ datum: datum }), 'mapsTo');\n    };\n    CartesianScales.prototype.getRangeIdentifier = function (datum) {\n        var options = this.model.getOptions();\n        return Tools.getProperty(options, 'axes', this.getRangeAxisPosition({ datum: datum }), 'mapsTo');\n    };\n    CartesianScales.prototype.extendsDomain = function (axisPosition, domain) {\n        var options = this.model.getOptions();\n        var axisOptions = Tools.getProperty(options, 'axes', axisPosition);\n        if (axisOptions.scaleType === ScaleTypes.TIME) {\n            var spaceToAddToEdges = Tools.getProperty(options, 'timeScale', 'addSpaceOnEdges');\n            return addSpacingToTimeDomain(domain, spaceToAddToEdges);\n        }\n        else {\n            return addSpacingToContinuousDomain(domain, Configuration.axis.paddingRatio);\n        }\n    };\n    CartesianScales.prototype.findVerticalAxesPositions = function () {\n        var options = this.model.getOptions();\n        var axesOptions = Tools.getProperty(options, 'axes');\n        var dualAxes = this.isDualAxes();\n        // If right axis has been specified as `main`\n        if ((Tools.getProperty(axesOptions, AxisPositions.LEFT) === null &&\n            Tools.getProperty(axesOptions, AxisPositions.RIGHT) !== null) ||\n            Tools.getProperty(axesOptions, AxisPositions.RIGHT, 'main') ===\n                true ||\n            (dualAxes &&\n                Tools.getProperty(axesOptions, AxisPositions.LEFT, 'correspondingDatasets'))) {\n            return {\n                primary: AxisPositions.RIGHT,\n                secondary: AxisPositions.LEFT,\n            };\n        }\n        return { primary: AxisPositions.LEFT, secondary: AxisPositions.RIGHT };\n    };\n    CartesianScales.prototype.findHorizontalAxesPositions = function () {\n        var options = this.model.getOptions();\n        var axesOptions = Tools.getProperty(options, 'axes');\n        var dualAxes = this.isDualAxes();\n        // If top axis has been specified as `main`\n        if ((Tools.getProperty(axesOptions, AxisPositions.BOTTOM) === null &&\n            Tools.getProperty(axesOptions, AxisPositions.TOP) !== null) ||\n            Tools.getProperty(axesOptions, AxisPositions.TOP, 'main') ===\n                true ||\n            (dualAxes &&\n                Tools.getProperty(axesOptions, AxisPositions.BOTTOM, 'correspondingDatasets'))) {\n            return {\n                primary: AxisPositions.TOP,\n                secondary: AxisPositions.BOTTOM,\n            };\n        }\n        return { primary: AxisPositions.BOTTOM, secondary: AxisPositions.TOP };\n    };\n    CartesianScales.prototype.findDomainAndRangeAxesPositions = function (verticalAxesPositions, horizontalAxesPositions) {\n        var options = this.model.getOptions();\n        var mainVerticalAxisOptions = Tools.getProperty(options, 'axes', verticalAxesPositions.primary);\n        var mainHorizontalAxisOptions = Tools.getProperty(options, 'axes', horizontalAxesPositions.primary);\n        var mainVerticalScaleType = mainVerticalAxisOptions.scaleType || ScaleTypes.LINEAR;\n        var mainHorizontalScaleType = mainHorizontalAxisOptions.scaleType || ScaleTypes.LINEAR;\n        var result = {\n            primaryDomainAxisPosition: null,\n            secondaryDomainAxisPosition: null,\n            primaryRangeAxisPosition: null,\n            secondaryRangeAxisPosition: null,\n        };\n        // assign to to be a vertical chart by default\n        result.primaryDomainAxisPosition = horizontalAxesPositions.primary;\n        result.primaryRangeAxisPosition = verticalAxesPositions.primary;\n        // secondary axes\n        result.secondaryDomainAxisPosition = horizontalAxesPositions.secondary;\n        result.secondaryRangeAxisPosition = verticalAxesPositions.secondary;\n        // if neither the horizontal axes are label or time\n        // and atleast  one of the main vertical ones are labels or time then it should be horizontal\n        if ((!(mainHorizontalScaleType === ScaleTypes.LABELS ||\n            mainHorizontalScaleType === ScaleTypes.TIME) &&\n            mainVerticalScaleType === ScaleTypes.LABELS) ||\n            mainVerticalScaleType === ScaleTypes.TIME) {\n            result.primaryDomainAxisPosition = verticalAxesPositions.primary;\n            result.primaryRangeAxisPosition = horizontalAxesPositions.primary;\n            // secondary axes\n            result.secondaryDomainAxisPosition =\n                verticalAxesPositions.secondary;\n            result.secondaryRangeAxisPosition =\n                horizontalAxesPositions.secondary;\n        }\n        return result;\n    };\n    CartesianScales.prototype.getScaleDomain = function (axisPosition) {\n        var options = this.model.getOptions();\n        var axisOptions = Tools.getProperty(options, 'axes', axisPosition);\n        var bounds = Tools.getProperty(options, 'bounds');\n        var includeZero = axisOptions.includeZero;\n        var scaleType = Tools.getProperty(axisOptions, 'scaleType') || ScaleTypes.LINEAR;\n        if (this.model.isDataEmpty()) {\n            return [];\n        }\n        var displayData = this.model.getDisplayData();\n        var extendLinearDomainBy = axisOptions.extendLinearDomainBy, mapsTo = axisOptions.mapsTo, percentage = axisOptions.percentage, thresholds = axisOptions.thresholds;\n        var _a = Configuration.axis.ratio, ratioReference = _a.reference, ratioCompareTo = _a.compareTo;\n        // If domain is specified return that domain\n        if (axisOptions.domain) {\n            if (scaleType === ScaleTypes.LABELS) {\n                return axisOptions.domain;\n            }\n            else if (scaleType === ScaleTypes.TIME) {\n                axisOptions.domain = axisOptions.domain.map(function (d) {\n                    return d.getTime === undefined ? new Date(d) : d;\n                });\n            }\n            return this.extendsDomain(axisPosition, axisOptions.domain);\n        }\n        // Return [0, 100] for percentage axis scale\n        if (percentage) {\n            return [0, 100];\n        }\n        // If scale is a LABELS scale, return some labels as the domain\n        if (axisOptions && scaleType === ScaleTypes.LABELS) {\n            // Get unique values\n            return map(displayData, function (d) { return d[mapsTo]; }).keys();\n        }\n        // Get the extent of the domain\n        var domain;\n        var allDataValues;\n        var dataGroupNames = this.model.getDataGroupNames();\n        if (scaleType === ScaleTypes.LABELS_RATIO) {\n            return displayData.map(function (datum) { return datum[ratioReference] + \"/\" + datum[ratioCompareTo]; });\n        }\n        else if (scaleType === ScaleTypes.TIME) {\n            allDataValues = displayData.map(function (datum) { return +new Date(datum[mapsTo]); });\n        }\n        else if (bounds && options.axes) {\n            allDataValues = [];\n            displayData.forEach(function (datum) {\n                allDataValues.push(datum[mapsTo]);\n                if (datum[bounds.upperBoundMapsTo]) {\n                    allDataValues.push(datum[bounds.upperBoundMapsTo]);\n                }\n                if (datum[bounds.lowerBoundMapsTo]) {\n                    allDataValues.push(datum[bounds.lowerBoundMapsTo]);\n                }\n            });\n        }\n        else if (axisOptions.stacked === true &&\n            dataGroupNames &&\n            axisPosition === this.getRangeAxisPosition()) {\n            var groupMapsTo_1 = options.data.groupMapsTo;\n            var dataValuesGroupedByKeys = this.model.getDataValuesGroupedByKeys(dataGroupNames);\n            var nonStackedGroupsData = displayData.filter(function (datum) { return !dataGroupNames.includes(datum[groupMapsTo_1]); });\n            var stackedValues = dataValuesGroupedByKeys.map(function (dataValues) {\n                var sharedStackKey = dataValues.sharedStackKey, numericalValues = __rest(dataValues, [\"sharedStackKey\"]);\n                return sum(values(numericalValues));\n            });\n            allDataValues = __spreadArrays(stackedValues, nonStackedGroupsData.map(function (datum) { return datum[mapsTo]; }));\n        }\n        else {\n            allDataValues = [];\n            displayData.forEach(function (datum) {\n                var value = datum[mapsTo];\n                if (Array.isArray(value) && value.length === 2) {\n                    allDataValues.push(value[0]);\n                    allDataValues.push(value[1]);\n                }\n                else {\n                    if (extendLinearDomainBy) {\n                        allDataValues.push(Math.max(datum[mapsTo], datum[extendLinearDomainBy]));\n                    }\n                    allDataValues.push(value);\n                }\n            });\n        }\n        if (scaleType !== ScaleTypes.TIME && includeZero) {\n            allDataValues.push(0);\n        }\n        // Add threshold values into the scale\n        if (thresholds && thresholds.length > 0) {\n            thresholds.forEach(function (threshold) {\n                var thresholdValue = Tools.getProperty(threshold, 'value');\n                if (thresholdValue !== null)\n                    allDataValues.push(thresholdValue);\n            });\n        }\n        domain = extent(allDataValues);\n        domain = this.extendsDomain(axisPosition, domain);\n        return domain;\n    };\n    CartesianScales.prototype.createScale = function (axisPosition) {\n        var options = this.model.getOptions();\n        var axisOptions = Tools.getProperty(options, 'axes', axisPosition);\n        if (!axisOptions) {\n            return null;\n        }\n        var scaleType = Tools.getProperty(axisOptions, 'scaleType') || ScaleTypes.LINEAR;\n        this.scaleTypes[axisPosition] = scaleType;\n        var scale;\n        if (scaleType === ScaleTypes.TIME) {\n            scale = scaleTime();\n        }\n        else if (scaleType === ScaleTypes.LOG) {\n            scale = scaleLog().base(axisOptions.base || 10);\n        }\n        else if (scaleType === ScaleTypes.LABELS ||\n            scaleType === ScaleTypes.LABELS_RATIO) {\n            scale = scaleBand();\n        }\n        else {\n            scale = scaleLinear();\n        }\n        scale.domain(this.getScaleDomain(axisPosition));\n        return scale;\n    };\n    CartesianScales.prototype.getHighestDomainThreshold = function () {\n        var axesOptions = Tools.getProperty(this.model.getOptions(), 'axes');\n        var domainAxisPosition = this.getDomainAxisPosition();\n        var thresholds = axesOptions[domainAxisPosition].thresholds;\n        if (!thresholds) {\n            return null;\n        }\n        var domainScale = this.getDomainScale();\n        // Find the highest threshold for the domain\n        var highestThreshold = thresholds.sort(function (a, b) { return b.value - a.value; })[0];\n        var scaleType = this.getScaleTypeByPosition(domainAxisPosition);\n        if (scaleType === ScaleTypes.TIME &&\n            (typeof highestThreshold.value === 'string' ||\n                highestThreshold.value.getTime === undefined)) {\n            highestThreshold.value = new Date(highestThreshold.value);\n        }\n        return {\n            threshold: highestThreshold,\n            scaleValue: domainScale(highestThreshold.value),\n        };\n    };\n    CartesianScales.prototype.getHighestRangeThreshold = function () {\n        var axesOptions = Tools.getProperty(this.model.getOptions(), 'axes');\n        var rangeAxisPosition = this.getRangeAxisPosition();\n        var thresholds = axesOptions[rangeAxisPosition].thresholds;\n        if (!thresholds) {\n            return null;\n        }\n        var rangeScale = this.getRangeScale();\n        // Find the highest threshold for the range\n        var highestThreshold = thresholds.sort(function (a, b) { return b.value - a.value; })[0];\n        return {\n            threshold: highestThreshold,\n            scaleValue: rangeScale(highestThreshold.value),\n        };\n    };\n    return CartesianScales;\n}(Service));\nexport { CartesianScales };\nfunction addSpacingToTimeDomain(domain, spaceToAddToEdges) {\n    var startDate = new Date(domain[0]);\n    var endDate = new Date(domain[1]);\n    if (differenceInYears(endDate, startDate) > 1) {\n        return [\n            subYears(startDate, spaceToAddToEdges),\n            addYears(endDate, spaceToAddToEdges),\n        ];\n    }\n    if (differenceInMonths(endDate, startDate) > 1) {\n        return [\n            subMonths(startDate, spaceToAddToEdges),\n            addMonths(endDate, spaceToAddToEdges),\n        ];\n    }\n    if (differenceInDays(endDate, startDate) > 1) {\n        return [\n            subDays(startDate, spaceToAddToEdges),\n            addDays(endDate, spaceToAddToEdges),\n        ];\n    }\n    if (differenceInHours(endDate, startDate) > 1) {\n        return [\n            subHours(startDate, spaceToAddToEdges),\n            addHours(endDate, spaceToAddToEdges),\n        ];\n    }\n    if (differenceInMinutes(endDate, startDate) > 30) {\n        return [\n            subMinutes(startDate, spaceToAddToEdges * 30),\n            addMinutes(endDate, spaceToAddToEdges * 30),\n        ];\n    }\n    if (differenceInMinutes(endDate, startDate) > 1) {\n        return [\n            subMinutes(startDate, spaceToAddToEdges),\n            addMinutes(endDate, spaceToAddToEdges),\n        ];\n    }\n    if (differenceInSeconds(endDate, startDate) > 15) {\n        return [\n            subSeconds(startDate, spaceToAddToEdges * 15),\n            addSeconds(endDate, spaceToAddToEdges * 15),\n        ];\n    }\n    if (differenceInSeconds(endDate, startDate) > 1) {\n        return [\n            subSeconds(startDate, spaceToAddToEdges),\n            addSeconds(endDate, spaceToAddToEdges),\n        ];\n    }\n    return [startDate, endDate];\n}\nfunction addSpacingToContinuousDomain(_a, paddingRatio) {\n    var lower = _a[0], upper = _a[1];\n    var domainLength = upper - lower;\n    var padding = domainLength * paddingRatio;\n    // If padding crosses 0, keep 0 as new upper bound\n    var newUpper = upper <= 0 && upper + padding > 0 ? 0 : upper + padding;\n    // If padding crosses 0, keep 0 as new lower bound\n    var newLower = lower >= 0 && lower - padding < 0 ? 0 : lower - padding;\n    return [newLower, newUpper];\n}\n//# sourceMappingURL=../../src/services/scales-cartesian.js.map"]},"metadata":{},"sourceType":"module"}