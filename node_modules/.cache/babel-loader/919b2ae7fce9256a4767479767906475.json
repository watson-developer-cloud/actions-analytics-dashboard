{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}(); // Internal Imports\n\n\nimport { Component } from '../component';\nimport { Events, Roles, ColorClassNameTypes } from '../../interfaces';\nimport { Tools } from '../../tools';\nimport { DOMUtils } from '../../services'; // D3 Imports\n\nimport { select } from 'd3-selection';\n\nvar Bullet =\n/** @class */\nfunction (_super) {\n  __extends(Bullet, _super);\n\n  function Bullet() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'bullet';\n\n    _this.handleLegendOnHover = function (event) {\n      var hoveredElement = event.detail.hoveredElement;\n\n      var groupMapsTo = _this.getOptions().data.groupMapsTo;\n\n      _this.parent.selectAll('path.bar').transition(_this.services.transitions.getTransition('legend-hover-simple-bar')).attr('opacity', function (d) {\n        return d[groupMapsTo] !== hoveredElement.datum()['name'] ? 0.3 : 1;\n      });\n    };\n\n    _this.handleLegendMouseOut = function (event) {\n      _this.parent.selectAll('path.bar').transition(_this.services.transitions.getTransition('legend-mouseout-simple-bar')).attr('opacity', 1);\n    };\n\n    return _this;\n  }\n\n  Bullet.prototype.init = function () {\n    var eventsFragment = this.services.events; // Highlight correct circle on legend item hovers\n\n    eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover); // Un-highlight circles on legend item mouseouts\n\n    eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n  };\n\n  Bullet.prototype.render = function (animate) {\n    var _this = this;\n\n    var options = this.getOptions();\n    var groupMapsTo = options.data.groupMapsTo; // Grab container SVG\n\n    var svg = this.getContainerSVG({\n      withinChartClip: true\n    });\n    var data = this.model.getDisplayData(this.configs.groups);\n    var rangeScale = this.services.cartesianScales.getRangeScale();\n    var rangeIdentifier = this.services.cartesianScales.getRangeIdentifier();\n\n    var _a = rangeScale.range(),\n        rangeScaleStart = _a[0],\n        rangeScaleEnd = _a[1];\n\n    var _b = rangeScale.domain(),\n        rangeScaleDomainMin = _b[0],\n        rangeScaleDomainMax = _b[1];\n\n    var renderRangeBoxes = function renderRangeBoxes() {\n      var rangeBoxData = [];\n      data.forEach(function (datum) {\n        if (datum.ranges) {\n          datum.ranges.forEach(function (range, i) {\n            if (range !== null && range !== undefined && range < rangeScaleDomainMax) {\n              rangeBoxData.push({\n                datum: datum,\n                value: range,\n                order: i + 1\n              });\n            }\n          });\n        } else {\n          rangeBoxData.push({\n            datum: datum,\n            order: 1\n          });\n        }\n      }); // Update data on all lines\n\n      var rangeBoxes = DOMUtils.appendOrSelect(svg, 'g.range-boxes').selectAll('path.range-box').data(rangeBoxData, function (datum) {\n        return datum[groupMapsTo] + \"-\" + datum.order;\n      }); // Remove lines that are no longer needed\n\n      rangeBoxes.exit().attr('opacity', 0).remove(); // Add the paths that need to be introduced\n\n      var rangeBoxesEnter = rangeBoxes.enter().append('path').attr('opacity', 0);\n      rangeBoxesEnter.merge(rangeBoxes).attr('class', function (d) {\n        return \"range-box order-\" + d.order;\n      }).transition(_this.services.transitions.getTransition('bullet-range-box-update-enter', animate)).attr('d', function (d, i) {\n        /*\n         * Orientation support for horizontal/vertical bar charts\n         * Determine coordinates needed for a vertical set of paths\n         * to draw the bars needed, and pass those coordinates down to\n         * generateSVGPathString() to decide whether it needs to flip them\n         */\n        var lineHeight = 16;\n        var x0, x1, y0, y1;\n\n        if (d.order === 1) {\n          x0 = _this.services.cartesianScales.getDomainValue(d.datum, i) - lineHeight / 2;\n          x1 = x0 + lineHeight;\n          y0 = rangeScaleEnd - 2;\n          y1 = rangeScaleStart + 1;\n        } else {\n          x0 = _this.services.cartesianScales.getDomainValue(d.datum, i) - lineHeight / 2;\n          x1 = x0 + lineHeight;\n          y0 = _this.services.cartesianScales.getRangeValue(d.value, i);\n          y1 = rangeScaleEnd;\n        }\n\n        return Tools.generateSVGPathString({\n          x0: x0,\n          x1: x1,\n          y0: y0,\n          y1: y1\n        }, _this.services.cartesianScales.getOrientation());\n      }).attr('opacity', 1);\n    };\n\n    var renderBars = function renderBars() {\n      // Update data on all bars\n      var bars = DOMUtils.appendOrSelect(svg, 'g.bars').selectAll('path.bar').data(data, function (datum) {\n        return datum[groupMapsTo];\n      }); // Remove bars that are no longer needed\n\n      bars.exit().attr('opacity', 0).remove(); // Add the paths that need to be introduced\n\n      var barsEnter = bars.enter().append('path').attr('opacity', 0);\n      barsEnter.merge(bars).classed('bar', true).transition(_this.services.transitions.getTransition('bullet-bar-update-enter', animate)).attr('class', function (d) {\n        return _this.model.getColorClassName({\n          classNameTypes: [ColorClassNameTypes.FILL],\n          dataGroupName: d[groupMapsTo],\n          originalClassName: 'bar'\n        });\n      }).style('fill', function (d) {\n        return _this.model.getFillColor(d[groupMapsTo]);\n      }).attr('d', function (d, i) {\n        /*\n         * Orientation support for horizontal/vertical bar charts\n         * Determine coordinates needed for a vertical set of paths\n         * to draw the bars needed, and pass those coordinates down to\n         * generateSVGPathString() to decide whether it needs to flip them\n         */\n        var barWidth = 8;\n        var x0 = _this.services.cartesianScales.getDomainValue(d, i) - barWidth / 2;\n        var x1 = x0 + barWidth;\n        var y0 = _this.services.cartesianScales.getRangeValue(0) + 1;\n\n        var y1 = _this.services.cartesianScales.getRangeValue(d, i);\n\n        return Tools.generateSVGPathString({\n          x0: x0,\n          x1: x1,\n          y0: y0,\n          y1: y1\n        }, _this.services.cartesianScales.getOrientation());\n      }).attr('opacity', 1) // a11y\n      .attr('role', Roles.GRAPHICS_SYMBOL).attr('aria-roledescription', 'bar').attr('aria-label', function (d) {\n        return d.value;\n      });\n    };\n\n    var renderTargetLines = function renderTargetLines() {\n      // Update data on all lines\n      var lines = DOMUtils.appendOrSelect(svg, 'g.markers').selectAll('path.marker').data(data.filter(function (d) {\n        return Tools.getProperty(d, 'marker') !== null;\n      }), function (datum) {\n        return datum[groupMapsTo];\n      }); // Remove lines that are no longer needed\n\n      lines.exit().attr('opacity', 0).remove(); // Add the paths that need to be introduced\n\n      var linesEnter = lines.enter().append('path').attr('opacity', 0);\n      linesEnter.merge(lines).classed('marker', true).transition(_this.services.transitions.getTransition('bullet-marker-update-enter', animate)).attr('d', function (d, i) {\n        /*\n         * Orientation support for horizontal/vertical bar charts\n         * Determine coordinates needed for a vertical set of paths\n         * to draw the bars needed, and pass those coordinates down to\n         * generateSVGPathString() to decide whether it needs to flip them\n         */\n        var lineHeight = 24;\n        var x0 = _this.services.cartesianScales.getDomainValue(d, i) - lineHeight / 2;\n        var x1 = x0 + lineHeight;\n\n        var y0 = _this.services.cartesianScales.getRangeValue(d.marker, i);\n\n        var y1 = y0;\n        return Tools.generateSVGPathString({\n          x0: x0,\n          x1: x1,\n          y0: y0,\n          y1: y1\n        }, _this.services.cartesianScales.getOrientation());\n      }).attr('opacity', 1);\n    };\n\n    var renderTargetQuartiles = function renderTargetQuartiles() {\n      var quartilesData = [];\n      data.filter(function (d) {\n        return Tools.getProperty(d, 'marker') !== null;\n      }).forEach(function (d) {\n        var value = d.marker;\n        var barValue = d[rangeIdentifier];\n        quartilesData = quartilesData.concat([{\n          datum: d,\n          value: value * 0.25,\n          barValue: barValue\n        }, {\n          datum: d,\n          value: value * 0.5,\n          barValue: barValue\n        }, {\n          datum: d,\n          value: value * 0.75,\n          barValue: barValue\n        }]);\n      }); // Update data on all lines\n\n      var lines = DOMUtils.appendOrSelect(svg, 'g.quartiles').selectAll('path.quartile').data(quartilesData, function (datum) {\n        return datum[groupMapsTo];\n      }); // Remove lines that are no longer needed\n\n      lines.exit().attr('opacity', 0).remove(); // Add the paths that need to be introduced\n\n      var linesEnter = lines.enter().append('path').attr('opacity', 0);\n      linesEnter.merge(lines).attr('class', function (d) {\n        return \"quartile \" + (d.value <= d.barValue ? 'over-bar' : '');\n      }).transition(_this.services.transitions.getTransition('bullet-quartile-update-enter', animate)).attr('d', function (_a, i) {\n        var d = _a.datum,\n            value = _a.value;\n        /*\n         * Orientation support for horizontal/vertical bar charts\n         * Determine coordinates needed for a vertical set of paths\n         * to draw the bars needed, and pass those coordinates down to\n         * generateSVGPathString() to decide whether it needs to flip them\n         */\n\n        var lineHeight = 4; // if it lines up with a performance area border\n        // make the line taller\n\n        if (d.ranges && d.ranges.indexOf(value) !== -1) {\n          lineHeight = 8;\n        }\n\n        var x0 = _this.services.cartesianScales.getDomainValue(d, i) - lineHeight / 2;\n        var x1 = x0 + lineHeight;\n\n        var y0 = _this.services.cartesianScales.getRangeValue(value, i);\n\n        var y1 = y0;\n        return Tools.generateSVGPathString({\n          x0: x0,\n          x1: x1,\n          y0: y0,\n          y1: y1\n        }, _this.services.cartesianScales.getOrientation());\n      }).attr('opacity', 1);\n    };\n\n    renderRangeBoxes();\n    renderBars();\n    renderTargetLines();\n    renderTargetQuartiles(); // Add event listeners to elements drawn\n\n    this.addEventListeners();\n  };\n\n  Bullet.prototype.getMatchingRangeIndexForDatapoint = function (datum) {\n    var matchingRangeIndex;\n\n    for (var i = datum.ranges.length - 1; i > 0; i--) {\n      var range = datum.ranges[i];\n\n      if (datum.value >= range) {\n        matchingRangeIndex = i;\n        return matchingRangeIndex;\n      }\n    }\n\n    return 0;\n  };\n\n  Bullet.prototype.addEventListeners = function () {\n    var self = this;\n    var options = this.getOptions();\n    var groupMapsTo = options.data.groupMapsTo;\n    var rangeIdentifier = this.services.cartesianScales.getRangeIdentifier();\n    this.parent.selectAll('path.bar').on('mouseover', function (datum) {\n      var hoveredElement = select(this);\n      hoveredElement.classed('hovered', true);\n      hoveredElement.transition(self.services.transitions.getTransition('graph_element_mouseover_fill_update')); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOVER, {\n        element: hoveredElement,\n        datum: datum\n      });\n      var performanceAreaTitles = Tools.getProperty(options, 'bullet', 'performanceAreaTitles');\n      var matchingRangeIndex = self.getMatchingRangeIndexForDatapoint(datum);\n      self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n        hoveredElement: hoveredElement,\n        items: [{\n          label: options.tooltip.groupLabel || 'Group',\n          value: datum[groupMapsTo],\n          class: self.model.getColorClassName({\n            classNameTypes: [ColorClassNameTypes.TOOLTIP],\n            dataGroupName: datum[groupMapsTo]\n          })\n        }, {\n          label: 'Value',\n          value: datum[rangeIdentifier]\n        }, {\n          label: 'Target',\n          value: datum.marker\n        }, {\n          label: 'Percentage',\n          value: Math.floor(datum[rangeIdentifier] / datum.marker * 100) + \"%\"\n        }, {\n          label: 'Performance',\n          value: performanceAreaTitles[matchingRangeIndex]\n        }]\n      });\n    }).on('mousemove', function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEMOVE, {\n        element: select(this),\n        datum: datum\n      });\n      self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n    }).on('click', function (datum) {\n      // Dispatch mouse event\n      self.services.events.dispatchEvent(Events.Bar.BAR_CLICK, {\n        element: select(this),\n        datum: datum\n      });\n    }).on('mouseout', function (datum) {\n      var hoveredElement = select(this);\n      hoveredElement.classed('hovered', false);\n      hoveredElement.transition(self.services.transitions.getTransition('graph_element_mouseout_fill_update')); // Dispatch mouse event\n\n      self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOUT, {\n        element: hoveredElement,\n        datum: datum\n      }); // Hide tooltip\n\n      self.services.events.dispatchEvent(Events.Tooltip.HIDE, {\n        hoveredElement: hoveredElement\n      });\n    });\n  };\n\n  Bullet.prototype.destroy = function () {\n    // Remove event listeners\n    this.parent.selectAll('path.bar').on('mouseover', null).on('mousemove', null).on('mouseout', null); // Remove legend listeners\n\n    var eventsFragment = this.services.events;\n    eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n    eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n  };\n\n  return Bullet;\n}(Component);\n\nexport { Bullet };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/components/graphs/bullet.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Component","Events","Roles","ColorClassNameTypes","Tools","DOMUtils","select","Bullet","_super","_this","apply","arguments","type","handleLegendOnHover","event","hoveredElement","detail","groupMapsTo","getOptions","data","parent","selectAll","transition","services","transitions","getTransition","attr","datum","handleLegendMouseOut","init","eventsFragment","events","addEventListener","Legend","ITEM_HOVER","ITEM_MOUSEOUT","render","animate","options","svg","getContainerSVG","withinChartClip","model","getDisplayData","configs","groups","rangeScale","cartesianScales","getRangeScale","rangeIdentifier","getRangeIdentifier","_a","range","rangeScaleStart","rangeScaleEnd","_b","domain","rangeScaleDomainMin","rangeScaleDomainMax","renderRangeBoxes","rangeBoxData","forEach","ranges","i","undefined","push","value","order","rangeBoxes","appendOrSelect","exit","remove","rangeBoxesEnter","enter","append","merge","lineHeight","x0","x1","y0","y1","getDomainValue","getRangeValue","generateSVGPathString","getOrientation","renderBars","bars","barsEnter","classed","getColorClassName","classNameTypes","FILL","dataGroupName","originalClassName","style","getFillColor","barWidth","GRAPHICS_SYMBOL","renderTargetLines","lines","filter","getProperty","linesEnter","marker","renderTargetQuartiles","quartilesData","barValue","concat","indexOf","addEventListeners","getMatchingRangeIndexForDatapoint","matchingRangeIndex","length","self","on","dispatchEvent","Bar","BAR_MOUSEOVER","element","performanceAreaTitles","Tooltip","SHOW","items","label","tooltip","groupLabel","class","TOOLTIP","Math","floor","BAR_MOUSEMOVE","MOVE","BAR_CLICK","BAR_MOUSEOUT","HIDE","destroy","removeEventListener"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Internal Imports\nimport { Component } from '../component';\nimport { Events, Roles, ColorClassNameTypes } from '../../interfaces';\nimport { Tools } from '../../tools';\nimport { DOMUtils } from '../../services';\n// D3 Imports\nimport { select } from 'd3-selection';\nvar Bullet = /** @class */ (function (_super) {\n    __extends(Bullet, _super);\n    function Bullet() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'bullet';\n        _this.handleLegendOnHover = function (event) {\n            var hoveredElement = event.detail.hoveredElement;\n            var groupMapsTo = _this.getOptions().data.groupMapsTo;\n            _this.parent\n                .selectAll('path.bar')\n                .transition(_this.services.transitions.getTransition('legend-hover-simple-bar'))\n                .attr('opacity', function (d) {\n                return d[groupMapsTo] !== hoveredElement.datum()['name'] ? 0.3 : 1;\n            });\n        };\n        _this.handleLegendMouseOut = function (event) {\n            _this.parent\n                .selectAll('path.bar')\n                .transition(_this.services.transitions.getTransition('legend-mouseout-simple-bar'))\n                .attr('opacity', 1);\n        };\n        return _this;\n    }\n    Bullet.prototype.init = function () {\n        var eventsFragment = this.services.events;\n        // Highlight correct circle on legend item hovers\n        eventsFragment.addEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n        // Un-highlight circles on legend item mouseouts\n        eventsFragment.addEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n    };\n    Bullet.prototype.render = function (animate) {\n        var _this = this;\n        var options = this.getOptions();\n        var groupMapsTo = options.data.groupMapsTo;\n        // Grab container SVG\n        var svg = this.getContainerSVG({ withinChartClip: true });\n        var data = this.model.getDisplayData(this.configs.groups);\n        var rangeScale = this.services.cartesianScales.getRangeScale();\n        var rangeIdentifier = this.services.cartesianScales.getRangeIdentifier();\n        var _a = rangeScale.range(), rangeScaleStart = _a[0], rangeScaleEnd = _a[1];\n        var _b = rangeScale.domain(), rangeScaleDomainMin = _b[0], rangeScaleDomainMax = _b[1];\n        var renderRangeBoxes = function () {\n            var rangeBoxData = [];\n            data.forEach(function (datum) {\n                if (datum.ranges) {\n                    datum.ranges.forEach(function (range, i) {\n                        if (range !== null &&\n                            range !== undefined &&\n                            range < rangeScaleDomainMax) {\n                            rangeBoxData.push({\n                                datum: datum,\n                                value: range,\n                                order: i + 1,\n                            });\n                        }\n                    });\n                }\n                else {\n                    rangeBoxData.push({\n                        datum: datum,\n                        order: 1,\n                    });\n                }\n            });\n            // Update data on all lines\n            var rangeBoxes = DOMUtils.appendOrSelect(svg, 'g.range-boxes')\n                .selectAll('path.range-box')\n                .data(rangeBoxData, function (datum) { return datum[groupMapsTo] + \"-\" + datum.order; });\n            // Remove lines that are no longer needed\n            rangeBoxes.exit().attr('opacity', 0).remove();\n            // Add the paths that need to be introduced\n            var rangeBoxesEnter = rangeBoxes\n                .enter()\n                .append('path')\n                .attr('opacity', 0);\n            rangeBoxesEnter\n                .merge(rangeBoxes)\n                .attr('class', function (d) { return \"range-box order-\" + d.order; })\n                .transition(_this.services.transitions.getTransition('bullet-range-box-update-enter', animate))\n                .attr('d', function (d, i) {\n                /*\n                 * Orientation support for horizontal/vertical bar charts\n                 * Determine coordinates needed for a vertical set of paths\n                 * to draw the bars needed, and pass those coordinates down to\n                 * generateSVGPathString() to decide whether it needs to flip them\n                 */\n                var lineHeight = 16;\n                var x0, x1, y0, y1;\n                if (d.order === 1) {\n                    x0 =\n                        _this.services.cartesianScales.getDomainValue(d.datum, i) -\n                            lineHeight / 2;\n                    x1 = x0 + lineHeight;\n                    y0 = rangeScaleEnd - 2;\n                    y1 = rangeScaleStart + 1;\n                }\n                else {\n                    x0 =\n                        _this.services.cartesianScales.getDomainValue(d.datum, i) -\n                            lineHeight / 2;\n                    x1 = x0 + lineHeight;\n                    y0 = _this.services.cartesianScales.getRangeValue(d.value, i);\n                    y1 = rangeScaleEnd;\n                }\n                return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, _this.services.cartesianScales.getOrientation());\n            })\n                .attr('opacity', 1);\n        };\n        var renderBars = function () {\n            // Update data on all bars\n            var bars = DOMUtils.appendOrSelect(svg, 'g.bars')\n                .selectAll('path.bar')\n                .data(data, function (datum) { return datum[groupMapsTo]; });\n            // Remove bars that are no longer needed\n            bars.exit().attr('opacity', 0).remove();\n            // Add the paths that need to be introduced\n            var barsEnter = bars.enter().append('path').attr('opacity', 0);\n            barsEnter\n                .merge(bars)\n                .classed('bar', true)\n                .transition(_this.services.transitions.getTransition('bullet-bar-update-enter', animate))\n                .attr('class', function (d) {\n                return _this.model.getColorClassName({\n                    classNameTypes: [ColorClassNameTypes.FILL],\n                    dataGroupName: d[groupMapsTo],\n                    originalClassName: 'bar',\n                });\n            })\n                .style('fill', function (d) { return _this.model.getFillColor(d[groupMapsTo]); })\n                .attr('d', function (d, i) {\n                /*\n                 * Orientation support for horizontal/vertical bar charts\n                 * Determine coordinates needed for a vertical set of paths\n                 * to draw the bars needed, and pass those coordinates down to\n                 * generateSVGPathString() to decide whether it needs to flip them\n                 */\n                var barWidth = 8;\n                var x0 = _this.services.cartesianScales.getDomainValue(d, i) -\n                    barWidth / 2;\n                var x1 = x0 + barWidth;\n                var y0 = _this.services.cartesianScales.getRangeValue(0) + 1;\n                var y1 = _this.services.cartesianScales.getRangeValue(d, i);\n                return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, _this.services.cartesianScales.getOrientation());\n            })\n                .attr('opacity', 1)\n                // a11y\n                .attr('role', Roles.GRAPHICS_SYMBOL)\n                .attr('aria-roledescription', 'bar')\n                .attr('aria-label', function (d) { return d.value; });\n        };\n        var renderTargetLines = function () {\n            // Update data on all lines\n            var lines = DOMUtils.appendOrSelect(svg, 'g.markers')\n                .selectAll('path.marker')\n                .data(data.filter(function (d) { return Tools.getProperty(d, 'marker') !== null; }), function (datum) { return datum[groupMapsTo]; });\n            // Remove lines that are no longer needed\n            lines.exit().attr('opacity', 0).remove();\n            // Add the paths that need to be introduced\n            var linesEnter = lines.enter().append('path').attr('opacity', 0);\n            linesEnter\n                .merge(lines)\n                .classed('marker', true)\n                .transition(_this.services.transitions.getTransition('bullet-marker-update-enter', animate))\n                .attr('d', function (d, i) {\n                /*\n                 * Orientation support for horizontal/vertical bar charts\n                 * Determine coordinates needed for a vertical set of paths\n                 * to draw the bars needed, and pass those coordinates down to\n                 * generateSVGPathString() to decide whether it needs to flip them\n                 */\n                var lineHeight = 24;\n                var x0 = _this.services.cartesianScales.getDomainValue(d, i) -\n                    lineHeight / 2;\n                var x1 = x0 + lineHeight;\n                var y0 = _this.services.cartesianScales.getRangeValue(d.marker, i);\n                var y1 = y0;\n                return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, _this.services.cartesianScales.getOrientation());\n            })\n                .attr('opacity', 1);\n        };\n        var renderTargetQuartiles = function () {\n            var quartilesData = [];\n            data.filter(function (d) { return Tools.getProperty(d, 'marker') !== null; }).forEach(function (d) {\n                var value = d.marker;\n                var barValue = d[rangeIdentifier];\n                quartilesData = quartilesData.concat([\n                    { datum: d, value: value * 0.25, barValue: barValue },\n                    { datum: d, value: value * 0.5, barValue: barValue },\n                    { datum: d, value: value * 0.75, barValue: barValue },\n                ]);\n            });\n            // Update data on all lines\n            var lines = DOMUtils.appendOrSelect(svg, 'g.quartiles')\n                .selectAll('path.quartile')\n                .data(quartilesData, function (datum) { return datum[groupMapsTo]; });\n            // Remove lines that are no longer needed\n            lines.exit().attr('opacity', 0).remove();\n            // Add the paths that need to be introduced\n            var linesEnter = lines.enter().append('path').attr('opacity', 0);\n            linesEnter\n                .merge(lines)\n                .attr('class', function (d) {\n                return \"quartile \" + (d.value <= d.barValue ? 'over-bar' : '');\n            })\n                .transition(_this.services.transitions.getTransition('bullet-quartile-update-enter', animate))\n                .attr('d', function (_a, i) {\n                var d = _a.datum, value = _a.value;\n                /*\n                 * Orientation support for horizontal/vertical bar charts\n                 * Determine coordinates needed for a vertical set of paths\n                 * to draw the bars needed, and pass those coordinates down to\n                 * generateSVGPathString() to decide whether it needs to flip them\n                 */\n                var lineHeight = 4;\n                // if it lines up with a performance area border\n                // make the line taller\n                if (d.ranges && d.ranges.indexOf(value) !== -1) {\n                    lineHeight = 8;\n                }\n                var x0 = _this.services.cartesianScales.getDomainValue(d, i) -\n                    lineHeight / 2;\n                var x1 = x0 + lineHeight;\n                var y0 = _this.services.cartesianScales.getRangeValue(value, i);\n                var y1 = y0;\n                return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, _this.services.cartesianScales.getOrientation());\n            })\n                .attr('opacity', 1);\n        };\n        renderRangeBoxes();\n        renderBars();\n        renderTargetLines();\n        renderTargetQuartiles();\n        // Add event listeners to elements drawn\n        this.addEventListeners();\n    };\n    Bullet.prototype.getMatchingRangeIndexForDatapoint = function (datum) {\n        var matchingRangeIndex;\n        for (var i = datum.ranges.length - 1; i > 0; i--) {\n            var range = datum.ranges[i];\n            if (datum.value >= range) {\n                matchingRangeIndex = i;\n                return matchingRangeIndex;\n            }\n        }\n        return 0;\n    };\n    Bullet.prototype.addEventListeners = function () {\n        var self = this;\n        var options = this.getOptions();\n        var groupMapsTo = options.data.groupMapsTo;\n        var rangeIdentifier = this.services.cartesianScales.getRangeIdentifier();\n        this.parent\n            .selectAll('path.bar')\n            .on('mouseover', function (datum) {\n            var hoveredElement = select(this);\n            hoveredElement.classed('hovered', true);\n            hoveredElement.transition(self.services.transitions.getTransition('graph_element_mouseover_fill_update'));\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOVER, {\n                element: hoveredElement,\n                datum: datum,\n            });\n            var performanceAreaTitles = Tools.getProperty(options, 'bullet', 'performanceAreaTitles');\n            var matchingRangeIndex = self.getMatchingRangeIndexForDatapoint(datum);\n            self.services.events.dispatchEvent(Events.Tooltip.SHOW, {\n                hoveredElement: hoveredElement,\n                items: [\n                    {\n                        label: options.tooltip.groupLabel || 'Group',\n                        value: datum[groupMapsTo],\n                        class: self.model.getColorClassName({\n                            classNameTypes: [ColorClassNameTypes.TOOLTIP],\n                            dataGroupName: datum[groupMapsTo],\n                        }),\n                    },\n                    {\n                        label: 'Value',\n                        value: datum[rangeIdentifier],\n                    },\n                    {\n                        label: 'Target',\n                        value: datum.marker,\n                    },\n                    {\n                        label: 'Percentage',\n                        value: Math.floor((datum[rangeIdentifier] / datum.marker) * 100) + \"%\",\n                    },\n                    {\n                        label: 'Performance',\n                        value: performanceAreaTitles[matchingRangeIndex],\n                    },\n                ],\n            });\n        })\n            .on('mousemove', function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEMOVE, {\n                element: select(this),\n                datum: datum,\n            });\n            self.services.events.dispatchEvent(Events.Tooltip.MOVE);\n        })\n            .on('click', function (datum) {\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_CLICK, {\n                element: select(this),\n                datum: datum,\n            });\n        })\n            .on('mouseout', function (datum) {\n            var hoveredElement = select(this);\n            hoveredElement.classed('hovered', false);\n            hoveredElement.transition(self.services.transitions.getTransition('graph_element_mouseout_fill_update'));\n            // Dispatch mouse event\n            self.services.events.dispatchEvent(Events.Bar.BAR_MOUSEOUT, {\n                element: hoveredElement,\n                datum: datum,\n            });\n            // Hide tooltip\n            self.services.events.dispatchEvent(Events.Tooltip.HIDE, {\n                hoveredElement: hoveredElement,\n            });\n        });\n    };\n    Bullet.prototype.destroy = function () {\n        // Remove event listeners\n        this.parent\n            .selectAll('path.bar')\n            .on('mouseover', null)\n            .on('mousemove', null)\n            .on('mouseout', null);\n        // Remove legend listeners\n        var eventsFragment = this.services.events;\n        eventsFragment.removeEventListener(Events.Legend.ITEM_HOVER, this.handleLegendOnHover);\n        eventsFragment.removeEventListener(Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);\n    };\n    return Bullet;\n}(Component));\nexport { Bullet };\n//# sourceMappingURL=../../../src/components/graphs/bullet.js.map"]},"metadata":{},"sourceType":"module"}