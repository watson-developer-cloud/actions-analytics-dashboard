{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Component } from '../component';\nimport { Tools } from '../../tools';\nimport { DOMUtils } from '../../services';\nimport { AxisPositions, Events, ScaleTypes } from '../../interfaces';\nimport { select, mouse } from 'd3-selection'; // Carbon position service\n\nimport Position, { PLACEMENTS } from '@carbon/utils-position'; // import the settings for the css prefix\n\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { formatTick, computeTimeIntervalName } from '../../services/time-series';\n\nvar Threshold =\n/** @class */\nfunction (_super) {\n  __extends(Threshold, _super);\n\n  function Threshold(model, services) {\n    var _this = _super.call(this, model, services) || this;\n\n    _this.type = 'threshold';\n    _this.positionService = new Position();\n    return _this;\n  }\n\n  Threshold.prototype.render = function (animate) {\n    var _this = this;\n\n    if (animate === void 0) {\n      animate = false;\n    }\n\n    var axesOptions = Tools.getProperty(this.getOptions(), 'axes');\n    var thresholdData = [];\n    Object.keys(axesOptions).forEach(function (axisPosition) {\n      if (Object.values(AxisPositions).includes(axisPosition)) {\n        var axisOptions = axesOptions[axisPosition];\n\n        if (axisOptions.thresholds && axisOptions.thresholds.length > 0) {\n          thresholdData.push({\n            axisPosition: axisPosition,\n            thresholds: axisOptions.thresholds\n          });\n        }\n      }\n    }); // Grab container SVG\n\n    var svg = this.getContainerSVG({\n      withinChartClip: true\n    }); // Update data on all axis threshold groups\n\n    var thresholdAxisGroups = svg.selectAll('g.axis-thresholds').data(thresholdData, function (thresholdData) {\n      return thresholdData.axisPosition;\n    }); // Remove axis threshold groups that are no longer needed\n\n    thresholdAxisGroups.exit().attr('opacity', 0).remove(); // Add the axis threshold groups that need to be introduced\n\n    var thresholdAxisGroupsEnter = thresholdAxisGroups.enter().append('g');\n    var thresholdAxisGroupsMerge = thresholdAxisGroupsEnter.merge(thresholdAxisGroups);\n    thresholdAxisGroupsMerge.attr('class', function (d) {\n      return \"axis-thresholds \" + d.axisPosition;\n    });\n    var thresholdGroups = thresholdAxisGroupsMerge.selectAll('g.threshold-group').data(function (d) {\n      return d.thresholds.map(function (threshold) {\n        threshold.axisPosition = d.axisPosition;\n        return threshold;\n      });\n    }); // Remove threshold groups that are no longer needed\n\n    thresholdGroups.exit().attr('opacity', 0).remove(); // Add the threshold groups that need to be introduced\n\n    var thresholdGroupsEnter = thresholdGroups.enter().append('g');\n    thresholdGroupsEnter.append('line').attr('class', 'threshold-line');\n    thresholdGroupsEnter.append('rect').attr('class', 'threshold-hoverable-area');\n    var thresholdGroupsMerge = thresholdGroupsEnter.merge(thresholdGroups);\n    thresholdGroupsMerge.attr('class', 'threshold-group');\n    var self = this;\n    thresholdAxisGroupsMerge.each(function (_a) {\n      var axisPosition = _a.axisPosition;\n      var scale = self.services.cartesianScales.getScaleByPosition(axisPosition);\n      var scaleType = self.services.cartesianScales.getScaleTypeByPosition(axisPosition);\n      var mainXScale = self.services.cartesianScales.getMainXScale();\n      var mainYScale = self.services.cartesianScales.getMainYScale();\n      var isScaleTypeLabels = scaleType === ScaleTypes.LABELS;\n\n      var _b = mainXScale.range(),\n          xScaleStart = _b[0],\n          xScaleEnd = _b[1];\n\n      var _c = mainYScale.range(),\n          yScaleEnd = _c[0],\n          yScaleStart = _c[1];\n\n      var cartesianScales = self.services.cartesianScales;\n      var orientation = cartesianScales.getOrientation();\n\n      var getDomainValue = function getDomainValue(d) {\n        return cartesianScales.getDomainValue(d);\n      };\n\n      var getRangeValue = function getRangeValue(d) {\n        return cartesianScales.getRangeValue(d);\n      };\n\n      var _d = Tools.flipDomainAndRangeBasedOnOrientation(getDomainValue, getRangeValue, orientation),\n          getXValue = _d[0],\n          getYValue = _d[1];\n\n      var group = select(this);\n\n      if (axisPosition === AxisPositions.TOP || axisPosition === AxisPositions.BOTTOM) {\n        group.selectAll('line.threshold-line').transition(self.services.transitions.getTransition('threshold-line-update', animate)).attr('y1', yScaleStart).attr('y2', yScaleEnd).attr('x1', function (_a) {\n          var value = _a.value;\n          return getXValue(value) + (isScaleTypeLabels ? scale.step() / 2 : 0);\n        }).attr('x2', function (_a) {\n          var value = _a.value;\n          return getXValue(value) + (isScaleTypeLabels ? scale.step() / 2 : 0);\n        }).style('stroke', function (_a) {\n          var fillColor = _a.fillColor;\n          return fillColor;\n        }); // Set hoverable area width and rotate it\n\n        group.selectAll('rect.threshold-hoverable-area').attr('x', 0).attr('y', function (_a) {\n          var value = _a.value;\n          return -getXValue(value);\n        }).attr('width', Math.abs(yScaleEnd - yScaleStart)).classed('rotate', true);\n      } else {\n        group.selectAll('line.threshold-line').transition(self.services.transitions.getTransition('threshold-line-update', animate)).attr('x1', xScaleStart).attr('x2', xScaleEnd).attr('y1', function (_a) {\n          var value = _a.value;\n          return getYValue(value) + (isScaleTypeLabels ? scale.step() / 2 : 0);\n        }).attr('y2', function (_a) {\n          var value = _a.value;\n          return getYValue(value) + (isScaleTypeLabels ? scale.step() / 2 : 0);\n        }).style('stroke', function (_a) {\n          var fillColor = _a.fillColor;\n          return fillColor;\n        }); // Set hoverable area width\n\n        group.selectAll('rect.threshold-hoverable-area').attr('x', xScaleStart).attr('y', function (_a) {\n          var value = _a.value;\n          return getYValue(value);\n        }).attr('width', Math.abs(xScaleEnd - xScaleStart)).classed('rotate', false);\n      }\n    }); // Add event listener for showing the threshold tooltip\n\n    this.services.events.addEventListener(Events.Threshold.SHOW, function (e) {\n      _this.setThresholdLabelPosition(e.detail.datum);\n\n      _this.label.classed('hidden', false);\n    }); // Add event listener for hiding the threshold tooltip\n\n    this.services.events.addEventListener(Events.Threshold.HIDE, function (e) {\n      _this.label.classed('hidden', true);\n    });\n    this.appendThresholdLabel();\n    this.addEventListeners();\n  };\n\n  Threshold.prototype.getFormattedValue = function (datum) {\n    var value = datum.value,\n        axisPosition = datum.axisPosition;\n    var options = this.getOptions();\n    var scaleType = this.services.cartesianScales.getScaleTypeByPosition(axisPosition); // If scale is time, format the threshold date as the ticks format\n\n    if (scaleType === ScaleTypes.TIME) {\n      var isVertical = [AxisPositions.LEFT, AxisPositions.RIGHT].includes(axisPosition);\n      var mainXScale = this.services.cartesianScales.getMainXScale();\n      var mainYScale = this.services.cartesianScales.getMainYScale();\n      var scale = isVertical ? mainYScale : mainXScale;\n      var timeScaleOptions = Tools.getProperty(options, 'timeScale');\n      var timeInterval = computeTimeIntervalName(scale.ticks());\n      return formatTick(value, 0, scale.ticks(), timeInterval, timeScaleOptions);\n    }\n\n    return value.toLocaleString('en');\n  };\n\n  Threshold.prototype.appendThresholdLabel = function () {\n    var holder = select(this.services.domUtils.getHolder());\n    var chartprefix = Tools.getProperty(this.getOptions(), 'style', 'prefix');\n    this.label = DOMUtils.appendOrSelect(holder, \"div.\" + settings.prefix + \"--\" + chartprefix + \"--threshold--label\").classed('hidden', true);\n  };\n\n  Threshold.prototype.setThresholdLabelPosition = function (datum) {\n    var holder = this.services.domUtils.getHolder();\n    var mouseRelativePos = mouse(holder); // Format the threshold value using valueFormatter if defined in user-provided options\n\n    var formattedValue = datum.valueFormatter ? datum.valueFormatter(datum.value) : this.getFormattedValue(datum);\n    this.label.html((datum.label || 'Threshold') + \": \" + formattedValue).style('background-color', datum.fillColor);\n    var target = this.label.node(); // Find out whether threshold label should be shown on the left or right side\n\n    var bestPlacementOption = this.positionService.findBestPlacementAt({\n      left: mouseRelativePos[0],\n      top: mouseRelativePos[1]\n    }, target, [PLACEMENTS.RIGHT, PLACEMENTS.LEFT, PLACEMENTS.TOP, PLACEMENTS.BOTTOM], function () {\n      return {\n        width: holder.offsetWidth,\n        height: holder.offsetHeight\n      };\n    }); // Get coordinates to where label should be positioned\n\n    var pos = this.positionService.findPositionAt({\n      left: mouseRelativePos[0],\n      top: mouseRelativePos[1]\n    }, target, bestPlacementOption);\n    this.positionService.setElement(target, pos);\n  };\n\n  Threshold.prototype.addEventListeners = function () {\n    var self = this; // Grab container SVG\n\n    var svg = this.getContainerSVG({\n      withinChartClip: true\n    }); // Add events to the threshold hoverable area\n\n    svg.selectAll('rect.threshold-hoverable-area').on('mouseover mousemove', function () {\n      select(this.parentNode).select('line.threshold-line').classed('active', true);\n      self.services.events.dispatchEvent(Events.Threshold.SHOW, {\n        hoveredElement: select(this),\n        datum: select(this).datum()\n      });\n    }).on('mouseout', function () {\n      select(this.parentNode).select('line.threshold-line').classed('active', false);\n      self.services.events.dispatchEvent(Events.Threshold.HIDE, {\n        hoveredElement: select(this),\n        datum: select(this).datum()\n      });\n    });\n  };\n\n  return Threshold;\n}(Component);\n\nexport { Threshold };","map":{"version":3,"sources":["/Users/zander/Documents/Development/ActionsLogging/Dashboard/node_modules/@carbon/charts/components/essentials/threshold.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Component","Tools","DOMUtils","AxisPositions","Events","ScaleTypes","select","mouse","Position","PLACEMENTS","settings","formatTick","computeTimeIntervalName","Threshold","_super","model","services","_this","call","type","positionService","render","animate","axesOptions","getProperty","getOptions","thresholdData","keys","forEach","axisPosition","values","includes","axisOptions","thresholds","length","push","svg","getContainerSVG","withinChartClip","thresholdAxisGroups","selectAll","data","exit","attr","remove","thresholdAxisGroupsEnter","enter","append","thresholdAxisGroupsMerge","merge","thresholdGroups","map","threshold","thresholdGroupsEnter","thresholdGroupsMerge","self","each","_a","scale","cartesianScales","getScaleByPosition","scaleType","getScaleTypeByPosition","mainXScale","getMainXScale","mainYScale","getMainYScale","isScaleTypeLabels","LABELS","_b","range","xScaleStart","xScaleEnd","_c","yScaleEnd","yScaleStart","orientation","getOrientation","getDomainValue","getRangeValue","_d","flipDomainAndRangeBasedOnOrientation","getXValue","getYValue","group","TOP","BOTTOM","transition","transitions","getTransition","value","step","style","fillColor","Math","abs","classed","events","addEventListener","SHOW","e","setThresholdLabelPosition","detail","datum","label","HIDE","appendThresholdLabel","addEventListeners","getFormattedValue","options","TIME","isVertical","LEFT","RIGHT","timeScaleOptions","timeInterval","ticks","toLocaleString","holder","domUtils","getHolder","chartprefix","appendOrSelect","prefix","mouseRelativePos","formattedValue","valueFormatter","html","target","node","bestPlacementOption","findBestPlacementAt","left","top","width","offsetWidth","height","offsetHeight","pos","findPositionAt","setElement","on","parentNode","dispatchEvent","hoveredElement"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Component } from '../component';\nimport { Tools } from '../../tools';\nimport { DOMUtils } from '../../services';\nimport { AxisPositions, Events, ScaleTypes } from '../../interfaces';\nimport { select, mouse } from 'd3-selection';\n// Carbon position service\nimport Position, { PLACEMENTS } from '@carbon/utils-position';\n// import the settings for the css prefix\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { formatTick, computeTimeIntervalName, } from '../../services/time-series';\nvar Threshold = /** @class */ (function (_super) {\n    __extends(Threshold, _super);\n    function Threshold(model, services) {\n        var _this = _super.call(this, model, services) || this;\n        _this.type = 'threshold';\n        _this.positionService = new Position();\n        return _this;\n    }\n    Threshold.prototype.render = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = false; }\n        var axesOptions = Tools.getProperty(this.getOptions(), 'axes');\n        var thresholdData = [];\n        Object.keys(axesOptions).forEach(function (axisPosition) {\n            if (Object.values(AxisPositions).includes(axisPosition)) {\n                var axisOptions = axesOptions[axisPosition];\n                if (axisOptions.thresholds &&\n                    axisOptions.thresholds.length > 0) {\n                    thresholdData.push({\n                        axisPosition: axisPosition,\n                        thresholds: axisOptions.thresholds,\n                    });\n                }\n            }\n        });\n        // Grab container SVG\n        var svg = this.getContainerSVG({ withinChartClip: true });\n        // Update data on all axis threshold groups\n        var thresholdAxisGroups = svg\n            .selectAll('g.axis-thresholds')\n            .data(thresholdData, function (thresholdData) { return thresholdData.axisPosition; });\n        // Remove axis threshold groups that are no longer needed\n        thresholdAxisGroups.exit().attr('opacity', 0).remove();\n        // Add the axis threshold groups that need to be introduced\n        var thresholdAxisGroupsEnter = thresholdAxisGroups\n            .enter()\n            .append('g');\n        var thresholdAxisGroupsMerge = thresholdAxisGroupsEnter.merge(thresholdAxisGroups);\n        thresholdAxisGroupsMerge.attr('class', function (d) { return \"axis-thresholds \" + d.axisPosition; });\n        var thresholdGroups = thresholdAxisGroupsMerge\n            .selectAll('g.threshold-group')\n            .data(function (d) {\n            return d.thresholds.map(function (threshold) {\n                threshold.axisPosition = d.axisPosition;\n                return threshold;\n            });\n        });\n        // Remove threshold groups that are no longer needed\n        thresholdGroups.exit().attr('opacity', 0).remove();\n        // Add the threshold groups that need to be introduced\n        var thresholdGroupsEnter = thresholdGroups.enter().append('g');\n        thresholdGroupsEnter.append('line').attr('class', 'threshold-line');\n        thresholdGroupsEnter\n            .append('rect')\n            .attr('class', 'threshold-hoverable-area');\n        var thresholdGroupsMerge = thresholdGroupsEnter.merge(thresholdGroups);\n        thresholdGroupsMerge.attr('class', 'threshold-group');\n        var self = this;\n        thresholdAxisGroupsMerge.each(function (_a) {\n            var axisPosition = _a.axisPosition;\n            var scale = self.services.cartesianScales.getScaleByPosition(axisPosition);\n            var scaleType = self.services.cartesianScales.getScaleTypeByPosition(axisPosition);\n            var mainXScale = self.services.cartesianScales.getMainXScale();\n            var mainYScale = self.services.cartesianScales.getMainYScale();\n            var isScaleTypeLabels = scaleType === ScaleTypes.LABELS;\n            var _b = mainXScale.range(), xScaleStart = _b[0], xScaleEnd = _b[1];\n            var _c = mainYScale.range(), yScaleEnd = _c[0], yScaleStart = _c[1];\n            var cartesianScales = self.services.cartesianScales;\n            var orientation = cartesianScales.getOrientation();\n            var getDomainValue = function (d) { return cartesianScales.getDomainValue(d); };\n            var getRangeValue = function (d) { return cartesianScales.getRangeValue(d); };\n            var _d = Tools.flipDomainAndRangeBasedOnOrientation(getDomainValue, getRangeValue, orientation), getXValue = _d[0], getYValue = _d[1];\n            var group = select(this);\n            if (axisPosition === AxisPositions.TOP ||\n                axisPosition === AxisPositions.BOTTOM) {\n                group\n                    .selectAll('line.threshold-line')\n                    .transition(self.services.transitions.getTransition('threshold-line-update', animate))\n                    .attr('y1', yScaleStart)\n                    .attr('y2', yScaleEnd)\n                    .attr('x1', function (_a) {\n                    var value = _a.value;\n                    return getXValue(value) +\n                        (isScaleTypeLabels ? scale.step() / 2 : 0);\n                })\n                    .attr('x2', function (_a) {\n                    var value = _a.value;\n                    return getXValue(value) +\n                        (isScaleTypeLabels ? scale.step() / 2 : 0);\n                })\n                    .style('stroke', function (_a) {\n                    var fillColor = _a.fillColor;\n                    return fillColor;\n                });\n                // Set hoverable area width and rotate it\n                group\n                    .selectAll('rect.threshold-hoverable-area')\n                    .attr('x', 0)\n                    .attr('y', function (_a) {\n                    var value = _a.value;\n                    return -getXValue(value);\n                })\n                    .attr('width', Math.abs(yScaleEnd - yScaleStart))\n                    .classed('rotate', true);\n            }\n            else {\n                group\n                    .selectAll('line.threshold-line')\n                    .transition(self.services.transitions.getTransition('threshold-line-update', animate))\n                    .attr('x1', xScaleStart)\n                    .attr('x2', xScaleEnd)\n                    .attr('y1', function (_a) {\n                    var value = _a.value;\n                    return getYValue(value) +\n                        (isScaleTypeLabels ? scale.step() / 2 : 0);\n                })\n                    .attr('y2', function (_a) {\n                    var value = _a.value;\n                    return getYValue(value) +\n                        (isScaleTypeLabels ? scale.step() / 2 : 0);\n                })\n                    .style('stroke', function (_a) {\n                    var fillColor = _a.fillColor;\n                    return fillColor;\n                });\n                // Set hoverable area width\n                group\n                    .selectAll('rect.threshold-hoverable-area')\n                    .attr('x', xScaleStart)\n                    .attr('y', function (_a) {\n                    var value = _a.value;\n                    return getYValue(value);\n                })\n                    .attr('width', Math.abs(xScaleEnd - xScaleStart))\n                    .classed('rotate', false);\n            }\n        });\n        // Add event listener for showing the threshold tooltip\n        this.services.events.addEventListener(Events.Threshold.SHOW, function (e) {\n            _this.setThresholdLabelPosition(e.detail.datum);\n            _this.label.classed('hidden', false);\n        });\n        // Add event listener for hiding the threshold tooltip\n        this.services.events.addEventListener(Events.Threshold.HIDE, function (e) {\n            _this.label.classed('hidden', true);\n        });\n        this.appendThresholdLabel();\n        this.addEventListeners();\n    };\n    Threshold.prototype.getFormattedValue = function (datum) {\n        var value = datum.value, axisPosition = datum.axisPosition;\n        var options = this.getOptions();\n        var scaleType = this.services.cartesianScales.getScaleTypeByPosition(axisPosition);\n        // If scale is time, format the threshold date as the ticks format\n        if (scaleType === ScaleTypes.TIME) {\n            var isVertical = [\n                AxisPositions.LEFT,\n                AxisPositions.RIGHT,\n            ].includes(axisPosition);\n            var mainXScale = this.services.cartesianScales.getMainXScale();\n            var mainYScale = this.services.cartesianScales.getMainYScale();\n            var scale = isVertical ? mainYScale : mainXScale;\n            var timeScaleOptions = Tools.getProperty(options, 'timeScale');\n            var timeInterval = computeTimeIntervalName(scale.ticks());\n            return formatTick(value, 0, scale.ticks(), timeInterval, timeScaleOptions);\n        }\n        return value.toLocaleString('en');\n    };\n    Threshold.prototype.appendThresholdLabel = function () {\n        var holder = select(this.services.domUtils.getHolder());\n        var chartprefix = Tools.getProperty(this.getOptions(), 'style', 'prefix');\n        this.label = DOMUtils.appendOrSelect(holder, \"div.\" + settings.prefix + \"--\" + chartprefix + \"--threshold--label\").classed('hidden', true);\n    };\n    Threshold.prototype.setThresholdLabelPosition = function (datum) {\n        var holder = this.services.domUtils.getHolder();\n        var mouseRelativePos = mouse(holder);\n        // Format the threshold value using valueFormatter if defined in user-provided options\n        var formattedValue = datum.valueFormatter\n            ? datum.valueFormatter(datum.value)\n            : this.getFormattedValue(datum);\n        this.label\n            .html((datum.label || 'Threshold') + \": \" + formattedValue)\n            .style('background-color', datum.fillColor);\n        var target = this.label.node();\n        // Find out whether threshold label should be shown on the left or right side\n        var bestPlacementOption = this.positionService.findBestPlacementAt({\n            left: mouseRelativePos[0],\n            top: mouseRelativePos[1],\n        }, target, [\n            PLACEMENTS.RIGHT,\n            PLACEMENTS.LEFT,\n            PLACEMENTS.TOP,\n            PLACEMENTS.BOTTOM,\n        ], function () { return ({\n            width: holder.offsetWidth,\n            height: holder.offsetHeight,\n        }); });\n        // Get coordinates to where label should be positioned\n        var pos = this.positionService.findPositionAt({\n            left: mouseRelativePos[0],\n            top: mouseRelativePos[1],\n        }, target, bestPlacementOption);\n        this.positionService.setElement(target, pos);\n    };\n    Threshold.prototype.addEventListeners = function () {\n        var self = this;\n        // Grab container SVG\n        var svg = this.getContainerSVG({ withinChartClip: true });\n        // Add events to the threshold hoverable area\n        svg.selectAll('rect.threshold-hoverable-area')\n            .on('mouseover mousemove', function () {\n            select(this.parentNode)\n                .select('line.threshold-line')\n                .classed('active', true);\n            self.services.events.dispatchEvent(Events.Threshold.SHOW, {\n                hoveredElement: select(this),\n                datum: select(this).datum(),\n            });\n        })\n            .on('mouseout', function () {\n            select(this.parentNode)\n                .select('line.threshold-line')\n                .classed('active', false);\n            self.services.events.dispatchEvent(Events.Threshold.HIDE, {\n                hoveredElement: select(this),\n                datum: select(this).datum(),\n            });\n        });\n    };\n    return Threshold;\n}(Component));\nexport { Threshold };\n//# sourceMappingURL=../../../src/components/essentials/threshold.js.map"]},"metadata":{},"sourceType":"module"}